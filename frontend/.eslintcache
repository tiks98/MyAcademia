[{"D:\\GCFiles\\Sem6\\MyAcademia\\frontend\\src\\index.js":"1","D:\\GCFiles\\Sem6\\MyAcademia\\frontend\\src\\reportWebVitals.js":"2","D:\\GCFiles\\Sem6\\MyAcademia\\frontend\\src\\Context\\AuthContext.js":"3","D:\\GCFiles\\Sem6\\MyAcademia\\frontend\\src\\Components\\App.js":"4","D:\\GCFiles\\Sem6\\MyAcademia\\frontend\\src\\Services\\AuthService.js":"5","D:\\GCFiles\\Sem6\\MyAcademia\\frontend\\src\\Components\\Register.js":"6","D:\\GCFiles\\Sem6\\MyAcademia\\frontend\\src\\Components\\Navbar.js":"7","D:\\GCFiles\\Sem6\\MyAcademia\\frontend\\src\\Components\\Login.js":"8","D:\\GCFiles\\Sem6\\MyAcademia\\frontend\\src\\Components\\EducationForm.js":"9","D:\\GCFiles\\Sem6\\MyAcademia\\frontend\\src\\Components\\WorkForm.js":"10","D:\\GCFiles\\Sem6\\MyAcademia\\frontend\\src\\Components\\Home.js":"11","D:\\GCFiles\\Sem6\\MyAcademia\\frontend\\src\\Components\\IQTest.js":"12","D:\\GCFiles\\Sem6\\MyAcademia\\frontend\\src\\Components\\Messaging.js":"13","D:\\GCFiles\\Sem6\\MyAcademia\\frontend\\src\\Components\\NewBlog.js":"14","D:\\GCFiles\\Sem6\\MyAcademia\\frontend\\src\\Components\\ProfileForm.js":"15","D:\\GCFiles\\Sem6\\MyAcademia\\frontend\\src\\Components\\Challenge.js":"16","D:\\GCFiles\\Sem6\\MyAcademia\\frontend\\src\\Components\\Notification.js":"17","D:\\GCFiles\\Sem6\\MyAcademia\\frontend\\src\\Components\\Search.js":"18","D:\\GCFiles\\Sem6\\MyAcademia\\frontend\\src\\Components\\Profile.js":"19","D:\\GCFiles\\Sem6\\MyAcademia\\frontend\\src\\Components\\MyProfile.js":"20","D:\\GCFiles\\Sem6\\MyAcademia\\frontend\\src\\Components\\Message.js":"21","D:\\GCFiles\\Sem6\\MyAcademia\\frontend\\src\\Components\\NotificationPopUp.js":"22","D:\\GCFiles\\Sem6\\MyAcademia\\frontend\\src\\utils\\refreshToken.js":"23","D:\\GCFiles\\Sem6\\MyAcademia\\frontend\\src\\base.js":"24","D:\\GCFiles\\Sem6\\MyAcademia\\frontend\\src\\Components\\ChatFeed.jsx":"25","D:\\GCFiles\\Sem6\\MyAcademia\\frontend\\src\\Components\\MyMessage.jsx":"26","D:\\GCFiles\\Sem6\\MyAcademia\\frontend\\src\\Components\\TheirMessage.jsx":"27","D:\\GCFiles\\Sem6\\MyAcademia\\frontend\\src\\Components\\MessageForm.jsx":"28","D:\\GCFiles\\Sem6\\MyAcademia\\frontend\\src\\Components\\FriendsList.js":"29"},{"size":718,"mtime":1615589148734,"results":"30","hashOfConfig":"31"},{"size":362,"mtime":499162500000,"results":"32","hashOfConfig":"31"},{"size":1223,"mtime":1615329286698,"results":"33","hashOfConfig":"31"},{"size":1865,"mtime":1619902811177,"results":"34","hashOfConfig":"31"},{"size":939,"mtime":1614145291402,"results":"35","hashOfConfig":"31"},{"size":2568,"mtime":1618931189171,"results":"36","hashOfConfig":"31"},{"size":3407,"mtime":1615260186352,"results":"37","hashOfConfig":"31"},{"size":5903,"mtime":1618931189171,"results":"38","hashOfConfig":"31"},{"size":5124,"mtime":1618931189171,"results":"39","hashOfConfig":"31"},{"size":4812,"mtime":1618931189171,"results":"40","hashOfConfig":"31"},{"size":4608,"mtime":1618939224940,"results":"41","hashOfConfig":"31"},{"size":6077,"mtime":1618931189171,"results":"42","hashOfConfig":"31"},{"size":932,"mtime":1618931181342,"results":"43","hashOfConfig":"31"},{"size":4126,"mtime":1618935391584,"results":"44","hashOfConfig":"31"},{"size":6369,"mtime":1618931189171,"results":"45","hashOfConfig":"31"},{"size":7176,"mtime":1618931189171,"results":"46","hashOfConfig":"31"},{"size":11951,"mtime":1618931189171,"results":"47","hashOfConfig":"31"},{"size":8279,"mtime":1618931189171,"results":"48","hashOfConfig":"31"},{"size":17042,"mtime":1618931189171,"results":"49","hashOfConfig":"31"},{"size":28588,"mtime":1618931189171,"results":"50","hashOfConfig":"31"},{"size":428,"mtime":1612053677083,"results":"51","hashOfConfig":"31"},{"size":761,"mtime":1616447231292,"results":"52","hashOfConfig":"31"},{"size":493,"mtime":1612053677143,"results":"53","hashOfConfig":"31"},{"size":549,"mtime":1618931181357,"results":"54","hashOfConfig":"31"},{"size":2045,"mtime":1618931181342,"results":"55","hashOfConfig":"31"},{"size":545,"mtime":1618931181342,"results":"56","hashOfConfig":"31"},{"size":1044,"mtime":1618931181357,"results":"57","hashOfConfig":"31"},{"size":1504,"mtime":1618931181342,"results":"58","hashOfConfig":"31"},{"size":3498,"mtime":1619905066471,"results":"59","hashOfConfig":"31"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},"g3ihdh",{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"67","usedDeprecatedRules":"62"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"72","usedDeprecatedRules":"62"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"75","usedDeprecatedRules":"62"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"78","usedDeprecatedRules":"62"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"81","usedDeprecatedRules":"62"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"84","usedDeprecatedRules":"62"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"89","usedDeprecatedRules":"62"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"92","usedDeprecatedRules":"62"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"95","usedDeprecatedRules":"62"},{"filePath":"96","messages":"97","errorCount":0,"warningCount":22,"fixableErrorCount":0,"fixableWarningCount":0,"source":"98","usedDeprecatedRules":"62"},{"filePath":"99","messages":"100","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"101","messages":"102","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"103","usedDeprecatedRules":"62"},{"filePath":"104","messages":"105","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"106","usedDeprecatedRules":"62"},{"filePath":"107","messages":"108","errorCount":0,"warningCount":12,"fixableErrorCount":0,"fixableWarningCount":0,"source":"109","usedDeprecatedRules":"62"},{"filePath":"110","messages":"111","errorCount":0,"warningCount":13,"fixableErrorCount":0,"fixableWarningCount":0,"source":"112","usedDeprecatedRules":"62"},{"filePath":"113","messages":"114","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"115","usedDeprecatedRules":"62"},{"filePath":"116","messages":"117","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"118","messages":"119","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"120","messages":"121","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"122","messages":"123","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"124","messages":"125","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"126","messages":"127","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"128","messages":"129","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"130","messages":"131","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"132"},{"filePath":"133","messages":"134","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"135","usedDeprecatedRules":"62"},"D:\\GCFiles\\Sem6\\MyAcademia\\frontend\\src\\index.js",[],["136","137"],"D:\\GCFiles\\Sem6\\MyAcademia\\frontend\\src\\reportWebVitals.js",[],"D:\\GCFiles\\Sem6\\MyAcademia\\frontend\\src\\Context\\AuthContext.js",["138"],"import React, { createContext, useState, useEffect } from \"react\";\r\nimport AuthService from \"../Services/AuthService\";\r\n\r\nexport const AuthContext = createContext();\r\n\r\nexport default ({ children }) => {\r\n  const [user, setUser] = useState(null);\r\n  const [myprofileId, setMyProfileId] = useState(null);\r\n  const [googleLogin, setGoogleLogin] = useState(false);\r\n  const [isAuthenticated, setIsAuthenticated] = useState(false);\r\n  const [isLoaded, setIsLoaded] = useState(false);\r\n\r\n  useEffect(() => {\r\n    AuthService.isAuthenticated().then((data) => {\r\n      setUser(data.user);\r\n      setMyProfileId(data.myprofileId);\r\n      setGoogleLogin(data.googleLogin);\r\n      setIsAuthenticated(data.isAuthenticated);\r\n      setIsLoaded(true);\r\n    });\r\n  }, []);\r\n\r\n  return (\r\n    <div>\r\n      {!isLoaded ? (\r\n        <h1>Loading</h1>\r\n      ) : (\r\n        <AuthContext.Provider\r\n          value={{\r\n            user,\r\n            setUser,\r\n            isAuthenticated,\r\n            setIsAuthenticated,\r\n            googleLogin,\r\n            setGoogleLogin,\r\n            myprofileId,\r\n            setMyProfileId,\r\n          }}\r\n        >\r\n          {children}\r\n        </AuthContext.Provider>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n","D:\\GCFiles\\Sem6\\MyAcademia\\frontend\\src\\Components\\App.js",[],"D:\\GCFiles\\Sem6\\MyAcademia\\frontend\\src\\Services\\AuthService.js",["139"],"export default {\r\n  login: (user) => {\r\n    return fetch(\"/user/login\", {\r\n      method: \"post\",\r\n      body: JSON.stringify(user),\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n    }).then((res) => {\r\n      if (res.status !== 401) return res.json().then((data) => data);\r\n      else\r\n        return {\r\n          isAuthenticated: false,\r\n          user: { username: \"\" },\r\n          message: {\r\n            msgBody: \"Username or Password is incorrect, Please try again\",\r\n            msgError: true,\r\n          },\r\n        };\r\n    });\r\n  },\r\n  logout: () => {\r\n    return fetch(\"/user/logout\")\r\n      .then((res) => res.json())\r\n      .then((data) => data);\r\n  },\r\n  isAuthenticated: () => {\r\n    return fetch(\"/user/authenticated\").then((res) => {\r\n      if (res.status !== 401) return res.json().then((data) => data);\r\n      else return { isAuthenticated: false, user: { username: \"\" } };\r\n    });\r\n  },\r\n};\r\n","D:\\GCFiles\\Sem6\\MyAcademia\\frontend\\src\\Components\\Register.js",["140","141","142"],"import React, { useContext, useEffect, useRef, useState } from \"react\";\r\nimport Axios from \"axios\";\r\nimport { AuthContext } from \"../Context/AuthContext\";\r\nimport Message from \"./Message\";\r\nimport styling from \"../Styling/Registration-style.css\";\r\n\r\n//creating class and extending the component\r\nconst Register = (props) => {\r\n  const [user, setUser] = useState({ username: \"\", password: \"\" });\r\n  const [message, setMessage] = useState(null);\r\n  let timerID = useRef(null);\r\n\r\n  useEffect(() => {\r\n    return () => {\r\n      clearTimeout(timerID);\r\n    };\r\n  }, []);\r\n\r\n  //making function onChange to take value from input fields in the form\r\n  const onChange = (e) => {\r\n    e.preventDefault();\r\n    setUser({ ...user, [e.target.name]: e.target.value });\r\n  };\r\n\r\n  const resetForm = () => {\r\n    setUser({ username: \"\", password: \"\" });\r\n  };\r\n\r\n  // creating register function and using axios to store the value in database\r\n  // Reference: https://github.com/woodburydev/passport-local-video/blob/master/client/src/App.js\r\n  const onSubmit = (e) => {\r\n    e.preventDefault();\r\n    Axios({\r\n      method: \"POST\",\r\n      data: {\r\n        username: user.username,\r\n        password: user.password,\r\n      },\r\n      withCredentials: true,\r\n      url: \"http://localhost:4000/user/register\",\r\n    }).then((data) => {\r\n      const { message } = data.data;\r\n      setMessage(message);\r\n      resetForm();\r\n      console.log(message);\r\n      if (!message.msgError) {\r\n        timerID = setTimeout(() => {\r\n          props.history.push(\"/login\");\r\n        }, 2000);\r\n      }\r\n    });\r\n  };\r\n\r\n  // rendering the page with jsx elements\r\n  return (\r\n    <div className=\"register\">\r\n      <form onSubmit={onSubmit}>\r\n        <h1>Register</h1>\r\n        <hr></hr>\r\n        <label htmlFor=\"username\" className=\"sr-only\">\r\n          Username:{\" \"}\r\n        </label>\r\n        <input\r\n          placeholder=\"Enter Username\"\r\n          onChange={onChange}\r\n          name=\"username\"\r\n          type=\"text\"\r\n          className=\"form-control\"\r\n          required\r\n        />\r\n        <label htmlFor=\"password\" className=\"sr-only\">\r\n          Password:{\" \"}\r\n        </label>\r\n        <input\r\n          placeholder=\"Enter Password\"\r\n          onChange={onChange}\r\n          name=\"password\"\r\n          type=\"password\"\r\n          className=\"form-control\"\r\n          required\r\n        />\r\n        <button className=\"btn btn-lg btn-primary btn-block\">Submit</button>\r\n      </form>\r\n      {message ? <Message message={message} /> : null}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Register;\r\n","D:\\GCFiles\\Sem6\\MyAcademia\\frontend\\src\\Components\\Navbar.js",["143"],"import React, { useContext } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport AuthService from \"../Services/AuthService\";\r\nimport { AuthContext } from \"../Context/AuthContext\";\r\nimport { GoogleLogout } from \"react-google-login\";\r\n\r\nconst Navbar = (props) => {\r\n  const {\r\n    isAuthenticated,\r\n    user,\r\n    setIsAuthenticated,\r\n    setUser,\r\n    googleLogin,\r\n    setGoogleLogin,\r\n  } = useContext(AuthContext);\r\n\r\n  const onLogoutSuccess = (res) => {\r\n    AuthService.logout().then((data) => {\r\n      if (data.success) {\r\n        setUser(data.user);\r\n        setIsAuthenticated(false);\r\n        setGoogleLogin(false);\r\n      }\r\n    });\r\n    alert(\"Logout Successful\");\r\n  };\r\n\r\n  const onFailure = () => {\r\n    alert(\"Logout Unsuccessful, Please try again later\");\r\n  };\r\n\r\n  const onClickLogoutHandler = () => {\r\n    AuthService.logout().then((data) => {\r\n      if (data.success) {\r\n        setUser(data.user);\r\n        setIsAuthenticated(false);\r\n      }\r\n    });\r\n  };\r\n\r\n  const unauthenticatedNavbar = () => {\r\n    return (\r\n      <>\r\n        <Link to=\"/login\">\r\n          <li className=\"nav-item nav-link\">Login</li>\r\n        </Link>\r\n        <Link to=\"/register\">\r\n          <li className=\"nav-item nav-link\">Register</li>\r\n        </Link>\r\n      </>\r\n    );\r\n  };\r\n\r\n  const authenticatedNavbar = () => {\r\n    return (\r\n      <>\r\n        <Link to=\"/\">\r\n          <li className=\"nav-item nav-link\">Home</li>\r\n        </Link>\r\n        <Link to=\"/myprofile\">\r\n          <li className=\"nav-item nav-link\">Profile</li>\r\n        </Link>\r\n        <Link to=\"/messaging\">\r\n          <li className=\"nav-item nav-link\">Messaging</li>\r\n        </Link>\r\n        <Link to=\"/notification\">\r\n          <li className=\"nav-item nav-link\">Notification</li>\r\n        </Link>\r\n        <Link to=\"/challenge\">\r\n          <li className=\"nav-item nav-link\">Challenge</li>\r\n        </Link>\r\n        <Link to=\"/search\">\r\n          <li className=\"nav-item nav-link\">Search</li>\r\n        </Link>\r\n        {!googleLogin ? (\r\n          <button\r\n            type=\"button\"\r\n            className=\"btn btn-link nav-item nav-link\"\r\n            onClick={onClickLogoutHandler}\r\n          >\r\n            Logout\r\n          </button>\r\n        ) : (\r\n          <GoogleLogout\r\n            clientId=\"255153393550-c00iv7khe28pcrheeitfh6p20h6ie83o.apps.googleusercontent.com\"\r\n            buttonText=\"Logout\"\r\n            onLogoutSuccess={onLogoutSuccess}\r\n            onFailure={onFailure}\r\n            href=\"/login\"\r\n          ></GoogleLogout>\r\n        )}\r\n      </>\r\n    );\r\n  };\r\n\r\n  return (\r\n    <nav className=\"navbar navbar-expand-lg navbar-light bg-light\">\r\n      <div className=\"container-fluid\">\r\n        <div className=\"navbar-brand\">MyAcademia</div>\r\n        <button\r\n          className=\"navbar-toggler\"\r\n          type=\"button\"\r\n          data-bs-toggle=\"collapse\"\r\n          data-bs-target=\"#navbarText\"\r\n          aria-controls=\"navbarText\"\r\n          aria-expanded=\"false\"\r\n          aria-label=\"Toggle navigation\"\r\n        >\r\n          <span className=\"navbar-toggler-icon\"></span>\r\n        </button>\r\n        <div className=\"collapse navbar-collapse\" id=\"navbarText\">\r\n          <ul className=\"navbar-nav me-auto mb-2 mb-lg-0\">\r\n            {!isAuthenticated ? unauthenticatedNavbar() : authenticatedNavbar()}\r\n          </ul>\r\n        </div>\r\n      </div>\r\n    </nav>\r\n  );\r\n};\r\n\r\nexport default Navbar;\r\n","D:\\GCFiles\\Sem6\\MyAcademia\\frontend\\src\\Components\\Login.js",["144","145","146","147","148"],"import React, { useContext, useState } from \"react\";\r\nimport Axios from \"axios\";\r\nimport GoogleLogin from \"react-google-login\";\r\nimport { refreshTokenSetup } from \"../utils/refreshToken\";\r\nimport { AuthContext } from \"../Context/AuthContext\";\r\nimport AuthService from \"../Services/AuthService\";\r\nimport Message from \"./Message\";\r\nimport { Link } from \"react-router-dom\";\r\nimport logoMain from \"../Images/LogoMain.jpeg\"\r\nimport logoHome from \"../Images/LogoHomePage.jpeg\"\r\nimport style from \"../Styling/Registration-style.css\";\r\n\r\n//creating class and extending the component\r\nconst Login = (props) => {\r\n  const [user, setUser] = useState({ username: \"\", password: \"\" });\r\n  const [googleLogin, setGoogleLogin] = useState(false);\r\n  const [message, setMessage] = useState(null);\r\n  const authContext = useContext(AuthContext);\r\n\r\n  //making function getvalue to take value from input fields in the form\r\n  const onChange = (e) => {\r\n    e.preventDefault();\r\n    setUser({ ...user, [e.target.name]: e.target.value });\r\n  };\r\n\r\n  // creating login function and using axios to store the value in database\r\n  // Reference: https://www.youtube.com/watch?v=7_fo3nrqiY8&t=1332s\r\n  const onSubmit = (e) => {\r\n    e.preventDefault();\r\n    AuthService.login(user).then((data) => {\r\n      console.log(data);\r\n      const { isAuthenticated, user, message } = data;\r\n      if (isAuthenticated) {\r\n        authContext.setUser(user);\r\n        authContext.setGoogleLogin(false);\r\n        authContext.setIsAuthenticated(isAuthenticated);\r\n        props.history.push(\"/\");\r\n      } else setMessage(message);\r\n    });\r\n  };\r\n\r\n  const responseSuccessGoogle = async (res) => {\r\n    // res.preventDefault();\r\n    // console.log(res.profileObj);\r\n    try {\r\n      const GoogleUserObject = await res.profileObj;\r\n      console.log(GoogleUserObject);\r\n      if (GoogleUserObject) {\r\n        setUser({\r\n          ...user,\r\n          username: GoogleUserObject.givenName,\r\n          password: GoogleUserObject.googleId,\r\n        });\r\n        console.log(user);\r\n        if (user.username === \"\") {\r\n          setMessage({\r\n            msgBody: \"Please Try Your Google Login Again\",\r\n            msgError: true,\r\n          });\r\n        }\r\n      }\r\n      refreshTokenSetup(res);\r\n      Axios({\r\n        method: \"POST\",\r\n        data: {\r\n          ...user,\r\n          username: user.username,\r\n          password: user.password,\r\n        },\r\n        withCredentials: true,\r\n        url: \"http://localhost:4000/user/register\",\r\n      }).then((data) => {\r\n        const { message } = data.data;\r\n        console.log(message);\r\n        if (\r\n          message.msgBody === \"User Already Exists\" ||\r\n          message.msgError === true\r\n        ) {\r\n          setUser({\r\n            ...user,\r\n            username: user.username,\r\n            password: user.password,\r\n          });\r\n          console.log(user);\r\n          if (GoogleUserObject) {\r\n            if (user.username === \"\") {\r\n              setMessage({\r\n                message: {\r\n                  msgBody: \"Please Try Again\",\r\n                  msgError: true,\r\n                },\r\n              });\r\n            } else {\r\n              AuthService.login(user).then((data) => {\r\n                console.log(data);\r\n                const { isAuthenticated, user, message } = data;\r\n                if (isAuthenticated) {\r\n                  authContext.setUser(user);\r\n                  authContext.setGoogleLogin(true);\r\n                  authContext.setIsAuthenticated(isAuthenticated);\r\n                  console.log(\"Login Executed\");\r\n                  props.history.push(\"/\");\r\n                } else setMessage(message);\r\n              });\r\n            }\r\n          }\r\n        }\r\n      });\r\n    } catch (e) {\r\n      console.error(e);\r\n    }\r\n  };\r\n\r\n  const responseFailureGoogle = (res) => {};\r\n\r\n  // rendering the page with jsx elements\r\n  return (\r\n    <div className=\"logoMain\">\r\n      <img src={logoMain}></img>\r\n      <div className=\"login\">\r\n        <form onSubmit={onSubmit}>\r\n          <h1>Login</h1>\r\n          <div className=\"mb-3\">\r\n            <label htmlFor=\"username\" className=\"sr-only\">\r\n              Username:{\" \"}\r\n            </label>\r\n            <input\r\n              placeholder=\"Enter Username\"\r\n              onChange={onChange}\r\n              name=\"username\"\r\n              type=\"text\"\r\n              className=\"form-control\"\r\n              required\r\n            />\r\n          </div>\r\n          <div className=\"mb-3\">\r\n            <label htmlFor=\"password\" className=\"sr-only-password\">\r\n              Password:{\" \"}\r\n            </label>\r\n            <input\r\n              placeholder=\"Enter Password\"\r\n              onChange={onChange}\r\n              type=\"password\"\r\n              name=\"password\"\r\n              className=\"form-control\"\r\n              required\r\n            />\r\n          </div>\r\n          <div className=\"mb-3 col-12\">\r\n            <button className=\"btn tbn-lg btn-primary btn-submit\">Submit</button>\r\n          </div>\r\n          <div className=\"mb-3 col-12\">\r\n            <GoogleLogin\r\n              className=\"googleLogin\"\r\n              clientId=\"255153393550-c00iv7khe28pcrheeitfh6p20h6ie83o.apps.googleusercontent.com\"\r\n              buttonText=\"Login with Google\"\r\n              onSuccess={responseSuccessGoogle}\r\n              onFailure={responseFailureGoogle}\r\n              cookiePolicy={\"single_host_origin\"}\r\n              isSignedIn={true}\r\n\r\n            />\r\n          </div>\r\n          <div className=\"mb-3\">\r\n            <p> Not have Account? </p>\r\n              <Link to=\"/register\">\r\n                <button className=\"btn btn-lg btn-primary\" href=\"/register\">\r\n                  Create Account\r\n                </button>\r\n              </Link>\r\n          </div>\r\n        </form>\r\n        {message ? <Message message={message} /> : null}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Login;\r\n","D:\\GCFiles\\Sem6\\MyAcademia\\frontend\\src\\Components\\EducationForm.js",["149"],"import React, { useContext, useEffect, useRef, useState } from \"react\";\r\nimport Axios from \"axios\";\r\nimport { Redirect } from \"react-router-dom\";\r\nimport Message from \"./Message\";\r\nimport { AuthContext } from \"../Context/AuthContext\";\r\nimport style from '../Styling/profilePage.css';\r\n\r\nconst EducationForm = (props) => {\r\n  const { isAuthenticated, user } = useContext(AuthContext);\r\n\r\n  const [education, setEducation] = useState({\r\n    collegeName: \"\",\r\n    collegeLocation: \"\",\r\n    courseName: \"\",\r\n    graduationDate: \"\",\r\n    currentCollege: false,\r\n    username: \"\",\r\n  });\r\n  const [message, setMessage] = useState(null);\r\n  let timerID = useRef(null);\r\n\r\n  useEffect(() => {\r\n    return () => {\r\n      clearTimeout(timerID);\r\n    };\r\n  }, []);\r\n\r\n  //making function onChange to take value from input fields in the form\r\n  const onChange = (e) => {\r\n    e.preventDefault();\r\n    setEducation({ ...education, [e.target.name]: e.target.value });\r\n  };\r\n\r\n  const resetForm = () => {\r\n    setEducation({\r\n      collegeName: \"\",\r\n      collegeLocation: \"\",\r\n      courseName: \"\",\r\n      graduationDate: \"\",\r\n      currentCollege: false,\r\n      username: \"\",\r\n    });\r\n  };\r\n\r\n  const onSubmit = (e) => {\r\n    e.preventDefault();\r\n    Axios({\r\n      method: \"POST\",\r\n      data: {\r\n        collegeName: education.collegeName,\r\n        collegeLocation: education.collegeLocation,\r\n        courseName: education.courseName,\r\n        graduationDate: education.graduationDate,\r\n        currentCollege: education.currentCollege,\r\n        username: user.username,\r\n      },\r\n      withCredentials: true,\r\n      url: \"http://localhost:4000/neweducation\",\r\n    }).then((data) => {\r\n      console.log(data);\r\n      const { message } = data.data;\r\n      setMessage(message);\r\n      resetForm();\r\n      console.log(message);\r\n      if (!message.msgError) {\r\n        timerID = setTimeout(() => {\r\n          props.history.push(\"/myprofile\");\r\n        }, 2000);\r\n      }\r\n    });\r\n  };\r\n\r\n  return (\r\n    <div className=\"education\">\r\n      {!isAuthenticated ? <Redirect to=\"/login\" /> : null}\r\n      <form onSubmit={onSubmit}>\r\n        <h1>Add Your Education Details</h1>\r\n        <div className=\"mb-3\">\r\n          <label htmlFor=\"collegeName\" className=\"form-label\">\r\n            College Name:{\" \"}\r\n          </label>\r\n          <input\r\n            placeholder=\"Enter College or University Name\"\r\n            onChange={onChange}\r\n            name=\"collegeName\"\r\n            type=\"text\"\r\n            className=\"form-control\"\r\n            required\r\n          />\r\n        </div>\r\n        <div className=\"mb-3\">\r\n          <label htmlFor=\"collegeLocation\" className=\"form-label\">\r\n            Location of College or University:{\" \"}\r\n          </label>\r\n          <input\r\n            placeholder=\"Enter Location of College or University\"\r\n            onChange={onChange}\r\n            name=\"collegeLocation\"\r\n            type=\"text\"\r\n            className=\"form-control\"\r\n            required\r\n          />\r\n        </div>\r\n        <label htmlFor=\"username\" className=\"form-label form-control\">\r\n          Username: {user.username}\r\n        </label>\r\n        <div className=\"mb-3\">\r\n          <label htmlFor=\"courseName\" className=\"form-label\">\r\n            Name of your course:{\" \"}\r\n          </label>\r\n          <input\r\n            placeholder=\"Enter Course Name\"\r\n            onChange={onChange}\r\n            name=\"courseName\"\r\n            type=\"text\"\r\n            className=\"form-control\"\r\n            required\r\n          />\r\n        </div>\r\n        <div className=\"mb-3\">\r\n          <label htmlFor=\"graduationDate\" className=\"form-label\">\r\n            Enter Date of Graduation:{\" \"}\r\n          </label>\r\n          <input\r\n            placeholder=\"Enter Graduation Date\"\r\n            onChange={onChange}\r\n            name=\"graduationDate\"\r\n            type=\"date\"\r\n            className=\"form-control\"\r\n          />\r\n        </div>\r\n        <div className=\"mb-3\">\r\n          <label htmlFor=\"currentCollege\" className=\"form-label\">\r\n            Is this your Current College:{\" \"}\r\n          </label>\r\n          <div className=\"form-check\">\r\n            <input\r\n              className=\"form-check-input\"\r\n              type=\"radio\"\r\n              name=\"currentCollege\"\r\n              id=\"Yes\"\r\n              value=\"true\"\r\n              onChange={onChange}\r\n            />\r\n            <label className=\"form-check-label\" htmlFor=\"Yes\">\r\n              Yes\r\n            </label>\r\n          </div>\r\n          <div className=\"form-check\">\r\n            <input\r\n              className=\"form-check-input\"\r\n              type=\"radio\"\r\n              name=\"currentCollege\"\r\n              id=\"No\"\r\n              value=\"false\"\r\n              onChange={onChange}\r\n              checked\r\n            />\r\n            <label className=\"form-check-label\" htmlFor=\"No\">\r\n              No\r\n            </label>\r\n          </div>\r\n        </div>\r\n        <button className=\"btn btn-lg btn-primary btn-block\">Submit</button>\r\n      </form>\r\n      {message ? <Message message={message} /> : null}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default EducationForm;\r\n","D:\\GCFiles\\Sem6\\MyAcademia\\frontend\\src\\Components\\WorkForm.js",[],"D:\\GCFiles\\Sem6\\MyAcademia\\frontend\\src\\Components\\Home.js",["150","151","152","153","154","155","156","157","158","159"],"import React, { useContext, useEffect, useState } from \"react\";\r\nimport Axios from \"axios\";\r\nimport { Redirect } from \"react-router-dom\";\r\nimport { AuthContext } from \"../Context/AuthContext\";\r\nimport { Link } from \"react-router-dom\";\r\nimport \"./Home.css\";\r\n\r\nconst Home = (props) => {\r\n  const { isAuthenticated, user, googleLogin, myprofileId } = useContext(\r\n    AuthContext\r\n  );\r\n  const authContext = useContext(AuthContext);\r\n  const [i, SetI] = useState(false);\r\n  const [blogs, setBlogs] = useState([]);\r\n  const [profile, setProfile] = useState({\r\n    id: \"\",\r\n    photoUrl: \"\",\r\n    firstName: \"\",\r\n    lastName: \"\",\r\n    username: \"\",\r\n    email: \"\",\r\n    collegeName: \"\",\r\n    location: \"\",\r\n    IQ: 0,\r\n    about: \"\",\r\n    isFaculty: false,\r\n    friends: [],\r\n  });\r\n\r\n  useEffect(() => {\r\n    const username = user.username;\r\n    Axios({\r\n      method: \"GET\",\r\n      params: {\r\n        username: username,\r\n      },\r\n      url: \"http://localhost:4000/profile\",\r\n    }).then((data) => {\r\n      console.log(data);\r\n      if (data.data === null) {\r\n        console.log(\"No Profile data found\");\r\n      } else {\r\n        setProfile({\r\n          ...profile,\r\n          id: data.data._id,\r\n          photoUrl: data.data.photoUrl,\r\n          firstName: data.data.firstName,\r\n          lastName: data.data.lastName,\r\n          username: data.data.username,\r\n          email: data.data.email,\r\n          collegeName: data.data.collegeName,\r\n          location: data.data.location,\r\n          IQ: data.data.IQ,\r\n          about: data.data.about,\r\n          isFaculty: data.data.isFaculty,\r\n          friends: data.data.friends,\r\n        });\r\n      }\r\n    });\r\n  }, []);\r\n\r\n  const getMyProfile = () => {\r\n    if (i === false) {\r\n      authContext.setMyProfileId(profile.id);\r\n      console.log(myprofileId);\r\n      console.log(\"Profile ID\");\r\n      // console.log(myprofileId);\r\n      SetI(true);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    Axios.get(\"http://localhost:4000/getblog\")\r\n      .then((result) => setBlogs(result.data))\r\n      .catch((err) => console.error(err));\r\n  }, []);\r\n\r\n  const blogCreation = (e) => {\r\n    if (e.type == \"video\") {\r\n      return <iframe width=\"420\" height=\"315\" src={e.contentURL}></iframe>;\r\n    } else if (e.type == \"image\") {\r\n      return <img src={e.contentURL} width=\"420\" height=\"315\" />;\r\n    } else if ((e.type = \"pdf\")) {\r\n      return <embed src={e.contentURL} />;\r\n    } else {\r\n      return <link href={e.contentURL} width />;\r\n    }\r\n  };\r\n\r\n  const Post = (blog, key) => {\r\n    if (blog.username == profile.username) {\r\n      return (\r\n        <div className=\"blogArea\" key={key}>\r\n          <div>{blog.username}</div>\r\n          <div>{blog.postdate}</div>\r\n          <div>{blog.content}</div>\r\n          {blogCreation(blog)}\r\n        </div>\r\n      );\r\n    }\r\n\r\n    if (blog.sharing == \"connections\") {\r\n      console.log(profile.friends);\r\n      if (\r\n        profile.friends.find((e) => {\r\n          return e == blog.username;\r\n        }) != undefined\r\n      ) {\r\n        return (\r\n          <div className=\"blogArea\" key={key}>\r\n            <div className=\"username\">{blog.username}</div>\r\n            <div className=\"postdate\">{blog.postdate}</div>\r\n            <div className=\"content\">{blog.content}</div>\r\n            {blogCreation(blog)}\r\n          </div>\r\n        );\r\n      }\r\n    } else {\r\n      return (\r\n        <div className=\"blogArea\" key={key}>\r\n          <div>{blog.username}</div>\r\n          <div>{blog.postdate}</div>\r\n          <div>{blog.content}</div>\r\n          {blogCreation(blog)}\r\n        </div>\r\n      );\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      {!isAuthenticated ? <Redirect to=\"/login\" /> : null}\r\n      <h1>Welcome Back</h1>\r\n      <h2>{!user.username ? null : user.username}</h2>\r\n      {/* <h2>{!profile.id ? null : profile.id}</h2> */}\r\n      {/* {profile} */}\r\n      {/* <h2>{!myprofileId ? null : myprofileId}</h2> */}\r\n      {!profile.id ? null : getMyProfile()}\r\n      {/* {getMyProfile()} */}\r\n      <h2>{myprofileId}</h2>\r\n      <Link className=\"Links\" to={`/newblog`}>\r\n        Add New Blog\r\n      </Link>\r\n      {blogs\r\n        .sort((a, b) => {\r\n          if (a.postdate.slice(0, 4) === b.postdate.slice(0, 4)) {\r\n            if (a.postdate.slice(5, 7) === b.postdate.slice(5, 7))\r\n              return b.postdate.slice(8, 10) - a.postdate.slice(8, 10);\r\n            else return b.postdate.slice(5, 7) - a.postdate.slice(5, 7);\r\n          } else return b.postdate.slice(0, 4) - a.postdate.slice(0, 4);\r\n        })\r\n        .map((blog, key) => Post(blog, key))}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Home;\r\n","D:\\GCFiles\\Sem6\\MyAcademia\\frontend\\src\\Components\\IQTest.js",["160","161","162","163","164","165"],"import React, { useContext, useEffect, useState } from \"react\";\r\nimport Axios from \"axios\";\r\nimport { Redirect } from \"react-router-dom\";\r\nimport { AuthContext } from \"../Context/AuthContext\";\r\nimport { useStopwatch } from \"react-timer-hook\";\r\n\r\nconst IQTest = (props) => {\r\n  const { isAuthenticated, user } = useContext(AuthContext);\r\n  const [questions, setQuestions] = useState([]);\r\n  const [userAnswers, setUserAnswers] = useState([]);\r\n  const [showScore, setShowScore] = useState(false);\r\n  const [score, setScore] = useState(0);\r\n  const [currentQuestion, setCurrentQuestion] = useState(0);\r\n  const { seconds, minutes, isRunning, start, pause, reset } = useStopwatch({\r\n    autoStart: true,\r\n  });\r\n  const [myProfile, setMyProfile] = useState({\r\n    mypid: \"\",\r\n    firstName: \"\",\r\n    lastName: \"\",\r\n    IQ: 0,\r\n  });\r\n\r\n  useEffect(() => {\r\n    Axios({\r\n      method: \"GET\",\r\n      url: \"http://localhost:4000/getchallenge\",\r\n    }).then((data) => {\r\n      // console.log(data.data); Development purpose only\r\n      setQuestions(data.data);\r\n    });\r\n    Axios({\r\n      method: \"GET\",\r\n      url: \"http://localhost:4000/profile/\",\r\n      params: {\r\n        username: user.username,\r\n      },\r\n    }).then((data) => {\r\n      // console.log(data); Development purpose only\r\n      if (data.data === null) {\r\n        // console.log(\"No Profile data found\"); Development purpose only\r\n        window.location.reload(false);\r\n      } else {\r\n        setMyProfile({\r\n          ...myProfile,\r\n          mypid: data.data._id,\r\n          firstName: data.data.firstName,\r\n          lastName: data.data.lastName,\r\n          IQ: data.data.IQ,\r\n        });\r\n        // console.log(myProfile); Development purpose only\r\n      }\r\n    });\r\n  }, []);\r\n\r\n  const onChange = (e) => {\r\n    e.preventDefault();\r\n    setUserAnswers({ ...userAnswers, [e.target.name]: e.target.value });\r\n    // console.log(userAnswers); Development Purpose only\r\n  };\r\n\r\n  const MyStopwatch = () => {\r\n    return (\r\n      <div style={{ textAlign: \"center\", fontSize: \"20px\"}}>\r\n        {/* <p>Time</p> */}\r\n        <div style={{ fontSize: \"70px\" }}>\r\n          <span>{minutes}</span>:<span>{seconds}</span>\r\n        </div>\r\n        {/* <p>{isRunning ? \"Running\" : \"Not running\"}</p>\r\n        <button onClick={start}>Start</button>\r\n        <button onClick={pause}>Pause</button>\r\n        <button onClick={reset}>Reset</button> */}\r\n      </div>\r\n    );\r\n  };\r\n\r\n  const TestFinishAuto = () => {\r\n    pause(true);\r\n    setShowScore(true);\r\n    const timeTaken = `${minutes}:${seconds}`;\r\n    // console.log(timeTaken); Development purpose only\r\n    const secondsCalculation = minutes * 60 + seconds;\r\n    const minutesCalcualtion = seconds / 60 + minutes;\r\n    // console.log(secondsCalculation); Development purpose only\r\n    // console.log(minutesCalcualtion); Development purpose only\r\n    var IQ = (score / minutesCalcualtion) * 100;\r\n    if (IQ > 250) {\r\n      if (IQ > 999) {\r\n        IQ = IQ / 100;\r\n      } else {\r\n        IQ = IQ / 10;\r\n      }\r\n    }\r\n    const calculatedIQ = Math.round(IQ.toString());\r\n    // console.log(calculatedIQ); Development purpose only\r\n    if (calculatedIQ > myProfile.IQ) {\r\n      Axios({\r\n        method: \"put\",\r\n        data: {\r\n          IQ: calculatedIQ,\r\n        },\r\n        url: `http://localhost:4000/profile/${myProfile.mypid}`,\r\n      }).then((data) => {\r\n        // console.log(data.data); Development purpose only\r\n      });\r\n    }\r\n    Axios({\r\n      method: \"post\",\r\n      data: {\r\n        username: user.username,\r\n        fullname: `${myProfile.firstName} ${myProfile.lastName}`,\r\n        userScore: score,\r\n        calculatedIQ: calculatedIQ,\r\n        timeTaken: timeTaken,\r\n      },\r\n      url: \"http://localhost:4000/newscore\",\r\n    }).then((data) => {\r\n      // console.log(data.data); Development purpose only\r\n      props.history.push(\"/challenge\");\r\n    });\r\n    return <></>;\r\n  };\r\n\r\n  const answerOption = (isCorrect) => {\r\n    if (isCorrect) {\r\n      setScore(score + 1);\r\n    }\r\n\r\n    const nextQuestion = currentQuestion + 1;\r\n    if (nextQuestion < questions.length) {\r\n      setCurrentQuestion(nextQuestion);\r\n    } else {\r\n      TestFinishAuto();\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"iqTest\">\r\n      {!isAuthenticated ? <Redirect to=\"/login\" /> : null}\r\n      <h1>Welcome To IQ Test</h1>\r\n      \r\n      <h2 className=\"iqUsername\">{!user.username ? null : user.username}</h2>\r\n      <h2 className=\"iqName\">{!myProfile ? null : myProfile.firstName}</h2>\r\n      <ul>\r\n        <li><p className=\"iqTime\">You have 30 minutes to complete the test</p></li>\r\n        <li><p className=\"iqAbout\">\r\n          IQ calculated from this Test is not 100% accurate, it is based on your\r\n          score by your time taken</p></li>\r\n      </ul>\r\n      <div>\r\n        <MyStopwatch />\r\n      </div>\r\n      {minutes > 29 ? <TestFinishAuto /> : null}\r\n      {showScore ? (\r\n        <div>\r\n          You scored {score} out of {questions.length}\r\n        </div>\r\n      ) : (\r\n        <div>\r\n          {questions.length === 0 ? (\r\n            <h1>No Question available</h1>\r\n          ) : (\r\n            <>\r\n              <div className=\"question-section\">\r\n                <div className=\"question-count\">\r\n                  <span>Question {currentQuestion + 1}</span>/{questions.length}\r\n                </div>\r\n                <div className=\"question-text\">\r\n                  {questions[currentQuestion].question}\r\n                </div>\r\n              </div>\r\n              <div className=\"answer-section\">\r\n                {questions[currentQuestion].answers.map((answer) => (\r\n                  <div className=\"answerBtn\">\r\n                    <button\r\n                      className=\"btn btn-primary\"\r\n                      onClick={() => answerOption(answer.isCorrect)}\r\n                    >\r\n                      {answer.option}\r\n                    </button>\r\n                  </div>\r\n                ))}\r\n              </div>\r\n            </>\r\n          )}\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default IQTest;\r\n","D:\\GCFiles\\Sem6\\MyAcademia\\frontend\\src\\Components\\Messaging.js",["166"],"import React, { useContext } from \"react\";\r\nimport { Redirect } from \"react-router-dom\";\r\nimport { AuthContext } from \"../Context/AuthContext\";\r\nimport { ChatEngine } from 'react-chat-engine';\r\nimport ChatFeed from './ChatFeed'\r\nimport './Chat.css'\r\n\r\nconst projectID = 'ba51f22d-370e-42e6-96d5-d2bcd3c3d3c5';\r\n\r\n const Messaging = () => {\r\n  const { isAuthenticated, user, googleLogin } = useContext(AuthContext);\r\n  if(!isAuthenticated){return(<Redirect to=\"/login\" />)}\r\n\r\n  return (\r\n    <ChatEngine\r\n      height=\"100vh\"\r\n      projectID={projectID}\r\n      userName={user.username}\r\n      userSecret=\"123123\"\r\n      renderChatFeed={(chatAppProps) => <ChatFeed {...chatAppProps} />}\r\n      onNewMessage={() => new Audio('https://firebasestorage.googleapis.com/v0/b/myacademia-group-project.appspot.com/o/juntos-607.mp3?alt=media&token=a434fcc9-b49b-4b94-a6a3-e9a32157faf7').play()}\r\n    />\r\n  );\r\n};\r\n\r\nexport default Messaging;","D:\\GCFiles\\Sem6\\MyAcademia\\frontend\\src\\Components\\NewBlog.js",["167","168","169","170","171","172","173","174","175","176","177","178","179","180","181","182","183","184","185","186","187","188"],"import React, { useContext, useState } from \"react\";\r\nimport { Redirect, useHistory } from \"react-router-dom\";\r\nimport Axios from \"axios\";\r\nimport { AuthContext } from \"../Context/AuthContext\";\r\nimport { app } from \"../base\";\r\nimport Select from \"react-select\";\r\n\r\nfunction New(props) {\r\n  const { isAuthenticated, user } = useContext(AuthContext);\r\n\r\n  const options = [\r\n    { label: \"Connections\", value: \"connections\" },\r\n    { label: \"Everyone\", value: \"everyone\" },\r\n  ];\r\n\r\n  let file;\r\n  let storageRef;\r\n  let fileRef;\r\n  let link = \"\";\r\n  let fileType = \"\";\r\n  let ext = \"\";\r\n  const history = useHistory();\r\n\r\n  const [inputs, setInputs] = useState({\r\n    username: user.username,\r\n    content: \"\",\r\n    contentURL: \"\",\r\n    file: \"\",\r\n  });\r\n  const [redirect, setRedirect] = useState(false);\r\n\r\n  const [s, setS] = useState({\r\n    option: options[0].value,\r\n  });\r\n\r\n  const handleChange = (option) => {\r\n    s.option = option.value;\r\n    console.log(option);\r\n  };\r\n\r\n  const fileUpload = async () => {\r\n    if (file == undefined || file == \"\") return;\r\n\r\n    ext = file.name.split(\".\")[1];\r\n    let x =\r\n      Math.floor(Math.random() * 100000000000000 + 1).toString() + \".\" + ext;\r\n    storageRef = app.storage().ref();\r\n    fileRef = storageRef.child(x);\r\n    fileRef.getDownloadURL().then((e) => console.log(e.toString()));\r\n\r\n    await fileRef.put(file).then(async () => {\r\n      console.log(\"Completed\");\r\n    });\r\n\r\n    return console.log(\"completed\");\r\n  };\r\n\r\n  const onSubmit = async (e) => {\r\n    e.preventDefault();\r\n\r\n    await fileUpload();\r\n\r\n    if (file != undefined) {\r\n      console.log(file);\r\n      await fileRef.getDownloadURL().then((e) => (link = e.toString()));\r\n    }\r\n\r\n    if (\r\n      ext == \"mp4\" ||\r\n      ext == \"mov\" ||\r\n      ext == \"wmv\" ||\r\n      ext == \"flv\" ||\r\n      ext == \"avi\" ||\r\n      ext == \"avchd\" ||\r\n      ext == \"webm\" ||\r\n      ext == \"mkv\" ||\r\n      ext == \"mp3\"\r\n    ) {\r\n      fileType = \"video\";\r\n    } else if (\r\n      ext == \"jpeg\" ||\r\n      ext == \"jpg\" ||\r\n      ext == \"png\" ||\r\n      ext == \"gif\" ||\r\n      ext == \"tiff\" ||\r\n      ext == \"psd\" ||\r\n      ext == \"raw\"\r\n    ) {\r\n      fileType = \"image\";\r\n    } else if (ext == \"pdf\") {\r\n      fileType = \"pdf\";\r\n    } else {\r\n      fileType = \"url\";\r\n    }\r\n\r\n    if (file)\r\n      Axios({\r\n        method: \"POST\",\r\n        data: {\r\n          username: inputs.username,\r\n          content: inputs.content,\r\n          contentURL: link,\r\n          type: fileType,\r\n          sharing: s.option,\r\n        },\r\n        withCredentials: true,\r\n        url: \"http://localhost:4000/addblog\",\r\n      }).then((data) => console.log(\"Completed \" + data));\r\n    setTimeout(function () {\r\n      history.push(\"/\");\r\n    }, 3000);\r\n  };\r\n\r\n  function handleInputChange(event) {\r\n    event.persist();\r\n\r\n    const { name, value } = event.target;\r\n\r\n    setInputs((inputs) => {\r\n      inputs[name] = value;\r\n      return inputs;\r\n    });\r\n  }\r\n\r\n  function fileChange(e) {\r\n    file = e.target.files[0];\r\n  }\r\n\r\n  if (redirect) return <Redirect to=\"/index\" />;\r\n\r\n  return (\r\n    <div className=\"container\">\r\n      {!isAuthenticated ? <Redirect to=\"/login\" /> : null}\r\n      {console.log(s.option)}\r\n      <header>\r\n        <h1>\r\n          Want to add Something new {!user.username ? null : user.username}\r\n        </h1>\r\n      </header>\r\n\r\n      <div>\r\n        <form>\r\n          <div className=\"form-group\">\r\n            <label>Blog Story</label>\r\n            <textarea\r\n              className=\"form-control\"\r\n              name=\"content\"\r\n              required=\"required\"\r\n              onChange={handleInputChange}\r\n            />\r\n            <input type=\"file\" onChange={fileChange} />\r\n\r\n            <Select\r\n              defaultValue={options[0]}\r\n              onChange={handleChange}\r\n              options={options}\r\n            />\r\n          </div>\r\n\r\n          <div className=\"form-group\">\r\n            <button className=\"btn btn-dark\" type=\"submit\" onClick={onSubmit}>\r\n              Submit\r\n            </button>\r\n          </div>\r\n        </form>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default New;\r\n","D:\\GCFiles\\Sem6\\MyAcademia\\frontend\\src\\Components\\ProfileForm.js",[],"D:\\GCFiles\\Sem6\\MyAcademia\\frontend\\src\\Components\\Challenge.js",["189","190"],"import Axios from \"axios\";\r\nimport React, { useContext, useEffect, useState } from \"react\";\r\nimport { Redirect } from \"react-router-dom\";\r\nimport { AuthContext } from \"../Context/AuthContext\";\r\nimport \"../Styling/Challenge.css\"\r\n\r\nconst Challenge = (props) => {\r\n  const { isAuthenticated, user, googleLogin } = useContext(AuthContext);\r\n  const [userScores, setUserScores] = useState([]);\r\n  const [allScores, setAllScores] = useState([]);\r\n  const [sortIQClicked, setSortIQClicked] = useState(false);\r\n  const [sortDateClicked, setSortDateClicked] = useState(false);\r\n\r\n  useEffect(() => {\r\n    Axios({\r\n      method: \"GET\",\r\n      params: {\r\n        username: user.username,\r\n      },\r\n      url: \"http://localhost:4000/score\",\r\n    }).then((data) => {\r\n      // console.log(data.data); Development Purpose only\r\n      setUserScores(data.data);\r\n    });\r\n    Axios({\r\n      method: \"GET\",\r\n      url: \"http://localhost:4000/getscore\",\r\n    }).then((data) => {\r\n      // console.log(data); Development Purpose only\r\n      setAllScores(data.data);\r\n    });\r\n  }, []);\r\n\r\n  const sortByIQ = () => {\r\n    setSortIQClicked(true);\r\n    setSortDateClicked(false);\r\n  };\r\n\r\n  const sortByDate = () => {\r\n    setSortDateClicked(true);\r\n    setSortIQClicked(false);\r\n  };\r\n\r\n  const resetSort = () => {\r\n    setSortIQClicked(false);\r\n    setSortDateClicked(false);\r\n  };\r\n\r\n  const takeIQTest = () => {\r\n    props.history.push(\"/newtest\");\r\n  };\r\n\r\n  return (\r\n    <div className=\"challengeMain\">\r\n      {!isAuthenticated ? <Redirect to=\"/login\" /> : null}\r\n      <h1>Welcome to Challenge Page</h1>\r\n      <h2 className=\"iqUsername\">{!user.username ? null : user.username}</h2>\r\n      <button className=\"btn btn-primary-first\" onClick={takeIQTest}>\r\n        Take IQ Test\r\n      </button>\r\n      <h3>My Personal Scores</h3>\r\n      {userScores\r\n        .sort((a, b) => {\r\n          if (a.date.slice(0, 4) === b.date.slice(0, 4)) {\r\n            if (a.date.slice(5, 7) === b.date.slice(5, 7))\r\n              return b.date.slice(8, 10) - a.date.slice(8, 10);\r\n            else return b.date.slice(5, 7) - a.date.slice(5, 7);\r\n          } else return b.date.slice(0, 4) - a.date.slice(0, 4);\r\n        })\r\n        .map((userScore) => (\r\n          <div key={userScore._id} className=\"card border-dark bg-light mb-3\">\r\n            <h4>Username: {userScore.username}</h4>\r\n            <h4>Score: {userScore.userScore}</h4>\r\n            <h4 className=\"iqScore\">IQ: {userScore.calculatedIQ}</h4>\r\n            <h4>TimeTaken: {userScore.timeTaken}</h4>\r\n            <h4>Date: {userScore.date.slice(0, 10)}</h4>\r\n          </div>\r\n        ))}\r\n      <h2 className=\"iqLeaderboard\">Leaderboards</h2>\r\n      <hr className=\"line\"></hr>\r\n      <div className=\"sortBtn\">\r\n        <button className=\"btn btn-primary\" onClick={sortByIQ}>\r\n          Sort by IQ\r\n        </button>\r\n        <button className=\"btn btn-primary\" onClick={sortByDate}>\r\n          Sort by Date\r\n        </button>\r\n        <button className=\"btn btn-primary\" onClick={resetSort}>\r\n          Reset Sort\r\n        </button>\r\n      </div>\r\n      {allScores.length === 0 ? null : (\r\n        <div className=\"challengeSort\">\r\n          {sortIQClicked ? (\r\n            <div>\r\n              <h4 className=\"sortMain\">Sorted By IQ</h4>\r\n              {allScores\r\n                .sort((a, b) => b.calculatedIQ - a.calculatedIQ)\r\n                .map((score) => (\r\n                  <div\r\n                    key={score._id}\r\n                    className=\"card border-dark bg-light mb-3\"\r\n                  >\r\n                    <h4>Username: {score.username}</h4>\r\n                    <h4>Score: {score.userScore}</h4>\r\n                    <h4>IQ: {score.calculatedIQ}</h4>\r\n                    <h4>TimeTaken: {score.timeTaken}</h4>\r\n                    <h4>Date: {score.date.slice(0, 10)}</h4>\r\n                  </div>\r\n                ))}\r\n            </div>\r\n          ) : (\r\n            <div>\r\n              {sortDateClicked ? (\r\n                <div>\r\n                  <h4 className=\"sortMain\">Sorted By Date</h4>\r\n                  {allScores\r\n                    .sort((a, b) => {\r\n                      if (a.date.slice(0, 4) === b.date.slice(0, 4)) {\r\n                        if (a.date.slice(5, 7) === b.date.slice(5, 7))\r\n                          return b.date.slice(8, 10) - a.date.slice(8, 10);\r\n                        else return b.date.slice(5, 7) - a.date.slice(5, 7);\r\n                      } else return b.date.slice(0, 4) - a.date.slice(0, 4);\r\n                    })\r\n                    .map((score) => (\r\n                      <div\r\n                        key={score._id}\r\n                        className=\"card border-dark bg-light mb-3\"\r\n                      >\r\n                        <h4>Username: {score.username}</h4>\r\n                        <h4>Score: {score.userScore}</h4>\r\n                        <h4>IQ: {score.calculatedIQ}</h4>\r\n                        <h4>TimeTaken: {score.timeTaken}</h4>\r\n                        <h4>Date: {score.date.slice(0, 10)}</h4>\r\n                      </div>\r\n                    ))}\r\n                </div>\r\n              ) : (\r\n                <div>\r\n                  <h4 className=\"sortMain\">Sorted By Score</h4>\r\n                  {allScores\r\n                    .sort((a, b) => {\r\n                      if (a.userScore === b.userScore) {\r\n                        if (a.timeTaken === b.timeTaken) {\r\n                          if (a.date.slice(1, 4) === b.date.slice(1, 4)) {\r\n                            if (a.date.slice(6, 7) === b.date.slice(6, 7))\r\n                              return b.date.slice(9, 10) - a.date.slice(9, 10);\r\n                            else return b.date.slice(6, 7) - a.date.slice(6, 7);\r\n                          } else return b.date.slice(1, 4) - a.date.slice(1, 4);\r\n                        } else {\r\n                          if (\r\n                            a.timeTaken.slice(1, 2) === b.timeTaken.slice(1, 2)\r\n                          ) {\r\n                            return (\r\n                              a.timeTaken.slice(4, 5) - b.timeTaken.slice(4, 5)\r\n                            );\r\n                          } else\r\n                            return (\r\n                              a.timeTaken.slice(1, 2) - b.timeTaken.slice(1, 2)\r\n                            );\r\n                        }\r\n                      } else return b.userScore - a.userScore;\r\n                    })\r\n                    .map((allScore) => (\r\n                      <div\r\n                        key={allScore._id}\r\n                        className=\"card border-dark bg-light mb-3\"\r\n                      >\r\n                        <h4>Username: {allScore.username}</h4>\r\n                        <h4>Score: {allScore.userScore}</h4>\r\n                        <h4>IQ: {allScore.calculatedIQ}</h4>\r\n                        <h4>TimeTaken: {allScore.timeTaken}</h4>\r\n                        <h4>Date: {allScore.date.slice(0, 10)}</h4>\r\n                      </div>\r\n                    ))}\r\n                </div>\r\n              )}\r\n            </div>\r\n          )}\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Challenge;\r\n","D:\\GCFiles\\Sem6\\MyAcademia\\frontend\\src\\Components\\Notification.js",["191","192","193","194","195","196"],"import React, { useState, useContext, useEffect } from \"react\";\r\nimport Axios from \"axios\";\r\nimport { Link, Redirect } from \"react-router-dom\";\r\nimport { AuthContext } from \"../Context/AuthContext\";\r\nimport NotificationPopUp from \"./NotificationPopUp\";\r\nimport styling from \"../Styling/notification.css\";\r\n\r\nconst Notification = (props) => {\r\n  const { isAuthenticated, user, googleLogin } = useContext(AuthContext);\r\n  const [notifications, setNotifications] = useState([]);\r\n  const [dateNow] = useState(new Date());\r\n  var [ISOstring] = useState(\"\");\r\n  const [profile, setProfile] = useState({\r\n    id: \"\",\r\n    photoUrl: \"\",\r\n    firstName: \"\",\r\n    lastName: \"\",\r\n    username: \"\",\r\n    email: \"\",\r\n    collegeName: \"\",\r\n    location: \"\",\r\n    IQ: 0,\r\n    about: \"\",\r\n    isFaculty: false,\r\n    friends: [],\r\n    notifications: [Object],\r\n  });\r\n  const [profileNotification, setProfileNotification] = useState([]);\r\n  const [Notification, setNotification] = useState({\r\n    notification: \"\",\r\n    username: \"\",\r\n    link: \"\",\r\n    created_date: \"\",\r\n  });\r\n  const [showNotification, setShowNotification] = useState(true);\r\n  const [i, setI] = useState(0);\r\n  const [notificationPopUp, setNotificationPopUp] = useState({\r\n    title: \"\",\r\n    message: \"\",\r\n    type: \"\",\r\n  });\r\n\r\n  useEffect(() => {\r\n    const username = user.username;\r\n    Axios({\r\n      method: \"GET\",\r\n      params: {\r\n        username: username,\r\n      },\r\n      url: \"http://localhost:4000/profile\",\r\n    }).then((data) => {\r\n      console.log(data);\r\n      if (data.data === null) {\r\n        console.log(\"No Profile data found\");\r\n      } else {\r\n        console.log(data.data);\r\n        setProfile({\r\n          ...profile,\r\n          id: data.data._id,\r\n          photoUrl: data.data.photoUrl,\r\n          firstName: data.data.firstName,\r\n          lastName: data.data.lastName,\r\n          username: data.data.username,\r\n          email: data.data.email,\r\n          collegeName: data.data.collegeName,\r\n          location: data.data.location,\r\n          IQ: data.data.IQ,\r\n          about: data.data.about,\r\n          isFaculty: data.data.isFaculty,\r\n          friends: data.data.friends,\r\n        });\r\n      }\r\n    });\r\n    Axios({\r\n      method: \"GET\",\r\n      params: {\r\n        username: user.username,\r\n      },\r\n      url: \"http://localhost:4000/getnotificationsprofile\",\r\n    }).then((data) => {\r\n      console.log(data.data);\r\n      setProfileNotification(data.data);\r\n    });\r\n    console.log(profile.notifications[1]);\r\n    ISOstring = dateNow.toISOString().slice(0, 10);\r\n    console.log(ISOstring);\r\n  }, []);\r\n\r\n  const CheckFriendsNotifications = () => {\r\n    if (i === 0) {\r\n      Axios({\r\n        method: \"GET\",\r\n        params: {\r\n          username: profile.friends,\r\n        },\r\n        url: \"http://localhost:4000/getnotifications\",\r\n      }).then((data) => {\r\n        console.log(data);\r\n        if (data.data === null) {\r\n          console.log(\"No Notifications Found\");\r\n        } else {\r\n          setNotifications(data.data);\r\n        }\r\n      });\r\n      setI(1);\r\n    }\r\n  };\r\n\r\n  const reloadPage = () => {\r\n    window.location.reload(false);\r\n  };\r\n\r\n  // const deleteNotification = (e) => {\r\n  //   const url = \"http://localhost:4000/deletenotification/\";\r\n  //   const notificationId = e.target.value;\r\n  //   const dynamicUrl = url + notificationId;\r\n  //   e.preventDefault();\r\n  //   Axios({\r\n  //     method: \"delete\",\r\n  //     url: dynamicUrl,\r\n  //   }).then((data) => {\r\n  //     console.log(data);\r\n  //     reloadPage();\r\n  //   });\r\n  // };\r\n\r\n  const deleteProfileNotification = (e) => {\r\n    const url = \"http://localhost:4000/removenotification/\";\r\n    const profileID = profile.id;\r\n    const notificationId = e.target.value;\r\n    const dynamicUrl = url + profileID;\r\n    console.log(notificationId);\r\n    e.preventDefault();\r\n    Axios({\r\n      method: \"PUT\",\r\n      params: {\r\n        NotificationId: notificationId,\r\n      },\r\n      url: dynamicUrl,\r\n    }).then((data) => {\r\n      console.log(data.data.notifications);\r\n      reloadPage();\r\n    });\r\n  };\r\n\r\n  const deleteAllProfileNotification = (e) => {\r\n    const url = \"http://localhost:4000/removeallnotifications/\";\r\n    const profileID = profile.id;\r\n    const notificationId = e.target.value;\r\n    const dynamicUrl = url + profileID;\r\n    console.log(notificationId);\r\n    e.preventDefault();\r\n    Axios({\r\n      method: \"PUT\",\r\n      url: dynamicUrl,\r\n    }).then((data) => {\r\n      console.log(data.data);\r\n      reloadPage();\r\n    });\r\n  };\r\n\r\n  const readByUser = (notification) => {\r\n    const notificationID = notification._id;\r\n    console.log(notification);\r\n    if (notification.readByUser === false) {\r\n      Axios({\r\n        method: \"put\",\r\n        params: {\r\n          NotificationId: notificationID,\r\n          readByUser: true,\r\n        },\r\n        url: `http://localhost:4000/editnotification/${profile.id}`,\r\n      }).then((data) => {\r\n        console.log(data.data);\r\n        props.history.push(`${notification.link.slice(21)}`);\r\n      });\r\n    } else {\r\n      props.history.push(`${notification.link.slice(21)}`);\r\n      console.log(\"readbyuser not working properly\");\r\n    }\r\n  };\r\n\r\n  const handleHideNotification = () => {\r\n    setShowNotification(false);\r\n  };\r\n\r\n  const handleShowNotification = () => {\r\n    setShowNotification(true);\r\n  };\r\n\r\n  return (\r\n    <div className=\"notificationMain\">\r\n      {!isAuthenticated ? <Redirect to=\"/login\" /> : null}\r\n      <h1 className=\"main\">Welcome to Notification Page</h1>\r\n      <h2 className=\"userName\">{!user.username ? null : user.username}</h2>\r\n      {notificationPopUp.message !== \"\" ? (\r\n        <NotificationPopUp notificationPopUp={notificationPopUp} />\r\n      ) : null}\r\n      <h4 className=\"headerPersonal\">Personal Notifications</h4>\r\n      <hr className=\"lineMain\"></hr>\r\n      {profileNotification.length === 0 ? (\r\n        <h3 className=\"empty\">You have no personal notifications</h3>\r\n      ) : (\r\n        <div className=\"notificationBtn\">\r\n          <button\r\n            className=\"btn btn-danger btn-delete\"\r\n            onClick={deleteAllProfileNotification}\r\n          >\r\n            Delete\r\n          </button>\r\n          {profileNotification\r\n            .sort((a, b) => {\r\n              if (\r\n                a.notiCreationDate.slice(0, 4) ===\r\n                b.notiCreationDate.slice(0, 4)\r\n              ) {\r\n                if (\r\n                  a.notiCreationDate.slice(5, 7) ===\r\n                  b.notiCreationDate.slice(5, 7)\r\n                )\r\n                  return (\r\n                    b.notiCreationDate.slice(8, 10) -\r\n                    a.notiCreationDate.slice(8, 10)\r\n                  );\r\n                else\r\n                  return (\r\n                    b.notiCreationDate.slice(5, 7) -\r\n                    a.notiCreationDate.slice(5, 7)\r\n                  );\r\n              } else\r\n                return (\r\n                  b.notiCreationDate.slice(0, 4) -\r\n                  a.notiCreationDate.slice(0, 4)\r\n                );\r\n            })\r\n            .map((notification) => (\r\n              <div className=\"notificationBox\">\r\n                {notification === null ? null : (\r\n                  <div>\r\n                    {notification.readByUser ? (\r\n                      <div\r\n                        key={notification._id}\r\n                        onClick={() => readByUser(notification)}\r\n                        className=\"card border-dark bg-light mb-3\"\r\n                      >\r\n                        <h4>{notification.notification}</h4>\r\n                        <h4>{notification.notiCreationDate.slice(0, 10)}</h4>\r\n                        <button\r\n                          className=\"btn-danger btn-submit\"\r\n                          onClick={deleteProfileNotification}\r\n                          value={notification._id}\r\n                        >\r\n                          Delete\r\n                        </button>\r\n                      </div>\r\n                    ) : (\r\n                      <div\r\n                        key={notification._id}\r\n                        className=\"card border-dark text-white bg-info mb-3\"\r\n                      >\r\n                        <h4 onClick={() => readByUser(notification)}>\r\n                          {notification.notification}\r\n                        </h4>\r\n                        <h4>{notification.notiCreationDate.slice(0, 10)}</h4>\r\n                        <button\r\n                          className=\"btn-danger btn-submit\"\r\n                          onClick={deleteProfileNotification}\r\n                          value={notification._id}\r\n                        >\r\n                          Delete\r\n                        </button>\r\n                      </div>\r\n                    )}\r\n                  </div>\r\n                )}\r\n              </div>\r\n            ))}\r\n        </div>\r\n      )}\r\n      {profile.friends.length === 0 ? null : CheckFriendsNotifications()}\r\n      <h4 className=\"headerCommon\">Common Notifications</h4>\r\n      <hr className=\"line\"></hr>\r\n      <div className=\"notificationCommon\">\r\n        {showNotification ? (\r\n          <div>\r\n            {notifications.length === 0 ? (\r\n              <h4 className=\"empty\">You don't have any common notifications</h4>\r\n            ) : (\r\n              <div>\r\n                <button\r\n                  className=\"btn btn-primary\"\r\n                  onClick={handleHideNotification}\r\n                >\r\n                  Hide Notifications\r\n                </button>\r\n                {notifications\r\n                  .sort((a, b) => {\r\n                    if (\r\n                      a.created_date.slice(1, 4) === b.created_date.slice(1, 4)\r\n                    ) {\r\n                      if (\r\n                        a.created_date.slice(6, 7) ===\r\n                        b.created_date.slice(6, 7)\r\n                      )\r\n                        return (\r\n                          b.created_date.slice(9, 10) -\r\n                          a.created_date.slice(9, 10)\r\n                        );\r\n                      else\r\n                        return (\r\n                          b.created_date.slice(6, 7) -\r\n                          a.created_date.slice(6, 7)\r\n                        );\r\n                    } else\r\n                      return (\r\n                        b.created_date.slice(1, 4) - a.created_date.slice(1, 4)\r\n                      );\r\n                  })\r\n                  .map((notification) => (\r\n                    <div className=\"commonBox\">\r\n                      <div\r\n                        key={notification._id}\r\n                        className=\"card border-dark bg-light mb-3 box\"\r\n                      >\r\n                        <Link to={notification.link.slice(21)}>\r\n                          <h4>{notification.notification}</h4>\r\n                        </Link>\r\n                        <h4>{notification.username}</h4>\r\n                        {notification.created_date.slice(0, 10) !== ISOstring ? (\r\n                          <div className=\"date\">\r\n                            <h5>{notification.created_date.slice(0, 10)}</h5>\r\n                          </div>\r\n                        ) : (\r\n                          <div className=\"date\">\r\n                            <h5>Today</h5>\r\n                          </div>\r\n                        )}\r\n                      </div>\r\n                    </div>\r\n                  ))}\r\n              </div>\r\n            )}\r\n          </div>\r\n        ) : (\r\n          <div>\r\n            <h4>\r\n              Your Notifications are hidden click here to see your notifications\r\n            </h4>\r\n            <button\r\n              className=\"btn btn-primary\"\r\n              onClick={handleShowNotification}\r\n            >\r\n              Show All Notifications\r\n            </button>\r\n          </div>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Notification;\r\n","D:\\GCFiles\\Sem6\\MyAcademia\\frontend\\src\\Components\\Search.js",["197","198","199","200","201","202","203","204","205","206","207","208"],"import React, { useContext, useState } from \"react\";\r\nimport Axios from \"axios\";\r\nimport { Link, Redirect } from \"react-router-dom\";\r\nimport { AuthContext } from \"../Context/AuthContext\";\r\nimport Message from \"./Message\";\r\nimport Profile from \"./Profile\";\r\nimport defaultProfilePhoto from \"../Images/default_profile_picture.png\";\r\nimport styling from \"../Styling/search.css\";\r\n\r\nconst Search = (props) => {\r\n  const { isAuthenticated, user, googleLogin } = useContext(AuthContext);\r\n  const [Query, setQuery] = useState(null);\r\n  const [location, setLocation] = useState(false);\r\n  const [firstName, setFirstName] = useState(false);\r\n  const [loading, setLoading] = useState(false);\r\n  const [profiles, setProfiles] = useState([]);\r\n  const [profile, setProfile] = useState({\r\n    id: \"\",\r\n    photoUrl: \"\",\r\n    firstName: \"\",\r\n    lastName: \"\",\r\n    username: \"\",\r\n    email: \"\",\r\n    collegeName: \"\",\r\n    location: \"\",\r\n    IQ: 0,\r\n    about: \"\",\r\n    isFaculty: false,\r\n  });\r\n\r\n  const onChange = (e) => {\r\n    e.preventDefault();\r\n    setQuery(e.target.value);\r\n  };\r\n\r\n  const locationSelected = (e) => {\r\n    e.preventDefault();\r\n    setLocation(true);\r\n    setFirstName(false);\r\n    console.log(\"Location Selected\");\r\n  };\r\n\r\n  const firstNameSelected = (e) => {\r\n    e.preventDefault();\r\n    setFirstName(true);\r\n    setLocation(false);\r\n    console.log(\"First Name Selected\");\r\n  };\r\n\r\n  const getAllProfile = () => {\r\n    Axios({\r\n      method: \"GET\",\r\n      url: \"http://localhost:4000/search/all\",\r\n    }).then((data) => {\r\n      if (data.data === null) {\r\n        console.log(\"No data found\");\r\n      } else {\r\n        const item = [data.data];\r\n        setProfiles(item[0]);\r\n        console.log(profiles[0]);\r\n      }\r\n    });\r\n  };\r\n\r\n  const goToProfile = (e) => {\r\n    console.log(\"goto profile clicked\");\r\n    const profileId = e.target.value;\r\n    console.log(profileId);\r\n    const url = \"http://localhost:3000/profile/\";\r\n    const dynamicUrl = url + profileId;\r\n    console.log(dynamicUrl);\r\n    const gotourl = dynamicUrl.slice(21);\r\n    props.history.push(gotourl);\r\n  };\r\n\r\n  const getProfile = (e) => {\r\n    e.preventDefault();\r\n    const query = Query;\r\n    const url = \"http://localhost:4000/search/profile\";\r\n    const dynamicUrl = url;\r\n    console.log();\r\n    Axios({\r\n      method: \"GET\",\r\n      params: {\r\n        username: query,\r\n      },\r\n      url: dynamicUrl,\r\n    }).then((data) => {\r\n      console.log(data);\r\n      if (data.data === null) {\r\n        console.log(\"No data found\");\r\n      } else {\r\n        const item = data.data;\r\n        setProfile(item[0]);\r\n        console.log(item[0]);\r\n      }\r\n    });\r\n  };\r\n\r\n  const searchQuery = (e) => {\r\n    if (location === true) {\r\n      e.preventDefault();\r\n      const query = Query;\r\n      console.log(query);\r\n      const url = \"http://localhost:4000/search/location\";\r\n      const dynamicUrl = url;\r\n      console.log();\r\n      Axios({\r\n        method: \"GET\",\r\n        params: {\r\n          location: e.target.value,\r\n        },\r\n        url: dynamicUrl,\r\n      }).then((data) => {\r\n        console.log(data);\r\n        if (data.data === null) {\r\n          console.log(\"No data found\");\r\n        } else {\r\n          const item = [data.data];\r\n          setProfiles(item[0]);\r\n          console.log(profiles);\r\n        }\r\n      });\r\n    } else {\r\n      e.preventDefault();\r\n      const query = Query;\r\n      console.log(query);\r\n      const url = \"http://localhost:4000/search/firstName\";\r\n      const dynamicUrl = url;\r\n      console.log();\r\n      Axios({\r\n        method: \"GET\",\r\n        params: {\r\n          firstName: e.target.value,\r\n        },\r\n        url: dynamicUrl,\r\n      }).then((data) => {\r\n        console.log(data);\r\n        if (data.data === null) {\r\n          console.log(\"No data found\");\r\n        } else {\r\n          const item = [data.data];\r\n          setProfiles(item[0]);\r\n          console.log(profiles);\r\n        }\r\n      });\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"searchMain\">\r\n      {!isAuthenticated ? <Redirect to=\"/login\" /> : null}\r\n      <div>\r\n        <h1 className=\"headerMain\">Search for anything</h1>\r\n      </div>\r\n      <hr className=\"line\"></hr>\r\n      <div className=\"searchBox\">\r\n        <form className=\"d-flex\" onSubmit={searchQuery}>\r\n          <input\r\n            className=\"form-control me-2\"\r\n            type=\"search\"\r\n            placeholder=\"Search\"\r\n            aria-label=\"Search\"\r\n            onChange={searchQuery}\r\n          />\r\n          <button className=\"btn btn-outline-success\" type=\"submit\">\r\n            Search\r\n          </button>\r\n        </form>\r\n      </div>\r\n      <div className=\"searchSort\">\r\n        {!location ? (\r\n          <div>\r\n            <div className=\"form-check\">\r\n              <input\r\n                className=\"form-check-input\"\r\n                type=\"radio\"\r\n                name=\"flexRadioDefault\"\r\n                id=\"flexRadioDefault1\"\r\n                onSelect={locationSelected}\r\n                onChange={locationSelected}\r\n              />\r\n              <label className=\"form-check-label\" for=\"flexRadioDefault1\">\r\n                Location\r\n              </label>\r\n            </div>\r\n            <div className=\"form-check\">\r\n              <input\r\n                className=\"form-check-input\"\r\n                type=\"radio\"\r\n                name=\"flexRadioDefault\"\r\n                id=\"flexRadioDefault2\"\r\n                onSelect={firstNameSelected}\r\n                onChange={firstNameSelected}\r\n                checked\r\n              />\r\n              <label className=\"form-check-label\" for=\"flexRadioDefault2\">\r\n                First Name\r\n              </label>\r\n            </div>\r\n          </div>\r\n        ) : (\r\n          <div>\r\n            <div className=\"form-check\">\r\n              <input\r\n                className=\"form-check-input\"\r\n                type=\"radio\"\r\n                name=\"flexRadioDefault\"\r\n                id=\"flexRadioDefault1\"\r\n                onSelect={locationSelected}\r\n                onChange={locationSelected}\r\n                checked\r\n              />\r\n              <label className=\"form-check-label\" for=\"flexRadioDefault1\">\r\n                Location\r\n              </label>\r\n            </div>\r\n            <div className=\"form-check\">\r\n              <input\r\n                className=\"form-check-input\"\r\n                type=\"radio\"\r\n                name=\"flexRadioDefault\"\r\n                id=\"flexRadioDefault2\"\r\n                onSelect={firstNameSelected}\r\n                onChange={firstNameSelected}\r\n              />\r\n              <label className=\"form-check-label\" for=\"flexRadioDefault2\">\r\n                First Name\r\n              </label>\r\n            </div>\r\n          </div>\r\n        )}\r\n      </div>\r\n      <div className=\"searchBtn\">\r\n        <button className=\"btn btn-primary\" onClick={getAllProfile}>\r\n          See All Profiles\r\n        </button>\r\n      </div>\r\n      <div className=\"searchProfile\">\r\n        {profiles.map((item) => (\r\n          <div className=\"card border-dark bg-light mb-3 media\" key={item._id}>\r\n            {!item.photoUrl ? (\r\n              <img\r\n                src={defaultProfilePhoto}\r\n                alt=\"defaultProfilePhoto\"\r\n                className=\"align-self-start mr-3\"\r\n                style={{ width: \"100px\", height: \"100px\" }}\r\n              ></img>\r\n            ) : (\r\n              <img\r\n                src={item.photoUrl}\r\n                style={{ width: \"100px\", height: \"100px\" }}\r\n                alt=\"profilePhoto\"\r\n                className=\"align-self-start mr-3\"\r\n              ></img>\r\n            )}\r\n            <div className=\"media-body\">\r\n              <h4 className=\"mt-0\" onClick={goToProfile} value={item._id}>\r\n                Name: {item.firstName} {item.lastName}\r\n              </h4>\r\n              <h5 className=\"item\">College Name: {item.collegeName}</h5>\r\n              <h5 className=\"item\">Location: {item.location}</h5>\r\n              <button\r\n                className=\"btn btn-primary\"\r\n                onClick={goToProfile}\r\n                value={item._id}\r\n              >\r\n                Go to Profile\r\n              </button>\r\n            </div>\r\n          </div>\r\n        ))}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Search;\r\n","D:\\GCFiles\\Sem6\\MyAcademia\\frontend\\src\\Components\\Profile.js",["209","210","211","212","213","214","215","216","217","218","219","220","221"],"import React, { useContext, useEffect, useRef, useState } from \"react\";\r\nimport Axios from \"axios\";\r\nimport { Link, Redirect } from \"react-router-dom\";\r\nimport { store } from \"react-notifications-component\";\r\nimport { AuthContext } from \"../Context/AuthContext\";\r\nimport Message from \"./Message\";\r\nimport Search from \"./Search\";\r\nimport defaultProfilePhoto from \"../Images/default_profile_picture.png\";\r\nimport MyProfile from \"./MyProfile\";\r\nimport NotificationPopUp from \"./NotificationPopUp\";\r\nimport styling from \"../Styling/searchProfile.css\";\r\n\r\nconst Profile = (props) => {\r\n  const { isAuthenticated, user, googleLogin, myprofileId } = useContext(\r\n    AuthContext\r\n  );\r\n  // const {profile} = useContext(ProfileContext)\r\n  const [haveProfile, setHaveProfile] = useState(false);\r\n  const [message, setMessage] = useState(null);\r\n  const [myProfileID, setMyProfileId] = useState({\r\n    mypid: \"\",\r\n    firstName: \"\",\r\n    lastName: \"\",\r\n  });\r\n  const [profile, setProfile] = useState({\r\n    id: \"\",\r\n    photoUrl: \"\",\r\n    firstName: \"\",\r\n    lastName: \"\",\r\n    username: \"\",\r\n    email: \"\",\r\n    collegeName: \"\",\r\n    location: \"\",\r\n    IQ: 0,\r\n    about: \"\",\r\n    isFaculty: false,\r\n    friends: [],\r\n  });\r\n  const [educations, setEducation] = useState([]);\r\n  const [works, setWork] = useState([]);\r\n  const [friends, setFriends] = useState([]);\r\n  const [isFriends, setIsFriends] = useState(false);\r\n  const [requestSent, setRequestSent] = useState(false);\r\n  const [friendship, setFriendship] = useState({\r\n    requester: \"\",\r\n    recipient: \"\",\r\n    status: 0,\r\n  });\r\n  const [i, setI] = useState(0);\r\n  let timerID = useRef(null);\r\n  const [notificationPopUp, setNotificationPopUp] = useState({\r\n    title: \"\",\r\n    message: \"\",\r\n    type: \"\",\r\n  });\r\n  useEffect(() => {\r\n    const urlNow = window.location.href;\r\n    const profileId = urlNow.slice(30);\r\n    const url = \"http://localhost:4000/profile/\";\r\n    const dynamicUrl = url + profileId;\r\n    Axios({\r\n      method: \"GET\",\r\n      url: dynamicUrl,\r\n    }).then((data) => {\r\n      if (data.data === null) {\r\n        console.log(\"No Profile data found\");\r\n      } else {\r\n        setProfile({\r\n          ...profile,\r\n          id: data.data._id,\r\n          photoUrl: data.data.photoUrl,\r\n          firstName: data.data.firstName,\r\n          lastName: data.data.lastName,\r\n          username: data.data.username,\r\n          email: data.data.email,\r\n          collegeName: data.data.collegeName,\r\n          location: data.data.location,\r\n          IQ: data.data.IQ,\r\n          about: data.data.about,\r\n          isFaculty: data.data.isFaculty,\r\n          friends: data.data.friends,\r\n        });\r\n      }\r\n    });\r\n    Axios({\r\n      method: \"GET\",\r\n      url: url,\r\n      params: {\r\n        username: user.username,\r\n      },\r\n    }).then((data) => {\r\n      if (data.data === null) {\r\n        console.log(\"No Profile data found\");\r\n      } else {\r\n        setMyProfileId({\r\n          ...myProfileID,\r\n          mypid: data.data._id,\r\n          firstName: data.data.firstName,\r\n          lastName: data.data.lastName,\r\n        });\r\n      }\r\n    });\r\n  }, []);\r\n\r\n  const getFriendshipStatus = (e) => {\r\n    if (i === 0) {\r\n      Axios({\r\n        method: \"GET\",\r\n        url: \"http://localhost:4000/getfriends/status\",\r\n        params: {\r\n          requester: user.username,\r\n          recipient: profile.username,\r\n        },\r\n      }).then((data) => {\r\n        if (data.data.length === 0) {\r\n          console.log(\"No Friendship Found\");\r\n        } else {\r\n          const item = data.data[0];\r\n          console.log(item);\r\n          if (item.status === 2) {\r\n            setIsFriends(true);\r\n          }\r\n          setFriends(item);\r\n        }\r\n      });\r\n      if (friends.requester !== user.username) {\r\n        Axios({\r\n          method: \"GET\",\r\n          url: \"http://localhost:4000/getfriends/status\",\r\n          params: {\r\n            requester: profile.username,\r\n            recipient: user.username,\r\n          },\r\n        }).then((data) => {\r\n          if (data.data.length === 0) {\r\n            console.log(\"No Friendship Found\");\r\n          } else {\r\n            const item = data.data[0];\r\n            console.log(item);\r\n            if (item.status === 2) {\r\n              setIsFriends(true);\r\n            }\r\n            setFriends(item);\r\n          }\r\n        });\r\n        console.log(\"My Profile Id: \" + myprofileId);\r\n      }\r\n      Axios({\r\n        method: \"GET\",\r\n        params: {\r\n          username: profile.username,\r\n        },\r\n        url: \"http://localhost:4000/education\",\r\n      }).then((data) => {\r\n        console.log(data);\r\n        if (data.data === null) {\r\n          console.log(\"No Education data found\");\r\n        } else {\r\n          const item = [data.data];\r\n          setEducation(item[0]);\r\n          console.log(item[0]);\r\n        }\r\n      });\r\n      Axios({\r\n        method: \"GET\",\r\n        params: {\r\n          username: profile.username,\r\n        },\r\n        url: \"http://localhost:4000/work\",\r\n      }).then((data) => {\r\n        console.log(data);\r\n        if (data.data === null) {\r\n          console.log(\"No Work data found\");\r\n        } else {\r\n          const item = [data.data];\r\n          setWork(item[0]);\r\n          console.log(item[0]);\r\n        }\r\n      });\r\n      setI(1);\r\n    }\r\n  };\r\n\r\n  const sendRequest = () => {\r\n    Axios({\r\n      method: \"post\",\r\n      data: {\r\n        requester: user.username,\r\n        recipient: profile.username,\r\n        status: 1,\r\n      },\r\n      url: \"http://localhost:4000/sendfriendrequest\",\r\n    }).then((data) => {\r\n      const { message } = data.data;\r\n      setMessage(message);\r\n      console.log(message);\r\n      setRequestSent(true);\r\n    });\r\n    Axios({\r\n      method: \"put\",\r\n      data: {\r\n        notification: `${myProfileID.firstName} ${myProfileID.lastName} has sent you friend request`,\r\n        link: `http://localhost:3000/profile/${myProfileID.mypid}`,\r\n      },\r\n      url: `http://localhost:4000/addnotification/${profile.id}`,\r\n    }).then((data) => {\r\n      console.log(data.data);\r\n      setNotificationPopUp({\r\n        ...notificationPopUp,\r\n        title: \"Friend Request Sent\",\r\n        message: `You have sent a friend request to ${profile.firstName} ${profile.lastName}`,\r\n        type: \"info\",\r\n      });\r\n      setTimeout(() => {\r\n        reloadPage();\r\n      }, 2000);\r\n    });\r\n  };\r\n\r\n  const acceptRequest = () => {\r\n    const friendshipId = friends._id;\r\n    const url = \"http://localhost:4000/updaterequest/\";\r\n    const dynamicUrl = url + friendshipId;\r\n    Axios({\r\n      method: \"put\",\r\n      data: {\r\n        status: 2,\r\n      },\r\n      url: dynamicUrl,\r\n    }).then((data) => {\r\n      const { message } = data.data;\r\n      setMessage(message);\r\n      console.log(message);\r\n      setIsFriends(true);\r\n      // setTimeout(() => {\r\n      //   reloadPage();\r\n      // }, 2000);\r\n    });\r\n    // if(friends.requester === user.username)\r\n    const profileId = profile.id;\r\n    const url2 = \"http://localhost:4000/addfprofile/\";\r\n    const requesterUrl = url2 + profileId;\r\n    console.log(profileId);\r\n    console.log(requesterUrl);\r\n    Axios({\r\n      method: \"put\",\r\n      params: {\r\n        friend: friends.recipient,\r\n      },\r\n      url: requesterUrl,\r\n    }).then((data) => {\r\n      console.log(data.data);\r\n    });\r\n    const recipientId = myProfileID.mypid;\r\n    console.log(recipientId);\r\n    const recipientUrl = url2 + recipientId;\r\n    console.log(recipientUrl);\r\n    Axios({\r\n      method: \"put\",\r\n      params: {\r\n        friend: friends.requester,\r\n      },\r\n      url: recipientUrl,\r\n    }).then((data) => {\r\n      console.log(data.data);\r\n    });\r\n    Axios({\r\n      method: \"put\",\r\n      data: {\r\n        notification: `${myProfileID.firstName} ${myProfileID.lastName} has accepted your friend request`,\r\n        link: `http://localhost:3000/profile/${myProfileID.mypid}`,\r\n      },\r\n      url: `http://localhost:4000/addnotification/${profile.id}`,\r\n    }).then((data) => {\r\n      console.log(data.data);\r\n      setNotificationPopUp({\r\n        ...notificationPopUp,\r\n        title: \"Friend Request Accepted\",\r\n        message: `You have accepted a friend request from ${profile.firstName} ${profile.lastName}`,\r\n        type: \"success\",\r\n      });\r\n    });\r\n  };\r\n\r\n  const cancelRequest = () => {\r\n    if (friends === null) {\r\n      console.log(\"No friend data found\");\r\n    } else {\r\n      const friendshipId = friends._id;\r\n      const url = \"http://localhost:4000/deleterequest/\";\r\n      const dynamicUrl = url + friendshipId;\r\n      Axios({\r\n        method: \"delete\",\r\n        url: dynamicUrl,\r\n      }).then((data) => {\r\n        const { message } = data.data;\r\n        setMessage(message);\r\n        console.log(message);\r\n        reloadPage();\r\n      });\r\n      const profileId = profile.id;\r\n      const staticurl = \"http://localhost:4000/rffprofile/\";\r\n      const requesterUrl = staticurl + profileId;\r\n      console.log(profileId);\r\n      console.log(requesterUrl);\r\n      Axios({\r\n        method: \"put\",\r\n        params: {\r\n          friend: friends.recipient,\r\n        },\r\n        url: requesterUrl,\r\n      }).then((data) => {\r\n        console.log(data.data);\r\n      });\r\n      const recipientId = myProfileID.mypid;\r\n      console.log(recipientId);\r\n      const recipientUrl = staticurl + recipientId;\r\n      console.log(recipientUrl);\r\n      Axios({\r\n        method: \"put\",\r\n        params: {\r\n          friend: friends.requester,\r\n        },\r\n        url: recipientUrl,\r\n      }).then((data) => {\r\n        console.log(data.data);\r\n      });\r\n      if (friends.status === 2) {\r\n        setNotificationPopUp({\r\n          ...notificationPopUp,\r\n          title: \"Connection Removed\",\r\n          message: `You have removed your connection with ${profile.firstName} ${profile.lastName}`,\r\n          type: \"danger\",\r\n        });\r\n        setTimeout(() => {\r\n          reloadPage();\r\n        }, 5000);\r\n      } else {\r\n        setNotificationPopUp({\r\n          ...notificationPopUp,\r\n          title: \"Friend Request Canceled\",\r\n          message: `You have canceled a friend request from ${profile.firstName} ${profile.lastName}`,\r\n          type: \"danger\",\r\n        });\r\n        setTimeout(() => {\r\n          reloadPage();\r\n        }, 5000);\r\n      }\r\n    }\r\n  };\r\n\r\n  const reloadPage = () => {\r\n    window.location.reload(false);\r\n  };\r\n\r\n  return (\r\n    <div className=\"profileSearch\">\r\n      {!isAuthenticated ? <Redirect to=\"/login\" /> : null}\r\n      {notificationPopUp.message !== \"\" ? (\r\n        <NotificationPopUp notificationPopUp={notificationPopUp} />\r\n      ) : null}\r\n      {/* {!props.haveProfile ? <Redirect to=\"/myprofile\" /> : null} */}\r\n      <div>\r\n        <div>\r\n          <div className=\"profileImage\">\r\n            {!profile.photoUrl ? (\r\n              <img\r\n                src={defaultProfilePhoto}\r\n                alt=\"defaultProfilePhoto\"\r\n                style={{ width: \"200px\", height: \"200px\" }}\r\n              ></img>\r\n            ) : (\r\n              <img\r\n                src={profile.photoUrl}\r\n                style={{ width: \"200px\", height: \"200px\" }}\r\n                alt=\"profilePhoto\"\r\n              ></img>\r\n            )}\r\n          </div>\r\n          <div className=\"userInfo\">\r\n            <h2 className=\"userName\">\r\n              {!profile.username ? null : <h2>Username: {profile.username}</h2>}\r\n              {!profile.username ? null : getFriendshipStatus()}\r\n            </h2>\r\n            {/* <h3>\r\n              {!myprofileId ? null : <h3>My Profile Id: {myprofileId} </h3>}\r\n            </h3> */}\r\n            <h3 className=\"profileID\">\r\n              {!myProfileID ? null : <h3>My Profile Id: {myProfileID.mypid}</h3>}\r\n            </h3>\r\n            <h5>Name: {profile.firstName} {profile.lastName}</h5>\r\n            <h5>Email: {profile.email}</h5>\r\n            <h5>College Name: {profile.collegeName}</h5>\r\n            <h5>Location: {profile.location}</h5>\r\n            <h5>IQ: {profile.IQ}</h5>\r\n            <h5>About Me: {profile.about}</h5>\r\n            {!profile.isFaculty ? <h5>Occupation: Student</h5> : <h5>Education Faculty</h5>}\r\n            {!isFriends ? <h5 className=\"checkFriend\">You Are Not friends</h5> : <h5 className=\"checkFriend\">You Are Friends</h5>}\r\n          </div>\r\n          {!isFriends ? null : (\r\n            <div>\r\n              {profile.friends.length === 0 ? null : (\r\n                <div>\r\n                  {profile.friends.map((friend) => (\r\n                    <div>\r\n                      <h5 className=\"friend\">Friend's Username: {friend}</h5>\r\n                    </div>\r\n                  ))}\r\n                </div>\r\n              )}\r\n            </div>\r\n          )}\r\n          {!isFriends ? (\r\n            <div className=\"friendRequest\">\r\n              {friends.status === 1 ? (\r\n                <div>\r\n                  {friends.requester === user.username ? (\r\n                    <div className=\"inlineBtn\">\r\n                      <button className=\"btn btn-secondary\" disabled>\r\n                        Sent Request\r\n                      </button>\r\n                      <button\r\n                        className=\"btn btn-danger\"\r\n                        onClick={cancelRequest}\r\n                      >\r\n                        Cancel Request\r\n                      </button>\r\n                    </div>\r\n                  ) : (\r\n                    <div>\r\n                      <button\r\n                        className=\"btn btn-success\"\r\n                        onClick={acceptRequest}\r\n                      >\r\n                        Accept Request\r\n                      </button>\r\n                      <button\r\n                        className=\"btn btn-danger\"\r\n                        onClick={cancelRequest}\r\n                      >\r\n                        Delete Request\r\n                      </button>\r\n                    </div>\r\n                  )}\r\n                </div>\r\n              ) : (\r\n                <div>\r\n                  <button className=\"btn btn-primary\" onClick={sendRequest}>\r\n                    Send Request\r\n                  </button>\r\n                </div>\r\n              )}\r\n            </div>\r\n          ) : (\r\n            <div className=\"removeConnection\">\r\n              <button className=\"btn btn-danger\" onClick={cancelRequest}>\r\n                Remove Connection\r\n              </button>\r\n            </div>\r\n          )}\r\n          {message ? <Message message={message} /> : null}\r\n          <div className=\"connection\">\r\n            {!isFriends ? null : (\r\n              <div >\r\n                <h5 className=\"header\">Education Details</h5>\r\n                {educations.map((education) => (\r\n                  <div\r\n                  className=\"card border-dark bg-light mb-3\"\r\n                    key={education._id}\r\n                  >\r\n                    \r\n                    <h4 className=\"item\" value={education.collegeName}>\r\n                      College Name: {education.collegeName}\r\n                    </h4>\r\n                    <h4 className=\"item\" value={education.collegeLocation}>\r\n                      College Location: {education.collegeLocation}\r\n                    </h4>\r\n                    <h4 className=\"item\" value={education.courseName}>\r\n                      Course Name: {education.courseName}\r\n                    </h4>\r\n                    <h4 className=\"item\" value={education.graduationDate}>\r\n                      Graduation Date: {education.graduationDate.slice(0, 10)}\r\n                    </h4>\r\n                    {!education.currentCollege ? null : (\r\n                      <h4 className=\"item\" value={education.currentCollege}>\r\n                        Current College\r\n                      </h4>\r\n                    )}\r\n                  </div>\r\n                ))}\r\n                <h5 className=\"header\">Work Details</h5>\r\n                {works.map((work) => (\r\n                  \r\n                  <div\r\n                  className=\"card border-dark bg-light mb-3\"\r\n                    key={work._id}\r\n                  >\r\n                    \r\n                    <h4 className=\"item\" value={work.position}>\r\n                      Position: {work.position}\r\n                    </h4>\r\n                    <h4 className=\"item\" value={work.employerName}>\r\n                      Employer Name: {work.employerName}\r\n                    </h4>\r\n                    <h4 className=\"item\">\r\n                      Start Date: {work.startDate.slice(0, 10)}\r\n                    </h4>\r\n                    {!work.endDate ? null : (\r\n                      <h4 className=\"item\">\r\n                        End Date: {work.endDate.slice(0, 10)}\r\n                      </h4>\r\n                    )}\r\n                    {!work.currentJob ? null : (\r\n                      <h4 className=\"item\">Current Job</h4>\r\n                    )}\r\n                  </div>\r\n                ))}\r\n              </div>\r\n            )}\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Profile;\r\n","D:\\GCFiles\\Sem6\\MyAcademia\\frontend\\src\\Components\\MyProfile.js",["222","223","224","225","226","227","228","229","230"],"import React, { useContext, useEffect, useRef, useState } from \"react\";\r\nimport Axios from \"axios\";\r\nimport { Link, Redirect } from \"react-router-dom\";\r\nimport { AuthContext } from \"../Context/AuthContext\";\r\nimport Message from \"./Message\";\r\nimport defaultProfilePhoto from \"../Images/default_profile_picture.png\";\r\nimport Profile from \"./Profile\";\r\nimport AuthService from \"../Services/AuthService\";\r\nimport \"../Styling/profileMain.css\";\r\n\r\nconst MyProfile = (props) => {\r\n  const { isAuthenticated, user, googleLogin, myprofileId } = useContext(\r\n    AuthContext\r\n  );\r\n  const authContext = useContext(AuthContext);\r\n  const [haveProfile, setHaveProfile] = useState(false);\r\n  // const [myprofileId, setMyProfileId] = useState(null);\r\n  const [editEducationClicked, setEditEducationClicked] = useState(false);\r\n  const [editWorkClicked, setEditWorkClicked] = useState(false);\r\n  const [editProfileClicked, setEditProfileClicked] = useState(false);\r\n  const [message, setMessage] = useState(null);\r\n  const [profile, setProfile] = useState({\r\n    id: \"\",\r\n    photoUrl: \"\",\r\n    firstName: \"\",\r\n    lastName: \"\",\r\n    username: \"\",\r\n    email: \"\",\r\n    collegeName: \"\",\r\n    location: \"\",\r\n    IQ: 0,\r\n    about: \"\",\r\n    isFaculty: false,\r\n    friends: [],\r\n  });\r\n  const [education, setEducation] = useState([]);\r\n  const [work, setWork] = useState([]);\r\n  const [editEducation, setEditEducation] = useState({\r\n    _id: \"\",\r\n    collegeName: \"\",\r\n    collegeLocation: \"\",\r\n    courseName: \"\",\r\n    graduationDate: \"\",\r\n    currentCollege: false,\r\n    username: \"\",\r\n  });\r\n  const [editWork, setEditWork] = useState({\r\n    _id: \"\",\r\n    position: \"\",\r\n    employerName: \"\",\r\n    startDate: \"\",\r\n    endDate: \"\",\r\n    currentJob: false,\r\n    username: \"\",\r\n  });\r\n\r\n  useEffect(() => {\r\n    const username = user.username;\r\n    Axios({\r\n      method: \"GET\",\r\n      params: {\r\n        username: username,\r\n      },\r\n      url: \"http://localhost:4000/profile\",\r\n    }).then((data) => {\r\n      console.log(data);\r\n      if (data.data === null) {\r\n        console.log(\"No Profile data found\");\r\n      } else {\r\n        setProfile({\r\n          ...profile,\r\n          id: data.data._id,\r\n          photoUrl: data.data.photoUrl,\r\n          firstName: data.data.firstName,\r\n          lastName: data.data.lastName,\r\n          username: data.data.username,\r\n          email: data.data.email,\r\n          collegeName: data.data.collegeName,\r\n          location: data.data.location,\r\n          IQ: data.data.IQ,\r\n          about: data.data.about,\r\n          isFaculty: data.data.isFaculty,\r\n          friends: data.data.friends,\r\n        });\r\n        setHaveProfile(true);\r\n      }\r\n    });\r\n    Axios({\r\n      method: \"GET\",\r\n      params: {\r\n        username: username,\r\n      },\r\n      url: \"http://localhost:4000/education\",\r\n    }).then((data) => {\r\n      console.log(data);\r\n      if (data.data === null) {\r\n        console.log(\"No Education data found\");\r\n      } else {\r\n        const item = [data.data];\r\n        setEducation(item[0]);\r\n        console.log(item[0]);\r\n      }\r\n    });\r\n    Axios({\r\n      method: \"GET\",\r\n      params: {\r\n        username: username,\r\n      },\r\n      url: \"http://localhost:4000/work\",\r\n    }).then((data) => {\r\n      console.log(data);\r\n      if (data.data === null) {\r\n        console.log(\"No Work data found\");\r\n      } else {\r\n        const item = [data.data];\r\n        setWork(item[0]);\r\n        console.log(item[0]);\r\n      }\r\n    });\r\n  }, []);\r\n\r\n  const reloadPage = () => {\r\n    window.location.reload(false);\r\n  };\r\n\r\n  const deleteProfile = () => {\r\n    const profileId = profile.id;\r\n    const url = \"http://localhost:4000/profile/\";\r\n    const dynamicUrl = url + profileId;\r\n    console.log(dynamicUrl);\r\n    Axios({\r\n      method: \"delete\",\r\n      url: dynamicUrl,\r\n    }).then((data) => {\r\n      const { message } = data.data;\r\n      setMessage(message);\r\n      console.log(message);\r\n      reloadPage();\r\n    });\r\n  };\r\n\r\n  const resetForm = (e) => {\r\n    e.target.value = \"\";\r\n  };\r\n\r\n  const onChangeProfile = (e) => {\r\n    setProfile({ ...profile, [e.target.name]: e.target.value });\r\n    console.log(profile.isFaculty);\r\n  };\r\n\r\n  const onChangeEducation = (e) => {\r\n    // e.preventDefault();\r\n    setEditEducation({ ...editEducation, [e.target.name]: e.target.value });\r\n  };\r\n\r\n  const onChangeWork = (e) => {\r\n    // e.preventDefault();\r\n    setEditWork({ ...editWork, [e.target.name]: e.target.value });\r\n  };\r\n\r\n  const editEducationForm = (e) => {\r\n    setEditEducationClicked(true);\r\n    console.log(\"running education edit form\");\r\n    const educationId = e.target.value;\r\n    const url = \"http://localhost:4000/education/\";\r\n    const dynamicUrl = url + educationId;\r\n    console.log(educationId);\r\n    console.log(dynamicUrl);\r\n    Axios({\r\n      method: \"GET\",\r\n      url: dynamicUrl,\r\n    }).then((data) => {\r\n      console.log(data);\r\n      if (data.data === null) {\r\n        console.log(\"No Education Details found\");\r\n      } else {\r\n        setEditEducation({\r\n          ...editEducation,\r\n          _id: data.data._id,\r\n          collegeName: data.data.collegeName,\r\n          collegeLocation: data.data.collegeLocation,\r\n          courseName: data.data.courseName,\r\n          username: data.data.username,\r\n          graduationDate: data.data.graduationDate,\r\n          currentCollege: data.data.currentCollege,\r\n        });\r\n      }\r\n    });\r\n  };\r\n\r\n  const editWorkForm = (e) => {\r\n    setEditWorkClicked(true);\r\n    console.log(\"running work edit form\");\r\n    const workId = e.target.value;\r\n    const url = \"http://localhost:4000/work/\";\r\n    const dynamicUrl = url + workId;\r\n    console.log(workId);\r\n    console.log(dynamicUrl);\r\n    Axios({\r\n      method: \"GET\",\r\n      url: dynamicUrl,\r\n    }).then((data) => {\r\n      console.log(data);\r\n      if (data.data === null) {\r\n        console.log(\"No Work Details found\");\r\n      } else {\r\n        setEditWork({\r\n          ...editWork,\r\n          _id: data.data._id,\r\n          position: data.data.position,\r\n          employerName: data.data.employerName,\r\n          startDate: data.data.startDate,\r\n          endDate: data.data.endDate,\r\n          username: data.data.username,\r\n          currentJob: data.data.currentJob,\r\n        });\r\n      }\r\n    });\r\n  };\r\n\r\n  const editProfileForm = (e) => {\r\n    setEditProfileClicked(true);\r\n    console.log(\"running edit profile form\");\r\n  };\r\n\r\n  const onSubmitEducation = (e) => {\r\n    const educationId = editEducation._id;\r\n    const url = \"http://localhost:4000/education/\";\r\n    const dynamicUrl = url + educationId;\r\n    console.log(educationId);\r\n    console.log(dynamicUrl);\r\n    Axios({\r\n      method: \"put\",\r\n      data: {\r\n        collegeName: editEducation.collegeName,\r\n        collegeLocation: editEducation.collegeLocation,\r\n        courseName: editEducation.courseName,\r\n        graduationDate: editEducation.graduationDate,\r\n        currentCollege: editEducation.currentCollege,\r\n        username: user.username,\r\n      },\r\n      withCredentials: true,\r\n      url: dynamicUrl,\r\n    }).then((data) => {\r\n      const { message } = data.data;\r\n      setMessage(message);\r\n      console.log(message);\r\n    });\r\n    reloadPage();\r\n  };\r\n\r\n  const onSubmitWork = (e) => {\r\n    const workId = editWork._id;\r\n    const url = \"http://localhost:4000/work/\";\r\n    const dynamicUrl = url + workId;\r\n    console.log(workId);\r\n    console.log(dynamicUrl);\r\n    Axios({\r\n      method: \"put\",\r\n      data: {\r\n        position: editWork.position,\r\n        employerName: editWork.employerName,\r\n        startDate: editWork.startDate,\r\n        endDate: editWork.endDate,\r\n        currentJob: editWork.currentJob,\r\n        username: user.username,\r\n      },\r\n      withCredentials: true,\r\n      url: dynamicUrl,\r\n    }).then((data) => {\r\n      const { message } = data.data;\r\n      setMessage(message);\r\n      console.log(message);\r\n    });\r\n  };\r\n\r\n  const onSubmitProfile = (e) => {\r\n    const profileId = profile.id;\r\n    const url = \"http://localhost:4000/profile/\";\r\n    const dynamicUrl = url + profileId;\r\n    console.log(profileId);\r\n    console.log(dynamicUrl);\r\n    Axios({\r\n      method: \"put\",\r\n      data: {\r\n        firstName: profile.firstName,\r\n        lastName: profile.lastName,\r\n        username: user.username,\r\n        email: profile.email,\r\n        photoUrl: profile.photoUrl,\r\n        collegeName: profile.collegeName,\r\n        location: profile.location,\r\n        IQ: profile.IQ,\r\n        about: profile.about,\r\n        isFaculty: profile.isFaculty,\r\n      },\r\n      withCredentials: true,\r\n      url: dynamicUrl,\r\n    }).then((data) => {\r\n      const { message } = data.data;\r\n      setMessage(message);\r\n      console.log(message);\r\n    });\r\n    Axios({\r\n      method: \"POST\",\r\n      data: {\r\n        notification: `${profile.firstName} ${profile.lastName} has updated their Profile Details`,\r\n        username: user.username,\r\n        link: `http://localhost:3000/profile/${profile.id}`,\r\n      },\r\n      url: \"http://localhost:4000/addnotification\",\r\n    }).then((data) => {\r\n      console.log(data.data);\r\n    });\r\n  };\r\n\r\n  const deleteEducation = (e) => {\r\n    const educationId = e.target.value;\r\n    const url = \"http://localhost:4000/education/\";\r\n    const dynamicUrl = url + educationId;\r\n    console.log(educationId);\r\n    console.log(dynamicUrl);\r\n    Axios({\r\n      method: \"delete\",\r\n      url: dynamicUrl,\r\n    }).then((data) => {\r\n      const { message } = data.data;\r\n      setMessage(message);\r\n      console.log(message);\r\n      reloadPage();\r\n    });\r\n  };\r\n\r\n  const deleteWork = (e) => {\r\n    const workId = e.target.value;\r\n    const url = \"http://localhost:4000/work/\";\r\n    const dynamicUrl = url + workId;\r\n    console.log(workId);\r\n    console.log(dynamicUrl);\r\n    Axios({\r\n      method: \"delete\",\r\n      url: dynamicUrl,\r\n    }).then((data) => {\r\n      const { message } = data.data;\r\n      setMessage(message);\r\n      console.log(message);\r\n      reloadPage();\r\n    });\r\n  };\r\n\r\n  return (\r\n    <div className=\"profilebox\">\r\n      {!isAuthenticated ? <Redirect to=\"/login\" /> : null}\r\n      <h1>Profile</h1>\r\n      {!haveProfile ? (\r\n        <div className=\"noProfile\">\r\n          <h2>We don't have your Profile, Please make your Profile</h2>\r\n          <Link to=\"/newprofile\">\r\n            <button className=\"btn btn-lg btn-primary\">Create Profile</button>\r\n          </Link>\r\n        </div>\r\n      ) : (\r\n        <div className=\"profileMain\">\r\n          {!profile.photoUrl ? (\r\n            <img\r\n              src={defaultProfilePhoto}\r\n              alt=\"defaultProfilePhoto\"\r\n              style={{ width: \"200px\", height: \"200px\" }}\r\n            ></img>\r\n          ) : (\r\n            <img\r\n            className= \"profile_picture\"\r\n              src={profile.photoUrl}\r\n              style={{ width: \"200px\", height: \"200px\" }}\r\n              alt=\"profilePhoto\"\r\n            ></img>\r\n          )}\r\n          <div className= \"userinfo\">\r\n            <h5>Name: {profile.firstName} {profile.lastName}</h5>\r\n            <h5>Email: {profile.email}</h5>\r\n            <h5>College Name: {profile.collegeName}</h5>\r\n            <h5>Location: {profile.location}</h5>\r\n            <h5 className=\"profileIq\">IQ: {profile.IQ}</h5>\r\n            <h5 className=\"profileAbout\">About Me: {profile.about}</h5>\r\n            {!profile.isFaculty ? <h3>Student</h3> : <h3>Education Faculty</h3>}\r\n            <h4>Friends List:</h4>\r\n            {profile.friends.length === 0 ? null : (\r\n              <div>\r\n                {profile.friends.map((friend) => (\r\n                  <div>\r\n                    <h5>Friend's Username: {friend}</h5>\r\n                  </div>\r\n                ))}\r\n              </div>\r\n            )}\r\n          </div>\r\n          <Link to=\"#profileForm\">\r\n            <button\r\n              className=\"btn btn-lg btn-primary\"\r\n              onClick={editProfileForm}\r\n            >\r\n              <a href=\"#profileForm\"></a>\r\n              Edit Profile\r\n            </button>\r\n          </Link>\r\n          <button className=\"btn btn-danger btn-lg\" onClick={deleteProfile}>\r\n              Delete Profile\r\n          </button>\r\n          <div id=\"profileForm\">\r\n            {!editProfileClicked ? null : (\r\n              <div>\r\n                <form onSubmit={onSubmitProfile}>\r\n                  <h1>Edit Your Profile</h1>\r\n                  <div className=\"mb-3\">\r\n                    <label htmlFor=\"photoUrl\" className=\"form-label\">\r\n                      Profile Photo:{\" \"}\r\n                    </label>\r\n                    <input\r\n                      placeholder=\"Please Enter a URL\"\r\n                      onChange={onChangeProfile}\r\n                      name=\"photoUrl\"\r\n                      type=\"url\"\r\n                      className=\"form-control\"\r\n                      value={profile.photoUrl}\r\n                    />\r\n                  </div>\r\n                  <div className=\"mb-3\">\r\n                    <label htmlFor=\"firstName\" className=\"form-label\">\r\n                      First Name:{\" \"}\r\n                    </label>\r\n                    <input\r\n                      placeholder={profile.firstName}\r\n                      onChange={onChangeProfile}\r\n                      name=\"firstName\"\r\n                      type=\"text\"\r\n                      className=\"form-control\"\r\n                      value={profile.firstName}\r\n                      required\r\n                    />\r\n                  </div>\r\n                  <div className=\"mb-3\">\r\n                    <label htmlFor=\"lastName\" className=\"form-label\">\r\n                      Last Name:{\" \"}\r\n                    </label>\r\n                    <input\r\n                      placeholder={profile.lastName}\r\n                      onChange={onChangeProfile}\r\n                      name=\"lastName\"\r\n                      type=\"text\"\r\n                      className=\"form-control\"\r\n                      value={profile.lastName}\r\n                      required\r\n                    />\r\n                  </div>\r\n                  <label htmlFor=\"username\" className=\"form-label form-control\">\r\n                    Username: {user.username}\r\n                  </label>\r\n                  <div className=\"mb-3\">\r\n                    <label htmlFor=\"email\" className=\"form-label\">\r\n                      Email:{\" \"}\r\n                    </label>\r\n                    <input\r\n                      placeholder={profile.email}\r\n                      onChange={onChangeProfile}\r\n                      name=\"email\"\r\n                      type=\"email\"\r\n                      className=\"form-control\"\r\n                      value={profile.email}\r\n                      required\r\n                    />\r\n                  </div>\r\n                  <div className=\"mb-3\">\r\n                    <label htmlFor=\"collegeName\" className=\"form-label\">\r\n                      College Name:{\" \"}\r\n                    </label>\r\n                    <input\r\n                      placeholder={profile.collegeName}\r\n                      onChange={onChangeProfile}\r\n                      name=\"collegeName\"\r\n                      type=\"text\"\r\n                      value={profile.collegeName}\r\n                      className=\"form-control\"\r\n                    />\r\n                  </div>\r\n                  <div className=\"mb-3\">\r\n                    <label htmlFor=\"location\" className=\"form-label\">\r\n                      Location:{\" \"}\r\n                    </label>\r\n                    <input\r\n                      placeholder={profile.location}\r\n                      onChange={onChangeProfile}\r\n                      name=\"location\"\r\n                      type=\"text\"\r\n                      value={profile.location}\r\n                      className=\"form-control\"\r\n                    />\r\n                  </div>\r\n                  <div className=\"mb-3\">\r\n                    <label htmlFor=\"about\" className=\"form-label\">\r\n                      About:{\" \"}\r\n                    </label>\r\n                    <textarea\r\n                      placeholder={profile.about}\r\n                      onChange={onChangeProfile}\r\n                      name=\"about\"\r\n                      type=\"textarea\"\r\n                      value={profile.about}\r\n                      className=\"form-control\"\r\n                      rows=\"3\"\r\n                    />\r\n                  </div>\r\n                  <div className=\"mb-3\">\r\n                    <label htmlFor=\"isFaculty\" className=\"form-label\">\r\n                      Are you a Faculty:{\" \"}\r\n                    </label>\r\n                    <div className=\"form-check\">\r\n                      <input\r\n                        className=\"form-check-input\"\r\n                        type=\"radio\"\r\n                        name=\"isFaculty\"\r\n                        id=\"Yes\"\r\n                        value=\"true\"\r\n                        onClick={onChangeProfile}\r\n                        onChange={onChangeProfile}\r\n                      />\r\n                      <label className=\"form-check-label\" htmlFor=\"Yes\">\r\n                        Yes\r\n                      </label>\r\n                    </div>\r\n                    <div className=\"form-check\">\r\n                      <input\r\n                        className=\"form-check-input\"\r\n                        type=\"radio\"\r\n                        name=\"isFaculty\"\r\n                        id=\"No\"\r\n                        value=\"false\"\r\n                        onClick={onChangeProfile}\r\n                        onChange={onChangeProfile}\r\n                      />\r\n                      <label className=\"form-check-label\" htmlFor=\"No\">\r\n                        No\r\n                      </label>\r\n                    </div>\r\n                  </div>\r\n                  <button className=\"btn btn-lg btn-primary btn-block\">\r\n                    Submit\r\n                  </button>\r\n                  <button className=\"btn btn-lg btn-secondary btn-block\">\r\n                    Cancel\r\n                  </button>\r\n                </form>\r\n              </div>\r\n            )}\r\n          </div>\r\n          <hr className=\"lineEducation\"></hr>\r\n          <h2 className=\"educationdetails\">Education Details</h2>\r\n          <Link to=\"/neweducation\" className=\"educationAddBtn\">\r\n            <button className=\"btn btn-lg btn-primary\">+</button>\r\n          </Link>\r\n          {education.length === 0 ? <h6>You have no education details. Please add your details</h6> : \r\n            <div className=\"educationprofile\">\r\n              {education.map((item) => (\r\n                <div>\r\n                  <h4 className=\"item\" value={item.collegeName}>\r\n                    College Name: {item.collegeName}\r\n                  </h4>\r\n                  <h4 className=\"item\" value={item.collegeLocation}>\r\n                    College Location: {item.collegeLocation}\r\n                  </h4>\r\n                  <h4 className=\"item\" value={item.courseName}>\r\n                    Course Name: {item.courseName}\r\n                  </h4>\r\n                  <h4 className=\"item\" value={item.graduationDate}>\r\n                    Graduation Date: {item.graduationDate.slice(0, 10)}\r\n                  </h4>\r\n                  {!item.currentCollege ? null : (\r\n                    <h4 className=\"item\" value={item.currentCollege}>\r\n                      Current College\r\n                    </h4>\r\n                  )}\r\n                  <button\r\n                    className=\"btn btn-primary\"\r\n                    onClick={editEducationForm}\r\n                    href=\"#educationForm\"\r\n                    value={item._id}\r\n                  >\r\n                    Edit\r\n                  </button>\r\n                  <button\r\n                    className=\"btn btn-danger\"\r\n                    onClick={deleteEducation}\r\n                    value={item._id}\r\n                  >\r\n                    Delete\r\n                  </button>\r\n                  <hr className=\"line\"></hr>\r\n                </div>\r\n                \r\n              ))}\r\n              \r\n              {!editEducationClicked ? null : (\r\n                <div id=\"educationForm\">\r\n                  <form onSubmit={onSubmitEducation}>\r\n                    <h2>Edit Education Details</h2>\r\n                    <input\r\n                      placeholder={editEducation.collegeName}\r\n                      onChange={onChangeEducation}\r\n                      name=\"collegeName\"\r\n                      type=\"text\"\r\n                      className=\"form-control\"\r\n                      value={editEducation.collegeName}\r\n                      required\r\n                    />\r\n                    <input\r\n                      placeholder={editEducation.collegeLocation}\r\n                      onChange={onChangeEducation}\r\n                      name=\"collegeLocation\"\r\n                      type=\"text\"\r\n                      className=\"form-control\"\r\n                      value={editEducation.collegeLocation}\r\n                      required\r\n                    />\r\n                    <input\r\n                      placeholder={editEducation.courseName}\r\n                      onChange={onChangeEducation}\r\n                      name=\"courseName\"\r\n                      type=\"text\"\r\n                      className=\"form-control\"\r\n                      value={editEducation.courseName}\r\n                      required\r\n                    />\r\n                    <input\r\n                      placeholder={editEducation.graduationDate.slice(0, 10)}\r\n                      onChange={onChangeEducation}\r\n                      name=\"graduationDate\"\r\n                      type=\"date\"\r\n                      className=\"form-control\"\r\n                      value={editEducation.graduationDate.slice(0, 10)}\r\n                      required\r\n                    />\r\n                    <label htmlFor=\"currentCollege\" className=\"form-label\">\r\n                      Is this your current college:{\" \"}\r\n                    </label>\r\n                    <div className=\"form-check\">\r\n                      <input\r\n                        className=\"form-check-input\"\r\n                        type=\"radio\"\r\n                        name=\"currentCollege\"\r\n                        id=\"Yes\"\r\n                        value=\"true\"\r\n                        onClick={onChangeEducation}\r\n                        onChange={onChangeEducation}\r\n                      />\r\n                      <label className=\"form-check-label\" htmlFor=\"Yes\">\r\n                        Yes\r\n                      </label>\r\n                    </div>\r\n                    <div className=\"form-check\">\r\n                      <input\r\n                        className=\"form-check-input\"\r\n                        type=\"radio\"\r\n                        name=\"currentCollege\"\r\n                        id=\"No\"\r\n                        value=\"false\"\r\n                        onChange={onChangeEducation}\r\n                        onClick={onChangeEducation}\r\n                      />\r\n                      <label className=\"form-check-label\" htmlFor=\"No\">\r\n                        No\r\n                      </label>\r\n                    </div>\r\n                    <button className=\"btn btn-lg btn-primary\">Submit</button>\r\n                    <button className=\"btn btn-lg btn-secondary\">Cancel</button>\r\n                  </form>\r\n                </div>\r\n              )}\r\n            </div>\r\n          }\r\n          <h2 className=\"workdetails\">Work Details</h2>\r\n          <Link to=\"/newwork\" className=\"workAddBtn\">\r\n            <button className=\"btn btn-lg btn-primary\">+</button>\r\n          </Link>\r\n          {work.length === 0 ? <h6>You have no work details. Please add your details.</h6> : \r\n            <div className=\"workprofile\">\r\n              {work.map((item) => (\r\n                    <div>\r\n                      <h4 className=\"item\">Position: {item.position}</h4>\r\n                      <h4 className=\"item\">Employer Name: {item.employerName}</h4>\r\n                      <h4 className=\"item\">\r\n                        Start Date: {item.startDate.slice(0, 10)}\r\n                      </h4>\r\n                      {!item.endDate ? null : (\r\n                        <h4 className=\"item\">End Date: {item.endDate.slice(0, 10)}</h4>\r\n                      )}\r\n\r\n                      {!item.currentJob ? null : <h4 className=\"item\">Current Job</h4>}\r\n                      <button\r\n                        className=\"btn btn-primary\"\r\n                        onClick={editWorkForm}\r\n                        href=\"#workForm\"\r\n                        value={item._id}\r\n                      >\r\n                        Edit\r\n                      </button>\r\n                      <button\r\n                        className=\"btn btn-danger\"\r\n                        onClick={deleteWork}\r\n                        value={item._id}\r\n                      >\r\n                        Delete\r\n                      </button>\r\n                      <hr className=\"line\"></hr>\r\n                    </div>\r\n                  \r\n                ))}\r\n                {!editWorkClicked ? null : (\r\n                  <div id=\"workForm\">\r\n                    <form onSubmit={onSubmitWork}>\r\n                      <h2>Edit Work Details</h2>\r\n                      <input\r\n                        placeholder={editWork.position}\r\n                        onChange={onChangeWork}\r\n                        name=\"position\"\r\n                        type=\"text\"\r\n                        className=\"form-control\"\r\n                        value={editWork.position}\r\n                        required\r\n                      />\r\n                      <input\r\n                        placeholder={editWork.employerName}\r\n                        onChange={onChangeWork}\r\n                        name=\"employerName\"\r\n                        type=\"text\"\r\n                        className=\"form-control\"\r\n                        value={editWork.employerName}\r\n                        required\r\n                      />\r\n                      <input\r\n                        placeholder={editWork.startDate.slice(0, 10)}\r\n                        onChange={onChangeWork}\r\n                        name=\"startDate\"\r\n                        type=\"date\"\r\n                        className=\"form-control\"\r\n                        value={editWork.startDate.slice(0, 10)}\r\n                        required\r\n                      />\r\n                      <input\r\n                        placeholder={editWork.endDate.slice(0, 10)}\r\n                        onChange={onChangeWork}\r\n                        name=\"endDate\"\r\n                        type=\"date\"\r\n                        className=\"form-control\"\r\n                        value={editWork.endDate.slice(0, 10)}\r\n                        required\r\n                      />\r\n                      <label htmlFor=\"currentCollege\" className=\"form-label\">\r\n                        Is this your current job:{\" \"}\r\n                      </label>\r\n                      <div className=\"form-check\">\r\n                        <input\r\n                          className=\"form-check-input\"\r\n                          type=\"radio\"\r\n                          name=\"currentJob\"\r\n                          id=\"Yes\"\r\n                          value=\"true\"\r\n                          onChange={onChangeWork}\r\n                          onClick={onChangeWork}\r\n                        />\r\n                        <label className=\"form-check-label\" htmlFor=\"Yes\">\r\n                          Yes\r\n                        </label>\r\n                      </div>\r\n                      <div className=\"form-check\">\r\n                        <input\r\n                          className=\"form-check-input\"\r\n                          type=\"radio\"\r\n                          name=\"currentJob\"\r\n                          id=\"No\"\r\n                          value=\"false\"\r\n                          onChange={onChangeWork}\r\n                          onClick={onChangeWork}\r\n                        />\r\n                        <label className=\"form-check-label\" htmlFor=\"No\">\r\n                          No\r\n                        </label>\r\n                      </div>\r\n                      <button className=\"btn btn-lg btn-primary\">Submit</button>\r\n                      <button className=\"btn btn-lg btn-secondary\">Cancel</button>\r\n                    </form>\r\n                  </div>\r\n              \r\n              )}\r\n            </div>\r\n          }\r\n          {message ? <Message message={message} /> : null}\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default MyProfile;\r\n","D:\\GCFiles\\Sem6\\MyAcademia\\frontend\\src\\Components\\Message.js",[],"D:\\GCFiles\\Sem6\\MyAcademia\\frontend\\src\\Components\\NotificationPopUp.js",[],"D:\\GCFiles\\Sem6\\MyAcademia\\frontend\\src\\utils\\refreshToken.js",[],"D:\\GCFiles\\Sem6\\MyAcademia\\frontend\\src\\base.js",[],"D:\\GCFiles\\Sem6\\MyAcademia\\frontend\\src\\Components\\ChatFeed.jsx",[],"D:\\GCFiles\\Sem6\\MyAcademia\\frontend\\src\\Components\\MyMessage.jsx",[],"D:\\GCFiles\\Sem6\\MyAcademia\\frontend\\src\\Components\\TheirMessage.jsx",[],"D:\\GCFiles\\Sem6\\MyAcademia\\frontend\\src\\Components\\MessageForm.jsx",[],["231","232"],"D:\\GCFiles\\Sem6\\MyAcademia\\frontend\\src\\Components\\FriendsList.js",["233","234","235","236"],"import React, { useEffect, useContext, useState } from \"react\";\r\nimport Axios from \"axios\";\r\nimport { AuthContext } from \"../Context/AuthContext\";\r\nimport defaultProfilePhoto from \"../Images/default_profile_picture.png\";\r\n\r\nconst FriendsList = (props) => {\r\n  const { isAuthenticated, user, googleLogin, myprofileId } = useContext(\r\n    AuthContext\r\n  );\r\n  const [profile, setProfile] = useState({\r\n    id: \"\",\r\n    photoUrl: \"\",\r\n    firstName: \"\",\r\n    lastName: \"\",\r\n    username: \"\",\r\n    email: \"\",\r\n    collegeName: \"\",\r\n    location: \"\",\r\n    IQ: 0,\r\n    about: \"\",\r\n    isFaculty: false,\r\n    friends: [],\r\n  });\r\n  const [friendslist, setFriendsList] = useState([]);\r\n\r\n  useEffect(() => {\r\n    const username = user.username;\r\n    Axios({\r\n      method: \"GET\",\r\n      params: {\r\n        username: username,\r\n      },\r\n      url: \"http://localhost:4000/profile\",\r\n    }).then((data) => {\r\n      console.log(data);\r\n      if (data.data === null) {\r\n        console.log(\"No Profile data found\");\r\n      } else {\r\n        setProfile({\r\n          ...profile,\r\n          id: data.data._id,\r\n          photoUrl: data.data.photoUrl,\r\n          firstName: data.data.firstName,\r\n          lastName: data.data.lastName,\r\n          username: data.data.username,\r\n          email: data.data.email,\r\n          collegeName: data.data.collegeName,\r\n          location: data.data.location,\r\n          IQ: data.data.IQ,\r\n          about: data.data.about,\r\n          isFaculty: data.data.isFaculty,\r\n          friends: data.data.friends,\r\n        });\r\n      }\r\n    });\r\n  }, []);\r\n\r\n  const getFriendsDetails = () => {\r\n    if (profile.friends === null || profile.friends.length === 0) {\r\n      console.log(\"No profile friends found\");\r\n    } else {\r\n      Axios({\r\n        method: \"GET\",\r\n        params: {\r\n          username: profile.friends,\r\n        },\r\n        url: \"http://localhost:4000/profile\",\r\n      }).then((data) => {\r\n        if (data.data === null) {\r\n        } else {\r\n          const item = [data.data];\r\n          setFriendsList(item);\r\n          //   console.log(item[0]);\r\n        }\r\n      });\r\n    }\r\n  };\r\n\r\n  const goToProfile = (e) => {\r\n    console.log(\"goto profile clicked\");\r\n    const profileId = e.target.value;\r\n    console.log(profileId);\r\n    const url = \"http://localhost:3000/profile/\";\r\n    const dynamicUrl = url + profileId;\r\n    console.log(dynamicUrl);\r\n    const gotourl = dynamicUrl.slice(21);\r\n    props.history.push(gotourl);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      {getFriendsDetails()}\r\n      {friendslist.map((friend) => (\r\n        <div key={friend._id} className=\"card border-dark bg-light mb-3 media\">\r\n          {!friend.photoUrl ? (\r\n            <img\r\n              src={defaultProfilePhoto}\r\n              alt=\"defaultProfilePhoto\"\r\n              className=\"align-self-start mr-3\"\r\n              style={{ width: \"100px\", height: \"100px\" }}\r\n            ></img>\r\n          ) : (\r\n            <img\r\n              src={friend.photoUrl}\r\n              style={{ width: \"100px\", height: \"100px\" }}\r\n              alt=\"profilePhoto\"\r\n              className=\"align-self-start mr-3\"\r\n            ></img>\r\n          )}\r\n          <h2 className=\"mt-0\">\r\n            {friend.firstName} {friend.lastName}\r\n          </h2>\r\n          <h4 className=\"item\">{friend.location}</h4>\r\n          <button onClick={goToProfile} value={friend._id}>\r\n            Go to Profile\r\n          </button>\r\n        </div>\r\n      ))}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default FriendsList;\r\n",{"ruleId":"237","replacedBy":"238"},{"ruleId":"239","replacedBy":"240"},{"ruleId":"241","severity":1,"message":"242","line":6,"column":1,"nodeType":"243","endLine":45,"endColumn":3},{"ruleId":"241","severity":1,"message":"244","line":1,"column":1,"nodeType":"243","endLine":33,"endColumn":3},{"ruleId":"245","severity":1,"message":"246","line":1,"column":17,"nodeType":"247","messageId":"248","endLine":1,"endColumn":27},{"ruleId":"245","severity":1,"message":"249","line":3,"column":10,"nodeType":"247","messageId":"248","endLine":3,"endColumn":21},{"ruleId":"245","severity":1,"message":"250","line":5,"column":8,"nodeType":"247","messageId":"248","endLine":5,"endColumn":15},{"ruleId":"245","severity":1,"message":"251","line":10,"column":5,"nodeType":"247","messageId":"248","endLine":10,"endColumn":9},{"ruleId":"245","severity":1,"message":"252","line":10,"column":8,"nodeType":"247","messageId":"248","endLine":10,"endColumn":16},{"ruleId":"245","severity":1,"message":"253","line":11,"column":8,"nodeType":"247","messageId":"248","endLine":11,"endColumn":13},{"ruleId":"245","severity":1,"message":"254","line":16,"column":10,"nodeType":"247","messageId":"248","endLine":16,"endColumn":21},{"ruleId":"245","severity":1,"message":"255","line":16,"column":23,"nodeType":"247","messageId":"248","endLine":16,"endColumn":37},{"ruleId":"256","severity":1,"message":"257","line":119,"column":7,"nodeType":"258","endLine":119,"endColumn":27},{"ruleId":"245","severity":1,"message":"253","line":6,"column":8,"nodeType":"247","messageId":"248","endLine":6,"endColumn":13},{"ruleId":"245","severity":1,"message":"254","line":9,"column":34,"nodeType":"247","messageId":"248","endLine":9,"endColumn":45},{"ruleId":"259","severity":1,"message":"260","line":60,"column":6,"nodeType":"261","endLine":60,"endColumn":8,"suggestions":"262"},{"ruleId":"263","severity":1,"message":"264","line":79,"column":16,"nodeType":"265","messageId":"266","endLine":79,"endColumn":18},{"ruleId":"267","severity":1,"message":"268","line":80,"column":14,"nodeType":"258","endLine":80,"endColumn":66},{"ruleId":"263","severity":1,"message":"264","line":81,"column":23,"nodeType":"265","messageId":"266","endLine":81,"endColumn":25},{"ruleId":"256","severity":1,"message":"257","line":82,"column":14,"nodeType":"258","endLine":82,"endColumn":65},{"ruleId":"263","severity":1,"message":"264","line":91,"column":23,"nodeType":"265","messageId":"266","endLine":91,"endColumn":25},{"ruleId":"263","severity":1,"message":"264","line":102,"column":22,"nodeType":"265","messageId":"266","endLine":102,"endColumn":24},{"ruleId":"263","severity":1,"message":"264","line":106,"column":20,"nodeType":"265","messageId":"266","endLine":106,"endColumn":22},{"ruleId":"263","severity":1,"message":"269","line":107,"column":12,"nodeType":"265","messageId":"266","endLine":107,"endColumn":14},{"ruleId":"245","severity":1,"message":"270","line":14,"column":29,"nodeType":"247","messageId":"248","endLine":14,"endColumn":38},{"ruleId":"245","severity":1,"message":"271","line":14,"column":40,"nodeType":"247","messageId":"248","endLine":14,"endColumn":45},{"ruleId":"245","severity":1,"message":"272","line":14,"column":54,"nodeType":"247","messageId":"248","endLine":14,"endColumn":59},{"ruleId":"259","severity":1,"message":"273","line":54,"column":6,"nodeType":"261","endLine":54,"endColumn":8,"suggestions":"274"},{"ruleId":"245","severity":1,"message":"275","line":56,"column":9,"nodeType":"247","messageId":"248","endLine":56,"endColumn":17},{"ruleId":"245","severity":1,"message":"276","line":82,"column":11,"nodeType":"247","messageId":"248","endLine":82,"endColumn":29},{"ruleId":"245","severity":1,"message":"254","line":11,"column":34,"nodeType":"247","messageId":"248","endLine":11,"endColumn":45},{"ruleId":"245","severity":1,"message":"277","line":30,"column":20,"nodeType":"247","messageId":"248","endLine":30,"endColumn":31},{"ruleId":"245","severity":1,"message":"278","line":32,"column":13,"nodeType":"247","messageId":"248","endLine":32,"endColumn":17},{"ruleId":"263","severity":1,"message":"264","line":42,"column":14,"nodeType":"265","messageId":"266","endLine":42,"endColumn":16},{"ruleId":"263","severity":1,"message":"264","line":42,"column":35,"nodeType":"265","messageId":"266","endLine":42,"endColumn":37},{"ruleId":"263","severity":1,"message":"269","line":63,"column":14,"nodeType":"265","messageId":"266","endLine":63,"endColumn":16},{"ruleId":"263","severity":1,"message":"264","line":69,"column":11,"nodeType":"265","messageId":"266","endLine":69,"endColumn":13},{"ruleId":"263","severity":1,"message":"264","line":70,"column":11,"nodeType":"265","messageId":"266","endLine":70,"endColumn":13},{"ruleId":"263","severity":1,"message":"264","line":71,"column":11,"nodeType":"265","messageId":"266","endLine":71,"endColumn":13},{"ruleId":"263","severity":1,"message":"264","line":72,"column":11,"nodeType":"265","messageId":"266","endLine":72,"endColumn":13},{"ruleId":"263","severity":1,"message":"264","line":73,"column":11,"nodeType":"265","messageId":"266","endLine":73,"endColumn":13},{"ruleId":"263","severity":1,"message":"264","line":74,"column":11,"nodeType":"265","messageId":"266","endLine":74,"endColumn":13},{"ruleId":"263","severity":1,"message":"264","line":75,"column":11,"nodeType":"265","messageId":"266","endLine":75,"endColumn":13},{"ruleId":"263","severity":1,"message":"264","line":76,"column":11,"nodeType":"265","messageId":"266","endLine":76,"endColumn":13},{"ruleId":"263","severity":1,"message":"264","line":77,"column":11,"nodeType":"265","messageId":"266","endLine":77,"endColumn":13},{"ruleId":"263","severity":1,"message":"264","line":81,"column":11,"nodeType":"265","messageId":"266","endLine":81,"endColumn":13},{"ruleId":"263","severity":1,"message":"264","line":82,"column":11,"nodeType":"265","messageId":"266","endLine":82,"endColumn":13},{"ruleId":"263","severity":1,"message":"264","line":83,"column":11,"nodeType":"265","messageId":"266","endLine":83,"endColumn":13},{"ruleId":"263","severity":1,"message":"264","line":84,"column":11,"nodeType":"265","messageId":"266","endLine":84,"endColumn":13},{"ruleId":"263","severity":1,"message":"264","line":85,"column":11,"nodeType":"265","messageId":"266","endLine":85,"endColumn":13},{"ruleId":"263","severity":1,"message":"264","line":86,"column":11,"nodeType":"265","messageId":"266","endLine":86,"endColumn":13},{"ruleId":"263","severity":1,"message":"264","line":87,"column":11,"nodeType":"265","messageId":"266","endLine":87,"endColumn":13},{"ruleId":"263","severity":1,"message":"264","line":90,"column":20,"nodeType":"265","messageId":"266","endLine":90,"endColumn":22},{"ruleId":"245","severity":1,"message":"254","line":8,"column":34,"nodeType":"247","messageId":"248","endLine":8,"endColumn":45},{"ruleId":"259","severity":1,"message":"279","line":32,"column":6,"nodeType":"261","endLine":32,"endColumn":8,"suggestions":"280"},{"ruleId":"245","severity":1,"message":"250","line":6,"column":8,"nodeType":"247","messageId":"248","endLine":6,"endColumn":15},{"ruleId":"245","severity":1,"message":"254","line":9,"column":34,"nodeType":"247","messageId":"248","endLine":9,"endColumn":45},{"ruleId":"245","severity":1,"message":"281","line":29,"column":10,"nodeType":"247","messageId":"248","endLine":29,"endColumn":22},{"ruleId":"245","severity":1,"message":"282","line":29,"column":24,"nodeType":"247","messageId":"248","endLine":29,"endColumn":39},{"ruleId":"245","severity":1,"message":"283","line":37,"column":29,"nodeType":"247","messageId":"248","endLine":37,"endColumn":49},{"ruleId":"259","severity":1,"message":"284","line":85,"column":17,"nodeType":"285","endLine":85,"endColumn":51},{"ruleId":"245","severity":1,"message":"286","line":3,"column":10,"nodeType":"247","messageId":"248","endLine":3,"endColumn":14},{"ruleId":"245","severity":1,"message":"287","line":5,"column":8,"nodeType":"247","messageId":"248","endLine":5,"endColumn":15},{"ruleId":"245","severity":1,"message":"288","line":6,"column":8,"nodeType":"247","messageId":"248","endLine":6,"endColumn":15},{"ruleId":"245","severity":1,"message":"250","line":8,"column":8,"nodeType":"247","messageId":"248","endLine":8,"endColumn":15},{"ruleId":"245","severity":1,"message":"251","line":11,"column":28,"nodeType":"247","messageId":"248","endLine":11,"endColumn":32},{"ruleId":"245","severity":1,"message":"254","line":11,"column":34,"nodeType":"247","messageId":"248","endLine":11,"endColumn":45},{"ruleId":"245","severity":1,"message":"289","line":14,"column":10,"nodeType":"247","messageId":"248","endLine":14,"endColumn":19},{"ruleId":"245","severity":1,"message":"290","line":15,"column":10,"nodeType":"247","messageId":"248","endLine":15,"endColumn":17},{"ruleId":"245","severity":1,"message":"291","line":15,"column":19,"nodeType":"247","messageId":"248","endLine":15,"endColumn":29},{"ruleId":"245","severity":1,"message":"292","line":17,"column":10,"nodeType":"247","messageId":"248","endLine":17,"endColumn":17},{"ruleId":"245","severity":1,"message":"275","line":31,"column":9,"nodeType":"247","messageId":"248","endLine":31,"endColumn":17},{"ruleId":"245","severity":1,"message":"293","line":76,"column":9,"nodeType":"247","messageId":"248","endLine":76,"endColumn":19},{"ruleId":"245","severity":1,"message":"286","line":3,"column":10,"nodeType":"247","messageId":"248","endLine":3,"endColumn":14},{"ruleId":"245","severity":1,"message":"294","line":4,"column":10,"nodeType":"247","messageId":"248","endLine":4,"endColumn":15},{"ruleId":"245","severity":1,"message":"295","line":7,"column":8,"nodeType":"247","messageId":"248","endLine":7,"endColumn":14},{"ruleId":"245","severity":1,"message":"296","line":9,"column":8,"nodeType":"247","messageId":"248","endLine":9,"endColumn":17},{"ruleId":"245","severity":1,"message":"250","line":11,"column":8,"nodeType":"247","messageId":"248","endLine":11,"endColumn":15},{"ruleId":"245","severity":1,"message":"254","line":14,"column":34,"nodeType":"247","messageId":"248","endLine":14,"endColumn":45},{"ruleId":"245","severity":1,"message":"297","line":18,"column":10,"nodeType":"247","messageId":"248","endLine":18,"endColumn":21},{"ruleId":"245","severity":1,"message":"298","line":18,"column":23,"nodeType":"247","messageId":"248","endLine":18,"endColumn":37},{"ruleId":"245","severity":1,"message":"299","line":43,"column":10,"nodeType":"247","messageId":"248","endLine":43,"endColumn":21},{"ruleId":"245","severity":1,"message":"300","line":44,"column":10,"nodeType":"247","messageId":"248","endLine":44,"endColumn":20},{"ruleId":"245","severity":1,"message":"301","line":44,"column":22,"nodeType":"247","messageId":"248","endLine":44,"endColumn":35},{"ruleId":"245","severity":1,"message":"302","line":50,"column":7,"nodeType":"247","messageId":"248","endLine":50,"endColumn":14},{"ruleId":"259","severity":1,"message":"303","line":103,"column":6,"nodeType":"261","endLine":103,"endColumn":8,"suggestions":"304"},{"ruleId":"245","severity":1,"message":"305","line":1,"column":40,"nodeType":"247","messageId":"248","endLine":1,"endColumn":46},{"ruleId":"245","severity":1,"message":"288","line":7,"column":8,"nodeType":"247","messageId":"248","endLine":7,"endColumn":15},{"ruleId":"245","severity":1,"message":"306","line":8,"column":8,"nodeType":"247","messageId":"248","endLine":8,"endColumn":19},{"ruleId":"245","severity":1,"message":"254","line":12,"column":34,"nodeType":"247","messageId":"248","endLine":12,"endColumn":45},{"ruleId":"245","severity":1,"message":"307","line":12,"column":47,"nodeType":"247","messageId":"248","endLine":12,"endColumn":58},{"ruleId":"245","severity":1,"message":"308","line":15,"column":9,"nodeType":"247","messageId":"248","endLine":15,"endColumn":20},{"ruleId":"259","severity":1,"message":"260","line":120,"column":6,"nodeType":"261","endLine":120,"endColumn":8,"suggestions":"309"},{"ruleId":"245","severity":1,"message":"310","line":142,"column":9,"nodeType":"247","messageId":"248","endLine":142,"endColumn":18},{"ruleId":"311","severity":1,"message":"312","line":402,"column":15,"nodeType":"258","endLine":402,"endColumn":38},{"ruleId":"237","replacedBy":"313"},{"ruleId":"239","replacedBy":"314"},{"ruleId":"245","severity":1,"message":"315","line":7,"column":11,"nodeType":"247","messageId":"248","endLine":7,"endColumn":26},{"ruleId":"245","severity":1,"message":"254","line":7,"column":34,"nodeType":"247","messageId":"248","endLine":7,"endColumn":45},{"ruleId":"245","severity":1,"message":"307","line":7,"column":47,"nodeType":"247","messageId":"248","endLine":7,"endColumn":58},{"ruleId":"259","severity":1,"message":"260","line":56,"column":6,"nodeType":"261","endLine":56,"endColumn":8,"suggestions":"316"},"no-native-reassign",["317"],"no-negated-in-lhs",["318"],"import/no-anonymous-default-export","Assign arrow function to a variable before exporting as module default","ExportDefaultDeclaration","Assign object to a variable before exporting as module default","no-unused-vars","'useContext' is defined but never used.","Identifier","unusedVar","'AuthContext' is defined but never used.","'styling' is defined but never used.","'user' is assigned a value but never used.","'logoHome' is defined but never used.","'style' is defined but never used.","'googleLogin' is assigned a value but never used.","'setGoogleLogin' is assigned a value but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'profile' and 'user.username'. Either include them or remove the dependency array. You can also do a functional update 'setProfile(p => ...)' if you only need 'profile' in the 'setProfile' call.","ArrayExpression",["319"],"eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","jsx-a11y/iframe-has-title","<iframe> elements must have a unique title property.","Expected '!==' and instead saw '!='.","'isRunning' is assigned a value but never used.","'start' is assigned a value but never used.","'reset' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'myProfile' and 'user.username'. Either include them or remove the dependency array. You can also do a functional update 'setMyProfile(m => ...)' if you only need 'myProfile' in the 'setMyProfile' call.",["320"],"'onChange' is assigned a value but never used.","'secondsCalculation' is assigned a value but never used.","'setRedirect' is assigned a value but never used.","'setS' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'user.username'. Either include it or remove the dependency array.",["321"],"'Notification' is assigned a value but never used.","'setNotification' is assigned a value but never used.","'setNotificationPopUp' is assigned a value but never used.","Assignments to the 'ISOstring' variable from inside React Hook useEffect will be lost after each render. To preserve the value over time, store it in a useRef Hook and keep the mutable value in the '.current' property. Otherwise, you can move this variable directly inside useEffect.","CallExpression","'Link' is defined but never used.","'Message' is defined but never used.","'Profile' is defined but never used.","'firstName' is assigned a value but never used.","'loading' is assigned a value but never used.","'setLoading' is assigned a value but never used.","'profile' is assigned a value but never used.","'getProfile' is assigned a value but never used.","'store' is defined but never used.","'Search' is defined but never used.","'MyProfile' is defined but never used.","'haveProfile' is assigned a value but never used.","'setHaveProfile' is assigned a value but never used.","'requestSent' is assigned a value but never used.","'friendship' is assigned a value but never used.","'setFriendship' is assigned a value but never used.","'timerID' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'myProfileID', 'profile', and 'user.username'. Either include them or remove the dependency array. You can also do a functional update 'setProfile(p => ...)' if you only need 'profile' in the 'setProfile' call.",["322"],"'useRef' is defined but never used.","'AuthService' is defined but never used.","'myprofileId' is assigned a value but never used.","'authContext' is assigned a value but never used.",["323"],"'resetForm' is assigned a value but never used.","jsx-a11y/anchor-has-content","Anchors must have content and the content must be accessible by a screen reader.",["317"],["318"],"'isAuthenticated' is assigned a value but never used.",["324"],"no-global-assign","no-unsafe-negation",{"desc":"325","fix":"326"},{"desc":"327","fix":"328"},{"desc":"329","fix":"330"},{"desc":"331","fix":"332"},{"desc":"325","fix":"333"},{"desc":"325","fix":"334"},"Update the dependencies array to be: [profile, user.username]",{"range":"335","text":"336"},"Update the dependencies array to be: [myProfile, user.username]",{"range":"337","text":"338"},"Update the dependencies array to be: [user.username]",{"range":"339","text":"340"},"Update the dependencies array to be: [myProfileID, profile, user.username]",{"range":"341","text":"342"},{"range":"343","text":"336"},{"range":"344","text":"336"},[1670,1672],"[profile, user.username]",[1741,1743],"[myProfile, user.username]",[1064,1066],"[user.username]",[3126,3128],"[myProfileID, profile, user.username]",[3479,3481],[1567,1569]]