[{"C:\\Users\\savan patel\\Desktop\\MyAcadamia\\MyAcademia\\frontend\\src\\index.js":"1","C:\\Users\\savan patel\\Desktop\\MyAcadamia\\MyAcademia\\frontend\\src\\reportWebVitals.js":"2","C:\\Users\\savan patel\\Desktop\\MyAcadamia\\MyAcademia\\frontend\\src\\Context\\AuthContext.js":"3","C:\\Users\\savan patel\\Desktop\\MyAcadamia\\MyAcademia\\frontend\\src\\Components\\App.js":"4","C:\\Users\\savan patel\\Desktop\\MyAcadamia\\MyAcademia\\frontend\\src\\Services\\AuthService.js":"5","C:\\Users\\savan patel\\Desktop\\MyAcadamia\\MyAcademia\\frontend\\src\\Components\\Challenge.js":"6","C:\\Users\\savan patel\\Desktop\\MyAcadamia\\MyAcademia\\frontend\\src\\Components\\Messaging.js":"7","C:\\Users\\savan patel\\Desktop\\MyAcadamia\\MyAcademia\\frontend\\src\\Components\\Register.js":"8","C:\\Users\\savan patel\\Desktop\\MyAcadamia\\MyAcademia\\frontend\\src\\Components\\Navbar.js":"9","C:\\Users\\savan patel\\Desktop\\MyAcadamia\\MyAcademia\\frontend\\src\\Components\\Login.js":"10","C:\\Users\\savan patel\\Desktop\\MyAcadamia\\MyAcademia\\frontend\\src\\Components\\WorkForm.js":"11","C:\\Users\\savan patel\\Desktop\\MyAcadamia\\MyAcademia\\frontend\\src\\Components\\EducationForm.js":"12","C:\\Users\\savan patel\\Desktop\\MyAcadamia\\MyAcademia\\frontend\\src\\Components\\Home.js":"13","C:\\Users\\savan patel\\Desktop\\MyAcadamia\\MyAcademia\\frontend\\src\\Components\\Notification.js":"14","C:\\Users\\savan patel\\Desktop\\MyAcadamia\\MyAcademia\\frontend\\src\\Components\\Search.js":"15","C:\\Users\\savan patel\\Desktop\\MyAcadamia\\MyAcademia\\frontend\\src\\Components\\Profile.js":"16","C:\\Users\\savan patel\\Desktop\\MyAcadamia\\MyAcademia\\frontend\\src\\Components\\ProfileForm.js":"17","C:\\Users\\savan patel\\Desktop\\MyAcadamia\\MyAcademia\\frontend\\src\\Components\\MyProfile.js":"18","C:\\Users\\savan patel\\Desktop\\MyAcadamia\\MyAcademia\\frontend\\src\\Components\\Message.js":"19","C:\\Users\\savan patel\\Desktop\\MyAcadamia\\MyAcademia\\frontend\\src\\utils\\refreshToken.js":"20","C:\\Users\\savan patel\\Desktop\\MyAcadamia\\MyAcademia\\frontend\\src\\Components\\NotificationPopUp.js":"21","C:\\Users\\savan patel\\Desktop\\MyAcadamia\\MyAcademia\\frontend\\src\\Components\\IQTest.js":"22"},{"size":718,"mtime":1616617599337,"results":"23","hashOfConfig":"24"},{"size":375,"mtime":1616617599337,"results":"25","hashOfConfig":"24"},{"size":1223,"mtime":1616617599337,"results":"26","hashOfConfig":"24"},{"size":1675,"mtime":1618188599875,"results":"27","hashOfConfig":"24"},{"size":939,"mtime":1616617599337,"results":"28","hashOfConfig":"24"},{"size":7176,"mtime":1618255202043,"results":"29","hashOfConfig":"24"},{"size":488,"mtime":1616617599321,"results":"30","hashOfConfig":"24"},{"size":2549,"mtime":1617916531146,"results":"31","hashOfConfig":"24"},{"size":3407,"mtime":1616617599321,"results":"32","hashOfConfig":"24"},{"size":5520,"mtime":1617916531137,"results":"33","hashOfConfig":"24"},{"size":4812,"mtime":1618188599981,"results":"34","hashOfConfig":"24"},{"size":5124,"mtime":1618188600011,"results":"35","hashOfConfig":"24"},{"size":2236,"mtime":1617916531127,"results":"36","hashOfConfig":"24"},{"size":11425,"mtime":1618188599879,"results":"37","hashOfConfig":"24"},{"size":8060,"mtime":1617916531147,"results":"38","hashOfConfig":"24"},{"size":16411,"mtime":1617925861243,"results":"39","hashOfConfig":"24"},{"size":6369,"mtime":1618189588133,"results":"40","hashOfConfig":"24"},{"size":28588,"mtime":1618191225606,"results":"41","hashOfConfig":"24"},{"size":428,"mtime":1616617599321,"results":"42","hashOfConfig":"24"},{"size":493,"mtime":1616617599337,"results":"43","hashOfConfig":"24"},{"size":761,"mtime":1617916531143,"results":"44","hashOfConfig":"24"},{"size":6077,"mtime":1618254803373,"results":"45","hashOfConfig":"24"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},"1abvy8r",{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"53","usedDeprecatedRules":"48"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"58","usedDeprecatedRules":"48"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"61","messages":"62","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"63","usedDeprecatedRules":"48"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"66","usedDeprecatedRules":"48"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"69","usedDeprecatedRules":"48"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"72","usedDeprecatedRules":"48"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"77","usedDeprecatedRules":"48"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"80","usedDeprecatedRules":"48"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"83","usedDeprecatedRules":"48"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":"86","usedDeprecatedRules":"48"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":12,"fixableErrorCount":0,"fixableWarningCount":0,"source":"89","usedDeprecatedRules":"48"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"92","messages":"93","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"94","messages":"95","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"96","messages":"97","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"98","messages":"99","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"100","messages":"101","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"C:\\Users\\savan patel\\Desktop\\MyAcadamia\\MyAcademia\\frontend\\src\\index.js",[],["102","103"],"C:\\Users\\savan patel\\Desktop\\MyAcadamia\\MyAcademia\\frontend\\src\\reportWebVitals.js",[],"C:\\Users\\savan patel\\Desktop\\MyAcadamia\\MyAcademia\\frontend\\src\\Context\\AuthContext.js",["104"],"import React, { createContext, useState, useEffect } from \"react\";\r\nimport AuthService from \"../Services/AuthService\";\r\n\r\nexport const AuthContext = createContext();\r\n\r\nexport default ({ children }) => {\r\n  const [user, setUser] = useState(null);\r\n  const [myprofileId, setMyProfileId] = useState(null);\r\n  const [googleLogin, setGoogleLogin] = useState(false);\r\n  const [isAuthenticated, setIsAuthenticated] = useState(false);\r\n  const [isLoaded, setIsLoaded] = useState(false);\r\n\r\n  useEffect(() => {\r\n    AuthService.isAuthenticated().then((data) => {\r\n      setUser(data.user);\r\n      setMyProfileId(data.myprofileId);\r\n      setGoogleLogin(data.googleLogin);\r\n      setIsAuthenticated(data.isAuthenticated);\r\n      setIsLoaded(true);\r\n    });\r\n  }, []);\r\n\r\n  return (\r\n    <div>\r\n      {!isLoaded ? (\r\n        <h1>Loading</h1>\r\n      ) : (\r\n        <AuthContext.Provider\r\n          value={{\r\n            user,\r\n            setUser,\r\n            isAuthenticated,\r\n            setIsAuthenticated,\r\n            googleLogin,\r\n            setGoogleLogin,\r\n            myprofileId,\r\n            setMyProfileId,\r\n          }}\r\n        >\r\n          {children}\r\n        </AuthContext.Provider>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n","C:\\Users\\savan patel\\Desktop\\MyAcadamia\\MyAcademia\\frontend\\src\\Components\\App.js",[],"C:\\Users\\savan patel\\Desktop\\MyAcadamia\\MyAcademia\\frontend\\src\\Services\\AuthService.js",["105"],"export default {\r\n  login: (user) => {\r\n    return fetch(\"/user/login\", {\r\n      method: \"post\",\r\n      body: JSON.stringify(user),\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n    }).then((res) => {\r\n      if (res.status !== 401) return res.json().then((data) => data);\r\n      else\r\n        return {\r\n          isAuthenticated: false,\r\n          user: { username: \"\" },\r\n          message: {\r\n            msgBody: \"Username or Password is incorrect, Please try again\",\r\n            msgError: true,\r\n          },\r\n        };\r\n    });\r\n  },\r\n  logout: () => {\r\n    return fetch(\"/user/logout\")\r\n      .then((res) => res.json())\r\n      .then((data) => data);\r\n  },\r\n  isAuthenticated: () => {\r\n    return fetch(\"/user/authenticated\").then((res) => {\r\n      if (res.status !== 401) return res.json().then((data) => data);\r\n      else return { isAuthenticated: false, user: { username: \"\" } };\r\n    });\r\n  },\r\n};\r\n","C:\\Users\\savan patel\\Desktop\\MyAcadamia\\MyAcademia\\frontend\\src\\Components\\Challenge.js",["106","107"],"C:\\Users\\savan patel\\Desktop\\MyAcadamia\\MyAcademia\\frontend\\src\\Components\\Messaging.js",["108"],"import React, { useContext } from \"react\";\r\nimport { Redirect } from \"react-router-dom\";\r\nimport { AuthContext } from \"../Context/AuthContext\";\r\n\r\nconst Messaging = (props) => {\r\n  const { isAuthenticated, user, googleLogin } = useContext(AuthContext);\r\n\r\n  return (\r\n    <div>\r\n      {!isAuthenticated ? <Redirect to=\"/login\" /> : null}\r\n      <h1>Welcome to Messaging Page</h1>\r\n      <h2>{!user.username ? null : user.username}</h2>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Messaging;\r\n","C:\\Users\\savan patel\\Desktop\\MyAcadamia\\MyAcademia\\frontend\\src\\Components\\Register.js",["109","110"],"import React, { useContext, useEffect, useRef, useState } from \"react\";\r\nimport Axios from \"axios\";\r\nimport { AuthContext } from \"../Context/AuthContext\";\r\nimport Message from \"./Message\";\r\nimport styling from \"../Styling/Registration-style.css\";\r\n\r\n//creating class and extending the component\r\nconst Register = (props) => {\r\n  const [user, setUser] = useState({ username: \"\", password: \"\" });\r\n  const [message, setMessage] = useState(null);\r\n  let timerID = useRef(null);\r\n\r\n  useEffect(() => {\r\n    return () => {\r\n      clearTimeout(timerID);\r\n    };\r\n  }, []);\r\n\r\n  //making function onChange to take value from input fields in the form\r\n  const onChange = (e) => {\r\n    e.preventDefault();\r\n    setUser({ ...user, [e.target.name]: e.target.value });\r\n  };\r\n\r\n  const resetForm = () => {\r\n    setUser({ username: \"\", password: \"\" });\r\n  };\r\n\r\n  // creating register function and using axios to store the value in database\r\n  // Reference: https://github.com/woodburydev/passport-local-video/blob/master/client/src/App.js\r\n  const onSubmit = (e) => {\r\n    e.preventDefault();\r\n    Axios({\r\n      method: \"POST\",\r\n      data: {\r\n        username: user.username,\r\n        password: user.password,\r\n      },\r\n      withCredentials: true,\r\n      url: \"http://localhost:4000/user/register\",\r\n    }).then((data) => {\r\n      const { message } = data.data;\r\n      setMessage(message);\r\n      resetForm();\r\n      console.log(message);\r\n      if (!message.msgError) {\r\n        timerID = setTimeout(() => {\r\n          props.history.push(\"/login\");\r\n        }, 2000);\r\n      }\r\n    });\r\n  };\r\n\r\n  // rendering the page with jsx elements\r\n  return (\r\n    <div className=\"register\">\r\n      <form onSubmit={onSubmit}>\r\n        <h1>Register</h1>\r\n        <label htmlFor=\"username\" className=\"sr-only\">\r\n          Username:{\" \"}\r\n        </label>\r\n        <input\r\n          placeholder=\"Enter Username\"\r\n          onChange={onChange}\r\n          name=\"username\"\r\n          type=\"text\"\r\n          className=\"form-control\"\r\n          required\r\n        />\r\n        <label htmlFor=\"password\" className=\"sr-only\">\r\n          Password:{\" \"}\r\n        </label>\r\n        <input\r\n          placeholder=\"Enter Password\"\r\n          onChange={onChange}\r\n          name=\"password\"\r\n          type=\"password\"\r\n          className=\"form-control\"\r\n          required\r\n        />\r\n        <button className=\"btn btn-lg btn-primary btn-block\">Submit</button>\r\n      </form>\r\n      {message ? <Message message={message} /> : null}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Register;\r\n","C:\\Users\\savan patel\\Desktop\\MyAcadamia\\MyAcademia\\frontend\\src\\Components\\Navbar.js",["111"],"import React, { useContext } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport AuthService from \"../Services/AuthService\";\r\nimport { AuthContext } from \"../Context/AuthContext\";\r\nimport { GoogleLogout } from \"react-google-login\";\r\n\r\nconst Navbar = (props) => {\r\n  const {\r\n    isAuthenticated,\r\n    user,\r\n    setIsAuthenticated,\r\n    setUser,\r\n    googleLogin,\r\n    setGoogleLogin,\r\n  } = useContext(AuthContext);\r\n\r\n  const onLogoutSuccess = (res) => {\r\n    AuthService.logout().then((data) => {\r\n      if (data.success) {\r\n        setUser(data.user);\r\n        setIsAuthenticated(false);\r\n        setGoogleLogin(false);\r\n      }\r\n    });\r\n    alert(\"Logout Successful\");\r\n  };\r\n\r\n  const onFailure = () => {\r\n    alert(\"Logout Unsuccessful, Please try again later\");\r\n  };\r\n\r\n  const onClickLogoutHandler = () => {\r\n    AuthService.logout().then((data) => {\r\n      if (data.success) {\r\n        setUser(data.user);\r\n        setIsAuthenticated(false);\r\n      }\r\n    });\r\n  };\r\n\r\n  const unauthenticatedNavbar = () => {\r\n    return (\r\n      <>\r\n        <Link to=\"/login\">\r\n          <li className=\"nav-item nav-link\">Login</li>\r\n        </Link>\r\n        <Link to=\"/register\">\r\n          <li className=\"nav-item nav-link\">Register</li>\r\n        </Link>\r\n      </>\r\n    );\r\n  };\r\n\r\n  const authenticatedNavbar = () => {\r\n    return (\r\n      <>\r\n        <Link to=\"/\">\r\n          <li className=\"nav-item nav-link\">Home</li>\r\n        </Link>\r\n        <Link to=\"/myprofile\">\r\n          <li className=\"nav-item nav-link\">Profile</li>\r\n        </Link>\r\n        <Link to=\"/messaging\">\r\n          <li className=\"nav-item nav-link\">Messaging</li>\r\n        </Link>\r\n        <Link to=\"/notification\">\r\n          <li className=\"nav-item nav-link\">Notification</li>\r\n        </Link>\r\n        <Link to=\"/challenge\">\r\n          <li className=\"nav-item nav-link\">Challenge</li>\r\n        </Link>\r\n        <Link to=\"/search\">\r\n          <li className=\"nav-item nav-link\">Search</li>\r\n        </Link>\r\n        {!googleLogin ? (\r\n          <button\r\n            type=\"button\"\r\n            className=\"btn btn-link nav-item nav-link\"\r\n            onClick={onClickLogoutHandler}\r\n          >\r\n            Logout\r\n          </button>\r\n        ) : (\r\n          <GoogleLogout\r\n            clientId=\"255153393550-c00iv7khe28pcrheeitfh6p20h6ie83o.apps.googleusercontent.com\"\r\n            buttonText=\"Logout\"\r\n            onLogoutSuccess={onLogoutSuccess}\r\n            onFailure={onFailure}\r\n            href=\"/login\"\r\n          ></GoogleLogout>\r\n        )}\r\n      </>\r\n    );\r\n  };\r\n\r\n  return (\r\n    <nav className=\"navbar navbar-expand-lg navbar-light bg-light\">\r\n      <div className=\"container-fluid\">\r\n        <div className=\"navbar-brand\">MyAcademia</div>\r\n        <button\r\n          className=\"navbar-toggler\"\r\n          type=\"button\"\r\n          data-bs-toggle=\"collapse\"\r\n          data-bs-target=\"#navbarText\"\r\n          aria-controls=\"navbarText\"\r\n          aria-expanded=\"false\"\r\n          aria-label=\"Toggle navigation\"\r\n        >\r\n          <span className=\"navbar-toggler-icon\"></span>\r\n        </button>\r\n        <div className=\"collapse navbar-collapse\" id=\"navbarText\">\r\n          <ul className=\"navbar-nav me-auto mb-2 mb-lg-0\">\r\n            {!isAuthenticated ? unauthenticatedNavbar() : authenticatedNavbar()}\r\n          </ul>\r\n        </div>\r\n      </div>\r\n    </nav>\r\n  );\r\n};\r\n\r\nexport default Navbar;\r\n","C:\\Users\\savan patel\\Desktop\\MyAcadamia\\MyAcademia\\frontend\\src\\Components\\Login.js",["112","113"],"import React, { useContext, useState } from \"react\";\r\nimport Axios from \"axios\";\r\nimport GoogleLogin from \"react-google-login\";\r\nimport { refreshTokenSetup } from \"../utils/refreshToken\";\r\nimport { AuthContext } from \"../Context/AuthContext\";\r\nimport AuthService from \"../Services/AuthService\";\r\nimport Message from \"./Message\";\r\nimport { Link } from \"react-router-dom\";\r\nimport style from \"../Styling/Registration-style.css\";\r\n\r\n//creating class and extending the component\r\nconst Login = (props) => {\r\n  const [user, setUser] = useState({ username: \"\", password: \"\" });\r\n  const [googleLogin, setGoogleLogin] = useState(false);\r\n  const [message, setMessage] = useState(null);\r\n  const authContext = useContext(AuthContext);\r\n\r\n  //making function getvalue to take value from input fields in the form\r\n  const onChange = (e) => {\r\n    e.preventDefault();\r\n    setUser({ ...user, [e.target.name]: e.target.value });\r\n  };\r\n\r\n  // creating login function and using axios to store the value in database\r\n  // Reference: https://www.youtube.com/watch?v=7_fo3nrqiY8&t=1332s\r\n  const onSubmit = (e) => {\r\n    e.preventDefault();\r\n    AuthService.login(user).then((data) => {\r\n      console.log(data);\r\n      const { isAuthenticated, user, message } = data;\r\n      if (isAuthenticated) {\r\n        authContext.setUser(user);\r\n        authContext.setGoogleLogin(false);\r\n        authContext.setIsAuthenticated(isAuthenticated);\r\n        props.history.push(\"/\");\r\n      } else setMessage(message);\r\n    });\r\n  };\r\n\r\n  const responseSuccessGoogle = async (res) => {\r\n    // res.preventDefault();\r\n    // console.log(res.profileObj);\r\n    try {\r\n      const GoogleUserObject = await res.profileObj;\r\n      console.log(GoogleUserObject);\r\n      if (GoogleUserObject) {\r\n        setUser({\r\n          ...user,\r\n          username: GoogleUserObject.givenName,\r\n          password: GoogleUserObject.googleId,\r\n        });\r\n        console.log(user);\r\n        if (user.username === \"\") {\r\n          setMessage({\r\n            msgBody: \"Please Try Your Google Login Again\",\r\n            msgError: true,\r\n          });\r\n        }\r\n      }\r\n      refreshTokenSetup(res);\r\n      Axios({\r\n        method: \"POST\",\r\n        data: {\r\n          ...user,\r\n          username: user.username,\r\n          password: user.password,\r\n        },\r\n        withCredentials: true,\r\n        url: \"http://localhost:4000/user/register\",\r\n      }).then((data) => {\r\n        const { message } = data.data;\r\n        console.log(message);\r\n        if (\r\n          message.msgBody === \"User Already Exists\" ||\r\n          message.msgError === true\r\n        ) {\r\n          setUser({\r\n            ...user,\r\n            username: user.username,\r\n            password: user.password,\r\n          });\r\n          console.log(user);\r\n          if (GoogleUserObject) {\r\n            if (user.username === \"\") {\r\n              setMessage({\r\n                message: {\r\n                  msgBody: \"Please Try Again\",\r\n                  msgError: true,\r\n                },\r\n              });\r\n            } else {\r\n              AuthService.login(user).then((data) => {\r\n                console.log(data);\r\n                const { isAuthenticated, user, message } = data;\r\n                if (isAuthenticated) {\r\n                  authContext.setUser(user);\r\n                  authContext.setGoogleLogin(true);\r\n                  authContext.setIsAuthenticated(isAuthenticated);\r\n                  console.log(\"Login Executed\");\r\n                  props.history.push(\"/\");\r\n                } else setMessage(message);\r\n              });\r\n            }\r\n          }\r\n        }\r\n      });\r\n    } catch (e) {\r\n      console.error(e);\r\n    }\r\n  };\r\n\r\n  const responseFailureGoogle = (res) => {};\r\n\r\n  // rendering the page with jsx elements\r\n  return (\r\n    <div className=\"login\">\r\n      <form onSubmit={onSubmit}>\r\n        <h1>login</h1>\r\n        <div className=\"mb-3\">\r\n          <label htmlFor=\"username\" className=\"sr-only\">\r\n            Username:{\" \"}\r\n          </label>\r\n          <input\r\n            placeholder=\"Enter Username\"\r\n            onChange={onChange}\r\n            name=\"username\"\r\n            type=\"text\"\r\n            className=\"form-control\"\r\n            required\r\n          />\r\n        </div>\r\n        <div className=\"mb-3\">\r\n          <label htmlFor=\"password\" className=\"sr-only\">\r\n            Password:{\" \"}\r\n          </label>\r\n          <input\r\n            placeholder=\"Enter Password\"\r\n            onChange={onChange}\r\n            type=\"password\"\r\n            name=\"password\"\r\n            className=\"form-control\"\r\n            required\r\n          />\r\n        </div>\r\n        <div className=\"mb-3\">\r\n          <button className=\"btn btn-lg btn-primary btn-block\">Submit</button>\r\n        </div>\r\n        <div className=\"mb-3 col-12\">\r\n          <GoogleLogin\r\n            clientId=\"255153393550-c00iv7khe28pcrheeitfh6p20h6ie83o.apps.googleusercontent.com\"\r\n            buttonText=\"Login with Google\"\r\n            onSuccess={responseSuccessGoogle}\r\n            onFailure={responseFailureGoogle}\r\n            cookiePolicy={\"single_host_origin\"}\r\n            isSignedIn={true}\r\n          />\r\n        </div>\r\n        <div className=\"mb-3 col-12\">\r\n          <Link to=\"/register\">\r\n            <button className=\"btn btn-lg btn-primary\" href=\"/register\">\r\n              Create Account\r\n            </button>\r\n          </Link>\r\n        </div>\r\n      </form>\r\n      {message ? <Message message={message} /> : null}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Login;\r\n","C:\\Users\\savan patel\\Desktop\\MyAcadamia\\MyAcademia\\frontend\\src\\Components\\WorkForm.js",[],"C:\\Users\\savan patel\\Desktop\\MyAcadamia\\MyAcademia\\frontend\\src\\Components\\EducationForm.js",["114"],"import React, { useContext, useEffect, useRef, useState } from \"react\";\r\nimport Axios from \"axios\";\r\nimport { Redirect } from \"react-router-dom\";\r\nimport Message from \"./Message\";\r\nimport { AuthContext } from \"../Context/AuthContext\";\r\nimport style from '../Styling/profilePage.css';\r\n\r\nconst EducationForm = (props) => {\r\n  const { isAuthenticated, user } = useContext(AuthContext);\r\n\r\n  const [education, setEducation] = useState({\r\n    collegeName: \"\",\r\n    collegeLocation: \"\",\r\n    courseName: \"\",\r\n    graduationDate: \"\",\r\n    currentCollege: false,\r\n    username: \"\",\r\n  });\r\n  const [message, setMessage] = useState(null);\r\n  let timerID = useRef(null);\r\n\r\n  useEffect(() => {\r\n    return () => {\r\n      clearTimeout(timerID);\r\n    };\r\n  }, []);\r\n\r\n  //making function onChange to take value from input fields in the form\r\n  const onChange = (e) => {\r\n    e.preventDefault();\r\n    setEducation({ ...education, [e.target.name]: e.target.value });\r\n  };\r\n\r\n  const resetForm = () => {\r\n    setEducation({\r\n      collegeName: \"\",\r\n      collegeLocation: \"\",\r\n      courseName: \"\",\r\n      graduationDate: \"\",\r\n      currentCollege: false,\r\n      username: \"\",\r\n    });\r\n  };\r\n\r\n  const onSubmit = (e) => {\r\n    e.preventDefault();\r\n    Axios({\r\n      method: \"POST\",\r\n      data: {\r\n        collegeName: education.collegeName,\r\n        collegeLocation: education.collegeLocation,\r\n        courseName: education.courseName,\r\n        graduationDate: education.graduationDate,\r\n        currentCollege: education.currentCollege,\r\n        username: user.username,\r\n      },\r\n      withCredentials: true,\r\n      url: \"http://localhost:4000/neweducation\",\r\n    }).then((data) => {\r\n      console.log(data);\r\n      const { message } = data.data;\r\n      setMessage(message);\r\n      resetForm();\r\n      console.log(message);\r\n      if (!message.msgError) {\r\n        timerID = setTimeout(() => {\r\n          props.history.push(\"/profile\");\r\n        }, 2000);\r\n      }\r\n    });\r\n  };\r\n\r\n  return (\r\n    <div className=\"education\">\r\n      {!isAuthenticated ? <Redirect to=\"/login\" /> : null}\r\n      <form onSubmit={onSubmit}>\r\n        <h1>Add Your Education Details</h1>\r\n        <div className=\"mb-3\">\r\n          <label htmlFor=\"collegeName\" className=\"form-label\">\r\n            College Name:{\" \"}\r\n          </label>\r\n          <input\r\n            placeholder=\"Enter College or University Name\"\r\n            onChange={onChange}\r\n            name=\"collegeName\"\r\n            type=\"text\"\r\n            className=\"form-control\"\r\n            required\r\n          />\r\n        </div>\r\n        <div className=\"mb-3\">\r\n          <label htmlFor=\"collegeLocation\" className=\"form-label\">\r\n            Location of College or University:{\" \"}\r\n          </label>\r\n          <input\r\n            placeholder=\"Enter Location of College or University\"\r\n            onChange={onChange}\r\n            name=\"collegeLocation\"\r\n            type=\"text\"\r\n            className=\"form-control\"\r\n            required\r\n          />\r\n        </div>\r\n        <label htmlFor=\"username\" className=\"form-label form-control\">\r\n          Username: {user.username}\r\n        </label>\r\n        <div className=\"mb-3\">\r\n          <label htmlFor=\"courseName\" className=\"form-label\">\r\n            Name of your course:{\" \"}\r\n          </label>\r\n          <input\r\n            placeholder=\"Enter Course Name\"\r\n            onChange={onChange}\r\n            name=\"courseName\"\r\n            type=\"text\"\r\n            className=\"form-control\"\r\n            required\r\n          />\r\n        </div>\r\n        <div className=\"mb-3\">\r\n          <label htmlFor=\"graduationDate\" className=\"form-label\">\r\n            Enter Date of Graduation:{\" \"}\r\n          </label>\r\n          <input\r\n            placeholder=\"Enter Graduation Date\"\r\n            onChange={onChange}\r\n            name=\"graduationDate\"\r\n            type=\"date\"\r\n            className=\"form-control\"\r\n          />\r\n        </div>\r\n        <div className=\"mb-3\">\r\n          <label htmlFor=\"currentCollege\" className=\"form-label\">\r\n            Is this your Current College:{\" \"}\r\n          </label>\r\n          <div className=\"form-check\">\r\n            <input\r\n              className=\"form-check-input\"\r\n              type=\"radio\"\r\n              name=\"currentCollege\"\r\n              id=\"Yes\"\r\n              value=\"true\"\r\n              onChange={onChange}\r\n            />\r\n            <label className=\"form-check-label\" htmlFor=\"Yes\">\r\n              Yes\r\n            </label>\r\n          </div>\r\n          <div className=\"form-check\">\r\n            <input\r\n              className=\"form-check-input\"\r\n              type=\"radio\"\r\n              name=\"currentCollege\"\r\n              id=\"No\"\r\n              value=\"false\"\r\n              onChange={onChange}\r\n              checked\r\n            />\r\n            <label className=\"form-check-label\" htmlFor=\"No\">\r\n              No\r\n            </label>\r\n          </div>\r\n        </div>\r\n        <button className=\"btn btn-lg btn-primary btn-block\">Submit</button>\r\n      </form>\r\n      {message ? <Message message={message} /> : null}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default EducationForm;\r\n","C:\\Users\\savan patel\\Desktop\\MyAcadamia\\MyAcademia\\frontend\\src\\Components\\Home.js",["115","116","117","118","119","120","121"],"import React, { useContext, useEffect, useState } from \"react\";\r\nimport Axios from \"axios\";\r\nimport { Redirect } from \"react-router-dom\";\r\nimport { AuthContext } from \"../Context/AuthContext\";\r\n\r\nconst Home = (props) => {\r\n  const { isAuthenticated, user, googleLogin, myprofileId } = useContext(\r\n    AuthContext\r\n  );\r\n  const authContext = useContext(AuthContext);\r\n  const [i, SetI] = useState(false);\r\n  const [profile, setProfile] = useState({\r\n    id: \"\",\r\n    photoUrl: \"\",\r\n    firstName: \"\",\r\n    lastName: \"\",\r\n    username: \"\",\r\n    email: \"\",\r\n    collegeName: \"\",\r\n    location: \"\",\r\n    IQ: 0,\r\n    about: \"\",\r\n    isFaculty: false,\r\n    friends: [],\r\n  });\r\n\r\n  useEffect(() => {\r\n    const username = user.username;\r\n    Axios({\r\n      method: \"GET\",\r\n      params: {\r\n        username: username,\r\n      },\r\n      url: \"http://localhost:4000/profile\",\r\n    }).then((data) => {\r\n      console.log(data);\r\n      if (data.data === null) {\r\n        console.log(\"No Profile data found\");\r\n      } else {\r\n        setProfile({\r\n          ...profile,\r\n          id: data.data._id,\r\n          photoUrl: data.data.photoUrl,\r\n          firstName: data.data.firstName,\r\n          lastName: data.data.lastName,\r\n          username: data.data.username,\r\n          email: data.data.email,\r\n          collegeName: data.data.collegeName,\r\n          location: data.data.location,\r\n          IQ: data.data.IQ,\r\n          about: data.data.about,\r\n          isFaculty: data.data.isFaculty,\r\n        });\r\n      }\r\n    });\r\n  }, []);\r\n\r\n  const getMyProfile = () => {\r\n    if (i === false) {\r\n      authContext.setMyProfileId(profile.id);\r\n      console.log(myprofileId);\r\n      console.log(\"Profile ID\");\r\n      // console.log(myprofileId);\r\n      SetI(true);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      {!isAuthenticated ? <Redirect to=\"/login\" /> : null}\r\n      <h1>Welcome Back</h1>\r\n      <h2>{!user.username ? null : user.username}</h2>\r\n      {/* <h2>{!profile.id ? null : profile.id}</h2> */}\r\n      {/* {profile} */}\r\n      {/* <h2>{!myprofileId ? null : myprofileId}</h2> */}\r\n      {!profile.id ? null : getMyProfile()}\r\n      {/* {getMyProfile()} */}\r\n      <h2>{myprofileId}</h2>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Home;\r\n","C:\\Users\\savan patel\\Desktop\\MyAcadamia\\MyAcademia\\frontend\\src\\Components\\Notification.js",["122"],"import React, { useState, useContext, useEffect } from \"react\";\r\nimport Axios from \"axios\";\r\nimport { Link, Redirect } from \"react-router-dom\";\r\nimport { AuthContext } from \"../Context/AuthContext\";\r\nimport NotificationPopUp from \"./NotificationPopUp\";\r\n\r\nconst Notification = (props) => {\r\n  const { isAuthenticated, user, googleLogin } = useContext(AuthContext);\r\n  const [notifications, setNotifications] = useState([]);\r\n  const [dateNow] = useState(new Date());\r\n  var [ISOstring] = useState(\"\");\r\n  const [profile, setProfile] = useState({\r\n    id: \"\",\r\n    photoUrl: \"\",\r\n    firstName: \"\",\r\n    lastName: \"\",\r\n    username: \"\",\r\n    email: \"\",\r\n    collegeName: \"\",\r\n    location: \"\",\r\n    IQ: 0,\r\n    about: \"\",\r\n    isFaculty: false,\r\n    friends: [],\r\n    notifications: [Object],\r\n  });\r\n  const [profileNotification, setProfileNotification] = useState([]);\r\n  const [Notification, setNotification] = useState({\r\n    notification: \"\",\r\n    username: \"\",\r\n    link: \"\",\r\n    created_date: \"\",\r\n  });\r\n  const [showNotification, setShowNotification] = useState(true);\r\n  const [i, setI] = useState(0);\r\n  const [notificationPopUp, setNotificationPopUp] = useState({\r\n    title: \"\",\r\n    message: \"\",\r\n    type: \"\",\r\n  });\r\n\r\n  useEffect(() => {\r\n    const username = user.username;\r\n    Axios({\r\n      method: \"GET\",\r\n      params: {\r\n        username: username,\r\n      },\r\n      url: \"http://localhost:4000/profile\",\r\n    }).then((data) => {\r\n      console.log(data);\r\n      if (data.data === null) {\r\n        console.log(\"No Profile data found\");\r\n      } else {\r\n        console.log(data.data);\r\n        setProfile({\r\n          ...profile,\r\n          id: data.data._id,\r\n          photoUrl: data.data.photoUrl,\r\n          firstName: data.data.firstName,\r\n          lastName: data.data.lastName,\r\n          username: data.data.username,\r\n          email: data.data.email,\r\n          collegeName: data.data.collegeName,\r\n          location: data.data.location,\r\n          IQ: data.data.IQ,\r\n          about: data.data.about,\r\n          isFaculty: data.data.isFaculty,\r\n          friends: data.data.friends,\r\n        });\r\n      }\r\n    });\r\n    Axios({\r\n      method: \"GET\",\r\n      params: {\r\n        username: user.username,\r\n      },\r\n      url: \"http://localhost:4000/getnotificationsprofile\",\r\n    }).then((data) => {\r\n      console.log(data.data);\r\n      setProfileNotification(data.data);\r\n    });\r\n    console.log(profile.notifications[1]);\r\n    ISOstring = dateNow.toISOString().slice(0, 10);\r\n    console.log(ISOstring);\r\n  }, []);\r\n\r\n  const CheckFriendsNotifications = () => {\r\n    if (i === 0) {\r\n      Axios({\r\n        method: \"GET\",\r\n        params: {\r\n          username: profile.friends,\r\n        },\r\n        url: \"http://localhost:4000/getnotifications\",\r\n      }).then((data) => {\r\n        console.log(data);\r\n        if (data.data === null) {\r\n          console.log(\"No Notifications Found\");\r\n        } else {\r\n          // const item = [data.data];\r\n          setNotifications(data.data);\r\n          // console.log(notifications[0]);\r\n        }\r\n      });\r\n      setI(1);\r\n    }\r\n  };\r\n\r\n  const reloadPage = () => {\r\n    window.location.reload(false);\r\n  };\r\n\r\n  // const deleteNotification = (e) => {\r\n  //   const url = \"http://localhost:4000/deletenotification/\";\r\n  //   const notificationId = e.target.value;\r\n  //   const dynamicUrl = url + notificationId;\r\n  //   e.preventDefault();\r\n  //   Axios({\r\n  //     method: \"delete\",\r\n  //     url: dynamicUrl,\r\n  //   }).then((data) => {\r\n  //     console.log(data);\r\n  //     reloadPage();\r\n  //   });\r\n  // };\r\n\r\n  const deleteProfileNotification = (e) => {\r\n    const url = \"http://localhost:4000/removenotification/\";\r\n    const profileID = profile.id;\r\n    const notificationId = e.target.value;\r\n    const dynamicUrl = url + profileID;\r\n    console.log(notificationId);\r\n    e.preventDefault();\r\n    Axios({\r\n      method: \"PUT\",\r\n      params: {\r\n        NotificationId: notificationId,\r\n      },\r\n      url: dynamicUrl,\r\n    }).then((data) => {\r\n      console.log(data.data.notifications);\r\n      reloadPage();\r\n    });\r\n  };\r\n\r\n  const deleteAllProfileNotification = (e) => {\r\n    const url = \"http://localhost:4000/removeallnotifications/\";\r\n    const profileID = profile.id;\r\n    const notificationId = e.target.value;\r\n    const dynamicUrl = url + profileID;\r\n    console.log(notificationId);\r\n    e.preventDefault();\r\n    Axios({\r\n      method: \"PUT\",\r\n      url: dynamicUrl,\r\n    }).then((data) => {\r\n      console.log(data.data);\r\n      reloadPage();\r\n    });\r\n  };\r\n\r\n  // const GetDateTime = (e) => {\r\n  //   var DateTimeNow = new Date();\r\n  //   const ISOstring = DateTimeNow.toISOString();\r\n  //   const DNow = ISOstring.slice(0, 10);\r\n  //   console.log(\"DNow: \" + DNow);\r\n  //   // console.log(ISOstring);\r\n  //   // var notiDateTime = null;\r\n  //   if (notifications.length === 0) {\r\n  //     console.log(\"Notification Array length: \" + notifications.length);\r\n  //   } else {\r\n  //     for (let i = 0; i < notifications.length; i++) {\r\n  //       console.log(i);\r\n  //       var notiDateTime = notifications[i].created_date.slice(0, 10);\r\n  //       console.log(notifications.length);\r\n  //       console.log(\"notiDateTime: \" + notiDateTime);\r\n  //       if (DNow === notiDateTime) {\r\n  //         console.log(\"Today\");\r\n  //         return (\r\n  //           <div>\r\n  //             <h5>Today</h5>\r\n  //           </div>\r\n  //         );\r\n  //       } else {\r\n  //         return (\r\n  //           <div>\r\n  //             <h5>{notiDateTime}</h5>\r\n  //           </div>\r\n  //         );\r\n  //       }\r\n  //     }\r\n  //   }\r\n  // };\r\n\r\n  const readByUser = (notification) => {\r\n    const notificationID = notification._id;\r\n    console.log(notification);\r\n    if (notification.readByUser === false) {\r\n      Axios({\r\n        method: \"put\",\r\n        params: {\r\n          NotificationId: notificationID,\r\n          readByUser: true,\r\n        },\r\n        url: `http://localhost:4000/editnotification/${profile.id}`,\r\n      }).then((data) => {\r\n        console.log(data.data);\r\n        props.history.push(`${notification.link.slice(21)}`);\r\n      });\r\n    } else {\r\n      props.history.push(`${notification.link.slice(21)}`);\r\n      console.log(\"readbyuser not working properly\");\r\n    }\r\n  };\r\n\r\n  const handleHideNotification = () => {\r\n    setShowNotification(false);\r\n  };\r\n\r\n  const handleShowNotification = () => {\r\n    setShowNotification(true);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      {!isAuthenticated ? <Redirect to=\"/login\" /> : null}\r\n      <h1>Welcome to Notification Page</h1>\r\n      <h2>{!user.username ? null : user.username}</h2>\r\n      {notificationPopUp.message !== \"\" ? (\r\n        <NotificationPopUp notificationPopUp={notificationPopUp} />\r\n      ) : null}\r\n      <h4>Personal Notifications</h4>\r\n      {profileNotification.length === 0 ? (\r\n        <h3>You have no personal notifications</h3>\r\n      ) : (\r\n        <div>\r\n          <button\r\n            className=\"btn btn-danger\"\r\n            onClick={deleteAllProfileNotification}\r\n          >\r\n            Delete All Personal Notification\r\n          </button>\r\n          {profileNotification\r\n            .sort(\r\n              (a, b) =>\r\n                b.notiCreationDate.slice(8, 10) -\r\n                a.notiCreationDate.slice(8, 10)\r\n            )\r\n            .map((notification) => (\r\n              <div>\r\n                {notification === null ? null : (\r\n                  <div>\r\n                    {notification.readByUser ? (\r\n                      <div\r\n                        key={notification._id}\r\n                        onClick={() => readByUser(notification)}\r\n                        className=\"card border-dark bg-light mb-3\"\r\n                      >\r\n                        <h4>{notification.notification}</h4>\r\n                        <h4>{notification.notiCreationDate.slice(0, 10)}</h4>\r\n                        <button\r\n                          className=\"btn btn-danger\"\r\n                          onClick={deleteProfileNotification}\r\n                          value={notification._id}\r\n                        >\r\n                          X\r\n                        </button>\r\n                      </div>\r\n                    ) : (\r\n                      <div\r\n                        key={notification._id}\r\n                        className=\"card border-dark text-white bg-info mb-3\"\r\n                      >\r\n                        <h4 onClick={() => readByUser(notification)}>\r\n                          {notification.notification}\r\n                        </h4>\r\n                        <h4>{notification.notiCreationDate.slice(0, 10)}</h4>\r\n                        <button\r\n                          className=\"btn btn-danger\"\r\n                          onClick={deleteProfileNotification}\r\n                          value={notification._id}\r\n                        >\r\n                          X\r\n                        </button>\r\n                      </div>\r\n                    )}\r\n                  </div>\r\n                )}\r\n              </div>\r\n            ))}\r\n        </div>\r\n      )}\r\n      {profile.friends.length === 0 ? null : CheckFriendsNotifications()}\r\n      <h4>Common Notifications</h4>\r\n      <div>\r\n        {showNotification ? (\r\n          <div>\r\n            {notifications.length === 0 ? (\r\n              <h4>You don't have any common notifications</h4>\r\n            ) : (\r\n              <div>\r\n                <button\r\n                  className=\"btn btn-primary\"\r\n                  onClick={handleHideNotification}\r\n                >\r\n                  Hide Notifications\r\n                </button>\r\n                {notifications\r\n                  .sort(\r\n                    (a, b) =>\r\n                      b.created_date.slice(8, 10) - a.created_date.slice(8, 10)\r\n                  )\r\n                  .map((notification) => (\r\n                    <div\r\n                      key={notification._id}\r\n                      className=\"card border-dark bg-light mb-3\"\r\n                    >\r\n                      <Link to={notification.link.slice(21)}>\r\n                        <h4>{notification.notification}</h4>\r\n                      </Link>\r\n                      <h4>{notification.username}</h4>\r\n                      {notification.created_date.slice(0, 10) !== ISOstring ? (\r\n                        <div>\r\n                          <h5>{notification.created_date.slice(0, 10)}</h5>\r\n                        </div>\r\n                      ) : (\r\n                        <div>\r\n                          <h5>Today</h5>\r\n                        </div>\r\n                      )}\r\n                    </div>\r\n                  ))}\r\n              </div>\r\n            )}\r\n          </div>\r\n        ) : (\r\n          <div>\r\n            <h4>\r\n              Your Notifications are hidden click here to see your notifications\r\n            </h4>\r\n            <button\r\n              className=\"btn btn-primary\"\r\n              onClick={handleShowNotification}\r\n            >\r\n              Show All Notifications\r\n            </button>\r\n          </div>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Notification;\r\n","C:\\Users\\savan patel\\Desktop\\MyAcadamia\\MyAcademia\\frontend\\src\\Components\\Search.js",["123","124","125","126","127","128","129","130","131","132","133"],"import React, { useContext, useState } from \"react\";\r\nimport Axios from \"axios\";\r\nimport { Link, Redirect } from \"react-router-dom\";\r\nimport { AuthContext } from \"../Context/AuthContext\";\r\nimport Message from \"./Message\";\r\nimport Profile from \"./Profile\";\r\nimport defaultProfilePhoto from \"../Images/default_profile_picture.png\";\r\n\r\nconst Search = (props) => {\r\n  const { isAuthenticated, user, googleLogin } = useContext(AuthContext);\r\n  const [Query, setQuery] = useState(null);\r\n  const [location, setLocation] = useState(false);\r\n  const [firstName, setFirstName] = useState(false);\r\n  const [loading, setLoading] = useState(false);\r\n  const [profiles, setProfiles] = useState([]);\r\n  const [profile, setProfile] = useState({\r\n    id: \"\",\r\n    photoUrl: \"\",\r\n    firstName: \"\",\r\n    lastName: \"\",\r\n    username: \"\",\r\n    email: \"\",\r\n    collegeName: \"\",\r\n    location: \"\",\r\n    IQ: 0,\r\n    about: \"\",\r\n    isFaculty: false,\r\n  });\r\n\r\n  const onChange = (e) => {\r\n    e.preventDefault();\r\n    setQuery(e.target.value);\r\n  };\r\n\r\n  const locationSelected = (e) => {\r\n    e.preventDefault();\r\n    setLocation(true);\r\n    setFirstName(false);\r\n    console.log(\"Location Selected\");\r\n  };\r\n\r\n  const firstNameSelected = (e) => {\r\n    e.preventDefault();\r\n    setFirstName(true);\r\n    setLocation(false);\r\n    console.log(\"First Name Selected\");\r\n  };\r\n\r\n  const getAllProfile = () => {\r\n    Axios({\r\n      method: \"GET\",\r\n      url: \"http://localhost:4000/search/all\",\r\n    }).then((data) => {\r\n      if (data.data === null) {\r\n        console.log(\"No data found\");\r\n      } else {\r\n        const item = [data.data];\r\n        setProfiles(item[0]);\r\n        console.log(profiles[0]);\r\n      }\r\n    });\r\n  };\r\n\r\n  const goToProfile = (e) => {\r\n    console.log(\"goto profile clicked\");\r\n    const profileId = e.target.value;\r\n    console.log(profileId);\r\n    const url = \"http://localhost:3000/profile/\";\r\n    const dynamicUrl = url + profileId;\r\n    console.log(dynamicUrl);\r\n    const gotourl = dynamicUrl.slice(21);\r\n    props.history.push(gotourl);\r\n  };\r\n\r\n  const getProfile = (e) => {\r\n    e.preventDefault();\r\n    const query = Query;\r\n    const url = \"http://localhost:4000/search/profile\";\r\n    const dynamicUrl = url;\r\n    console.log();\r\n    Axios({\r\n      method: \"GET\",\r\n      params: {\r\n        username: query,\r\n      },\r\n      url: dynamicUrl,\r\n    }).then((data) => {\r\n      console.log(data);\r\n      if (data.data === null) {\r\n        console.log(\"No data found\");\r\n      } else {\r\n        const item = data.data;\r\n        setProfile(item[0]);\r\n        console.log(item[0]);\r\n      }\r\n    });\r\n  };\r\n\r\n  const searchQuery = (e) => {\r\n    if (location === true) {\r\n      e.preventDefault();\r\n      const query = Query;\r\n      console.log(query);\r\n      const url = \"http://localhost:4000/search/location\";\r\n      const dynamicUrl = url;\r\n      console.log();\r\n      Axios({\r\n        method: \"GET\",\r\n        params: {\r\n          location: e.target.value,\r\n        },\r\n        url: dynamicUrl,\r\n      }).then((data) => {\r\n        console.log(data);\r\n        if (data.data === null) {\r\n          console.log(\"No data found\");\r\n        } else {\r\n          const item = [data.data];\r\n          setProfiles(item[0]);\r\n          console.log(profiles);\r\n        }\r\n      });\r\n    } else {\r\n      e.preventDefault();\r\n      const query = Query;\r\n      console.log(query);\r\n      const url = \"http://localhost:4000/search/firstName\";\r\n      const dynamicUrl = url;\r\n      console.log();\r\n      Axios({\r\n        method: \"GET\",\r\n        params: {\r\n          firstName: e.target.value,\r\n        },\r\n        url: dynamicUrl,\r\n      }).then((data) => {\r\n        console.log(data);\r\n        if (data.data === null) {\r\n          console.log(\"No data found\");\r\n        } else {\r\n          const item = [data.data];\r\n          setProfiles(item[0]);\r\n          console.log(profiles);\r\n        }\r\n      });\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      {!isAuthenticated ? <Redirect to=\"/login\" /> : null}\r\n      <div>\r\n        <h1>Search for anything</h1>\r\n      </div>\r\n      <div>\r\n        <form className=\"d-flex\" onSubmit={searchQuery}>\r\n          <input\r\n            className=\"form-control me-2\"\r\n            type=\"search\"\r\n            placeholder=\"Search\"\r\n            aria-label=\"Search\"\r\n            onChange={searchQuery}\r\n          />\r\n          <button className=\"btn btn-outline-success\" type=\"submit\">\r\n            Search\r\n          </button>\r\n        </form>\r\n      </div>\r\n      <div>\r\n        {!location ? (\r\n          <div>\r\n            <div className=\"form-check\">\r\n              <input\r\n                className=\"form-check-input\"\r\n                type=\"radio\"\r\n                name=\"flexRadioDefault\"\r\n                id=\"flexRadioDefault1\"\r\n                onSelect={locationSelected}\r\n                onChange={locationSelected}\r\n              />\r\n              <label className=\"form-check-label\" for=\"flexRadioDefault1\">\r\n                Location\r\n              </label>\r\n            </div>\r\n            <div className=\"form-check\">\r\n              <input\r\n                className=\"form-check-input\"\r\n                type=\"radio\"\r\n                name=\"flexRadioDefault\"\r\n                id=\"flexRadioDefault2\"\r\n                onSelect={firstNameSelected}\r\n                onChange={firstNameSelected}\r\n                checked\r\n              />\r\n              <label className=\"form-check-label\" for=\"flexRadioDefault2\">\r\n                First Name\r\n              </label>\r\n            </div>\r\n          </div>\r\n        ) : (\r\n          <div>\r\n            <div className=\"form-check\">\r\n              <input\r\n                className=\"form-check-input\"\r\n                type=\"radio\"\r\n                name=\"flexRadioDefault\"\r\n                id=\"flexRadioDefault1\"\r\n                onSelect={locationSelected}\r\n                onChange={locationSelected}\r\n                checked\r\n              />\r\n              <label className=\"form-check-label\" for=\"flexRadioDefault1\">\r\n                Location\r\n              </label>\r\n            </div>\r\n            <div className=\"form-check\">\r\n              <input\r\n                className=\"form-check-input\"\r\n                type=\"radio\"\r\n                name=\"flexRadioDefault\"\r\n                id=\"flexRadioDefault2\"\r\n                onSelect={firstNameSelected}\r\n                onChange={firstNameSelected}\r\n              />\r\n              <label className=\"form-check-label\" for=\"flexRadioDefault2\">\r\n                First Name\r\n              </label>\r\n            </div>\r\n          </div>\r\n        )}\r\n      </div>\r\n      <div>\r\n        <button className=\"btn btn-primary\" onClick={getAllProfile}>\r\n          See All Profiles\r\n        </button>\r\n      </div>\r\n      <div>\r\n        {profiles.map((item) => (\r\n          <div className=\"card border-dark bg-light mb-3 media\" key={item._id}>\r\n            {!item.photoUrl ? (\r\n              <img\r\n                src={defaultProfilePhoto}\r\n                alt=\"defaultProfilePhoto\"\r\n                className=\"align-self-start mr-3\"\r\n                style={{ width: \"100px\", height: \"100px\" }}\r\n              ></img>\r\n            ) : (\r\n              <img\r\n                src={item.photoUrl}\r\n                style={{ width: \"100px\", height: \"100px\" }}\r\n                alt=\"profilePhoto\"\r\n                className=\"align-self-start mr-3\"\r\n              ></img>\r\n            )}\r\n            <div className=\"media-body\">\r\n              <h4 className=\"mt-0\" onClick={goToProfile} value={item._id}>\r\n                Name: {item.firstName} {item.lastName}\r\n              </h4>\r\n              <h5 className=\"item\">College Name: {item.collegeName}</h5>\r\n              <h5 className=\"item\">Location: {item.location}</h5>\r\n              <button\r\n                className=\"btn btn-primary\"\r\n                onClick={goToProfile}\r\n                value={item._id}\r\n              >\r\n                Go to Profile\r\n              </button>\r\n            </div>\r\n          </div>\r\n        ))}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Search;\r\n","C:\\Users\\savan patel\\Desktop\\MyAcadamia\\MyAcademia\\frontend\\src\\Components\\Profile.js",["134","135","136","137","138","139","140","141","142","143","144","145"],"import React, { useContext, useEffect, useRef, useState } from \"react\";\r\nimport Axios from \"axios\";\r\nimport { Link, Redirect } from \"react-router-dom\";\r\nimport { store } from \"react-notifications-component\";\r\nimport { AuthContext } from \"../Context/AuthContext\";\r\nimport Message from \"./Message\";\r\nimport Search from \"./Search\";\r\nimport defaultProfilePhoto from \"../Images/default_profile_picture.png\";\r\nimport MyProfile from \"./MyProfile\";\r\nimport NotificationPopUp from \"./NotificationPopUp\";\r\n\r\nconst Profile = (props) => {\r\n  const { isAuthenticated, user, googleLogin, myprofileId } = useContext(\r\n    AuthContext\r\n  );\r\n  // const {profile} = useContext(ProfileContext)\r\n  const [haveProfile, setHaveProfile] = useState(false);\r\n  const [message, setMessage] = useState(null);\r\n  const [myProfileID, setMyProfileId] = useState({\r\n    mypid: \"\",\r\n    firstName: \"\",\r\n    lastName: \"\",\r\n  });\r\n  const [profile, setProfile] = useState({\r\n    id: \"\",\r\n    photoUrl: \"\",\r\n    firstName: \"\",\r\n    lastName: \"\",\r\n    username: \"\",\r\n    email: \"\",\r\n    collegeName: \"\",\r\n    location: \"\",\r\n    IQ: 0,\r\n    about: \"\",\r\n    isFaculty: false,\r\n    friends: [],\r\n  });\r\n  const [educations, setEducation] = useState([]);\r\n  const [works, setWork] = useState([]);\r\n  const [friends, setFriends] = useState([]);\r\n  const [isFriends, setIsFriends] = useState(false);\r\n  const [requestSent, setRequestSent] = useState(false);\r\n  const [friendship, setFriendship] = useState({\r\n    requester: \"\",\r\n    recipient: \"\",\r\n    status: 0,\r\n  });\r\n  const [i, setI] = useState(0);\r\n  let timerID = useRef(null);\r\n  const [notificationPopUp, setNotificationPopUp] = useState({\r\n    title: \"\",\r\n    message: \"\",\r\n    type: \"\",\r\n  });\r\n  useEffect(() => {\r\n    const urlNow = window.location.href;\r\n    const profileId = urlNow.slice(30);\r\n    const url = \"http://localhost:4000/profile/\";\r\n    const dynamicUrl = url + profileId;\r\n    Axios({\r\n      method: \"GET\",\r\n      url: dynamicUrl,\r\n    }).then((data) => {\r\n      if (data.data === null) {\r\n        console.log(\"No Profile data found\");\r\n      } else {\r\n        setProfile({\r\n          ...profile,\r\n          id: data.data._id,\r\n          photoUrl: data.data.photoUrl,\r\n          firstName: data.data.firstName,\r\n          lastName: data.data.lastName,\r\n          username: data.data.username,\r\n          email: data.data.email,\r\n          collegeName: data.data.collegeName,\r\n          location: data.data.location,\r\n          IQ: data.data.IQ,\r\n          about: data.data.about,\r\n          isFaculty: data.data.isFaculty,\r\n          friends: data.data.friends,\r\n        });\r\n      }\r\n    });\r\n    Axios({\r\n      method: \"GET\",\r\n      url: url,\r\n      params: {\r\n        username: user.username,\r\n      },\r\n    }).then((data) => {\r\n      if (data.data === null) {\r\n        console.log(\"No Profile data found\");\r\n      } else {\r\n        setMyProfileId({\r\n          ...myProfileID,\r\n          mypid: data.data._id,\r\n          firstName: data.data.firstName,\r\n          lastName: data.data.lastName,\r\n        });\r\n      }\r\n    });\r\n  }, []);\r\n\r\n  const getFriendshipStatus = (e) => {\r\n    if (i === 0) {\r\n      Axios({\r\n        method: \"GET\",\r\n        url: \"http://localhost:4000/getfriends/status\",\r\n        params: {\r\n          requester: user.username,\r\n          recipient: profile.username,\r\n        },\r\n      }).then((data) => {\r\n        if (data.data.length === 0) {\r\n          console.log(\"No Friendship Found\");\r\n        } else {\r\n          const item = data.data[0];\r\n          console.log(item);\r\n          if (item.status === 2) {\r\n            setIsFriends(true);\r\n          }\r\n          setFriends(item);\r\n        }\r\n      });\r\n      if (friends.requester !== user.username) {\r\n        Axios({\r\n          method: \"GET\",\r\n          url: \"http://localhost:4000/getfriends/status\",\r\n          params: {\r\n            requester: profile.username,\r\n            recipient: user.username,\r\n          },\r\n        }).then((data) => {\r\n          if (data.data.length === 0) {\r\n            console.log(\"No Friendship Found\");\r\n          } else {\r\n            const item = data.data[0];\r\n            console.log(item);\r\n            if (item.status === 2) {\r\n              setIsFriends(true);\r\n            }\r\n            setFriends(item);\r\n          }\r\n        });\r\n        console.log(\"My Profile Id: \" + myprofileId);\r\n      }\r\n      Axios({\r\n        method: \"GET\",\r\n        params: {\r\n          username: profile.username,\r\n        },\r\n        url: \"http://localhost:4000/education\",\r\n      }).then((data) => {\r\n        console.log(data);\r\n        if (data.data === null) {\r\n          console.log(\"No Education data found\");\r\n        } else {\r\n          const item = [data.data];\r\n          setEducation(item[0]);\r\n          console.log(item[0]);\r\n        }\r\n      });\r\n      Axios({\r\n        method: \"GET\",\r\n        params: {\r\n          username: profile.username,\r\n        },\r\n        url: \"http://localhost:4000/work\",\r\n      }).then((data) => {\r\n        console.log(data);\r\n        if (data.data === null) {\r\n          console.log(\"No Work data found\");\r\n        } else {\r\n          const item = [data.data];\r\n          setWork(item[0]);\r\n          console.log(item[0]);\r\n        }\r\n      });\r\n      setI(1);\r\n    }\r\n  };\r\n\r\n  const sendRequest = () => {\r\n    Axios({\r\n      method: \"post\",\r\n      data: {\r\n        requester: user.username,\r\n        recipient: profile.username,\r\n        status: 1,\r\n      },\r\n      url: \"http://localhost:4000/sendfriendrequest\",\r\n    }).then((data) => {\r\n      const { message } = data.data;\r\n      setMessage(message);\r\n      console.log(message);\r\n      setRequestSent(true);\r\n    });\r\n    Axios({\r\n      method: \"put\",\r\n      data: {\r\n        notification: `${myProfileID.firstName} ${myProfileID.lastName} has sent you friend request`,\r\n        link: `http://localhost:3000/profile/${myProfileID.mypid}`,\r\n      },\r\n      url: `http://localhost:4000/addnotification/${profile.id}`,\r\n    }).then((data) => {\r\n      console.log(data.data);\r\n      setNotificationPopUp({\r\n        ...notificationPopUp,\r\n        title: \"Friend Request Sent\",\r\n        message: `You have sent a friend request to ${profile.firstName} ${profile.lastName}`,\r\n        type: \"info\",\r\n      });\r\n      setTimeout(() => {\r\n        reloadPage();\r\n      }, 2000);\r\n    });\r\n  };\r\n\r\n  const acceptRequest = () => {\r\n    const friendshipId = friends._id;\r\n    const url = \"http://localhost:4000/updaterequest/\";\r\n    const dynamicUrl = url + friendshipId;\r\n    Axios({\r\n      method: \"put\",\r\n      data: {\r\n        status: 2,\r\n      },\r\n      url: dynamicUrl,\r\n    }).then((data) => {\r\n      const { message } = data.data;\r\n      setMessage(message);\r\n      console.log(message);\r\n      setIsFriends(true);\r\n      // setTimeout(() => {\r\n      //   reloadPage();\r\n      // }, 2000);\r\n    });\r\n    // if(friends.requester === user.username)\r\n    const profileId = profile.id;\r\n    const url2 = \"http://localhost:4000/addfprofile/\";\r\n    const requesterUrl = url2 + profileId;\r\n    console.log(profileId);\r\n    console.log(requesterUrl);\r\n    Axios({\r\n      method: \"put\",\r\n      params: {\r\n        friend: friends.recipient,\r\n      },\r\n      url: requesterUrl,\r\n    }).then((data) => {\r\n      console.log(data.data);\r\n    });\r\n    const recipientId = myProfileID.mypid;\r\n    console.log(recipientId);\r\n    const recipientUrl = url2 + recipientId;\r\n    console.log(recipientUrl);\r\n    Axios({\r\n      method: \"put\",\r\n      params: {\r\n        friend: friends.requester,\r\n      },\r\n      url: recipientUrl,\r\n    }).then((data) => {\r\n      console.log(data.data);\r\n    });\r\n    Axios({\r\n      method: \"put\",\r\n      data: {\r\n        notification: `${myProfileID.firstName} ${myProfileID.lastName} has accepted your friend request`,\r\n        link: `http://localhost:3000/profile/${myProfileID.mypid}`,\r\n      },\r\n      url: `http://localhost:4000/addnotification/${profile.id}`,\r\n    }).then((data) => {\r\n      console.log(data.data);\r\n      setNotificationPopUp({\r\n        ...notificationPopUp,\r\n        title: \"Friend Request Accepted\",\r\n        message: `You have accepted a friend request from ${profile.firstName} ${profile.lastName}`,\r\n        type: \"success\",\r\n      });\r\n    });\r\n  };\r\n\r\n  const cancelRequest = () => {\r\n    if (friends === null) {\r\n      console.log(\"No friend data found\");\r\n    } else {\r\n      const friendshipId = friends._id;\r\n      const url = \"http://localhost:4000/deleterequest/\";\r\n      const dynamicUrl = url + friendshipId;\r\n      Axios({\r\n        method: \"delete\",\r\n        url: dynamicUrl,\r\n      }).then((data) => {\r\n        const { message } = data.data;\r\n        setMessage(message);\r\n        console.log(message);\r\n        reloadPage();\r\n      });\r\n      const profileId = profile.id;\r\n      const staticurl = \"http://localhost:4000/rffprofile/\";\r\n      const requesterUrl = staticurl + profileId;\r\n      console.log(profileId);\r\n      console.log(requesterUrl);\r\n      Axios({\r\n        method: \"put\",\r\n        params: {\r\n          friend: friends.recipient,\r\n        },\r\n        url: requesterUrl,\r\n      }).then((data) => {\r\n        console.log(data.data);\r\n      });\r\n      const recipientId = myProfileID.mypid;\r\n      console.log(recipientId);\r\n      const recipientUrl = staticurl + recipientId;\r\n      console.log(recipientUrl);\r\n      Axios({\r\n        method: \"put\",\r\n        params: {\r\n          friend: friends.requester,\r\n        },\r\n        url: recipientUrl,\r\n      }).then((data) => {\r\n        console.log(data.data);\r\n      });\r\n      if (friends.status === 2) {\r\n        setNotificationPopUp({\r\n          ...notificationPopUp,\r\n          title: \"Connection Removed\",\r\n          message: `You have removed your connection with ${profile.firstName} ${profile.lastName}`,\r\n          type: \"danger\",\r\n        });\r\n        setTimeout(() => {\r\n          reloadPage();\r\n        }, 5000);\r\n      } else {\r\n        setNotificationPopUp({\r\n          ...notificationPopUp,\r\n          title: \"Friend Request Canceled\",\r\n          message: `You have canceled a friend request from ${profile.firstName} ${profile.lastName}`,\r\n          type: \"danger\",\r\n        });\r\n        setTimeout(() => {\r\n          reloadPage();\r\n        }, 5000);\r\n      }\r\n    }\r\n  };\r\n\r\n  const reloadPage = () => {\r\n    window.location.reload(false);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      {!isAuthenticated ? <Redirect to=\"/login\" /> : null}\r\n      {notificationPopUp.message !== \"\" ? (\r\n        <NotificationPopUp notificationPopUp={notificationPopUp} />\r\n      ) : null}\r\n      {/* {!props.haveProfile ? <Redirect to=\"/myprofile\" /> : null} */}\r\n      <div>\r\n        <div>\r\n          {!profile.photoUrl ? (\r\n            <img\r\n              src={defaultProfilePhoto}\r\n              alt=\"defaultProfilePhoto\"\r\n              style={{ width: \"200px\", height: \"200px\" }}\r\n            ></img>\r\n          ) : (\r\n            <img\r\n              src={profile.photoUrl}\r\n              style={{ width: \"200px\", height: \"200px\" }}\r\n              alt=\"profilePhoto\"\r\n            ></img>\r\n          )}\r\n          <h2>\r\n            {!profile.username ? null : <h2>Username: {profile.username}</h2>}\r\n            {!profile.username ? null : getFriendshipStatus()}\r\n          </h2>\r\n          {/* <h3>\r\n            {!myprofileId ? null : <h3>My Profile Id: {myprofileId} </h3>}\r\n          </h3> */}\r\n          <h3>\r\n            {!myProfileID ? null : <h3>My Profile Id: {myProfileID.mypid}</h3>}\r\n          </h3>\r\n          <h5>First Name: {profile.firstName}</h5>\r\n          <h5>Last Name: {profile.lastName}</h5>\r\n          <h5>Email: {profile.email}</h5>\r\n          <h5>College Name: {profile.collegeName}</h5>\r\n          <h5>Location: {profile.location}</h5>\r\n          <h5>IQ: {profile.IQ}</h5>\r\n          <h5>About Me: {profile.about}</h5>\r\n          {!profile.isFaculty ? <h3>Student</h3> : <h3>Education Faculty</h3>}\r\n          {!isFriends ? null : (\r\n            <div>\r\n              {profile.friends.length === 0 ? null : (\r\n                <div>\r\n                  {profile.friends.map((friend) => (\r\n                    <div>\r\n                      <h5>Friend's Username: {friend}</h5>\r\n                    </div>\r\n                  ))}\r\n                </div>\r\n              )}\r\n            </div>\r\n          )}\r\n          {!isFriends ? (\r\n            <div>\r\n              {friends.status === 1 ? (\r\n                <div>\r\n                  {friends.requester === user.username ? (\r\n                    <div>\r\n                      <button className=\"btn btn-secondary\" disabled>\r\n                        Sent Request\r\n                      </button>\r\n                      <button\r\n                        className=\"btn btn-danger\"\r\n                        onClick={cancelRequest}\r\n                      >\r\n                        Cancel Request\r\n                      </button>\r\n                    </div>\r\n                  ) : (\r\n                    <div>\r\n                      <button\r\n                        className=\"btn btn-success\"\r\n                        onClick={acceptRequest}\r\n                      >\r\n                        Accept Request\r\n                      </button>\r\n                      <button\r\n                        className=\"btn btn-danger\"\r\n                        onClick={cancelRequest}\r\n                      >\r\n                        Delete Request\r\n                      </button>\r\n                    </div>\r\n                  )}\r\n                </div>\r\n              ) : (\r\n                <div>\r\n                  <button className=\"btn btn-primary\" onClick={sendRequest}>\r\n                    Send Request\r\n                  </button>\r\n                </div>\r\n              )}\r\n            </div>\r\n          ) : (\r\n            <div>\r\n              <button className=\"btn btn-danger\" onClick={cancelRequest}>\r\n                Remove Connection\r\n              </button>\r\n            </div>\r\n          )}\r\n          {message ? <Message message={message} /> : null}\r\n          <div>\r\n            {!isFriends ? <h1>not friends</h1> : <h1>friends</h1>}\r\n            {!isFriends ? null : (\r\n              <div>\r\n                {educations.map((education) => (\r\n                  <div\r\n                    className=\"card border-dark bg-light mb-3\"\r\n                    key={education._id}\r\n                  >\r\n                    <h4 className=\"item\" value={education.collegeName}>\r\n                      College Name: {education.collegeName}\r\n                    </h4>\r\n                    <h4 className=\"item\" value={education.collegeLocation}>\r\n                      College Location: {education.collegeLocation}\r\n                    </h4>\r\n                    <h4 className=\"item\" value={education.courseName}>\r\n                      Course Name: {education.courseName}\r\n                    </h4>\r\n                    <h4 className=\"item\" value={education.graduationDate}>\r\n                      Graduation Date: {education.graduationDate.slice(0, 10)}\r\n                    </h4>\r\n                    {!education.currentCollege ? null : (\r\n                      <h4 className=\"item\" value={education.currentCollege}>\r\n                        Current College\r\n                      </h4>\r\n                    )}\r\n                  </div>\r\n                ))}\r\n                {works.map((work) => (\r\n                  <div\r\n                    className=\"card border-dark bg-light mb-3\"\r\n                    key={work._id}\r\n                  >\r\n                    <h4 className=\"item\" value={work.position}>\r\n                      College Name: {work.position}\r\n                    </h4>\r\n                    <h4 className=\"item\" value={work.employerName}>\r\n                      College Location: {work.employerName}\r\n                    </h4>\r\n                    <h4 className=\"item\">\r\n                      Start Date: {work.startDate.slice(0, 10)}\r\n                    </h4>\r\n                    {!work.endDate ? null : (\r\n                      <h4 className=\"item\">\r\n                        End Date: {work.endDate.slice(0, 10)}\r\n                      </h4>\r\n                    )}\r\n                    {!work.currentJob ? null : (\r\n                      <h4 className=\"item\">Current Job</h4>\r\n                    )}\r\n                  </div>\r\n                ))}\r\n              </div>\r\n            )}\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Profile;\r\n","C:\\Users\\savan patel\\Desktop\\MyAcadamia\\MyAcademia\\frontend\\src\\Components\\ProfileForm.js",[],"C:\\Users\\savan patel\\Desktop\\MyAcadamia\\MyAcademia\\frontend\\src\\Components\\MyProfile.js",["146","147","148","149","150","151","152","153","154"],"C:\\Users\\savan patel\\Desktop\\MyAcadamia\\MyAcademia\\frontend\\src\\Components\\Message.js",[],"C:\\Users\\savan patel\\Desktop\\MyAcadamia\\MyAcademia\\frontend\\src\\utils\\refreshToken.js",[],"C:\\Users\\savan patel\\Desktop\\MyAcadamia\\MyAcademia\\frontend\\src\\Components\\NotificationPopUp.js",[],"C:\\Users\\savan patel\\Desktop\\MyAcadamia\\MyAcademia\\frontend\\src\\Components\\IQTest.js",["155","156","157","158","159","160"],{"ruleId":"161","replacedBy":"162"},{"ruleId":"163","replacedBy":"164"},{"ruleId":"165","severity":1,"message":"166","line":6,"column":1,"nodeType":"167","endLine":45,"endColumn":3},{"ruleId":"165","severity":1,"message":"168","line":1,"column":1,"nodeType":"167","endLine":33,"endColumn":3},{"ruleId":"169","severity":1,"message":"170","line":8,"column":34,"nodeType":"171","messageId":"172","endLine":8,"endColumn":45},{"ruleId":"173","severity":1,"message":"174","line":32,"column":6,"nodeType":"175","endLine":32,"endColumn":8,"suggestions":"176"},{"ruleId":"169","severity":1,"message":"170","line":6,"column":34,"nodeType":"171","messageId":"172","endLine":6,"endColumn":45},{"ruleId":"169","severity":1,"message":"177","line":1,"column":17,"nodeType":"171","messageId":"172","endLine":1,"endColumn":27},{"ruleId":"169","severity":1,"message":"178","line":3,"column":10,"nodeType":"171","messageId":"172","endLine":3,"endColumn":21},{"ruleId":"169","severity":1,"message":"179","line":10,"column":5,"nodeType":"171","messageId":"172","endLine":10,"endColumn":9},{"ruleId":"169","severity":1,"message":"170","line":13,"column":10,"nodeType":"171","messageId":"172","endLine":13,"endColumn":21},{"ruleId":"169","severity":1,"message":"180","line":13,"column":23,"nodeType":"171","messageId":"172","endLine":13,"endColumn":37},{"ruleId":"169","severity":1,"message":"181","line":6,"column":8,"nodeType":"171","messageId":"172","endLine":6,"endColumn":13},{"ruleId":"169","severity":1,"message":"170","line":9,"column":34,"nodeType":"171","messageId":"172","endLine":9,"endColumn":45},{"ruleId":"173","severity":1,"message":"182","line":59,"column":6,"nodeType":"175","endLine":59,"endColumn":8,"suggestions":"183"},{"ruleId":"184","severity":1,"message":"185","line":78,"column":15,"nodeType":"186","messageId":"187","endLine":78,"endColumn":17},{"ruleId":"188","severity":1,"message":"189","line":80,"column":9,"nodeType":"190","endLine":81,"endColumn":28},{"ruleId":"184","severity":1,"message":"185","line":84,"column":21,"nodeType":"186","messageId":"187","endLine":84,"endColumn":23},{"ruleId":"191","severity":1,"message":"192","line":86,"column":9,"nodeType":"190","endLine":86,"endColumn":61},{"ruleId":"193","severity":1,"message":"194","line":88,"column":14,"nodeType":"195","messageId":"196","endLine":88,"endColumn":28},{"ruleId":"169","severity":1,"message":"170","line":6,"column":34,"nodeType":"171","messageId":"172","endLine":6,"endColumn":45},{"ruleId":"169","severity":1,"message":"197","line":3,"column":10,"nodeType":"171","messageId":"172","endLine":3,"endColumn":14},{"ruleId":"169","severity":1,"message":"198","line":5,"column":8,"nodeType":"171","messageId":"172","endLine":5,"endColumn":15},{"ruleId":"169","severity":1,"message":"199","line":6,"column":8,"nodeType":"171","messageId":"172","endLine":6,"endColumn":15},{"ruleId":"169","severity":1,"message":"179","line":10,"column":28,"nodeType":"171","messageId":"172","endLine":10,"endColumn":32},{"ruleId":"169","severity":1,"message":"170","line":10,"column":34,"nodeType":"171","messageId":"172","endLine":10,"endColumn":45},{"ruleId":"169","severity":1,"message":"200","line":13,"column":10,"nodeType":"171","messageId":"172","endLine":13,"endColumn":19},{"ruleId":"169","severity":1,"message":"201","line":14,"column":10,"nodeType":"171","messageId":"172","endLine":14,"endColumn":17},{"ruleId":"169","severity":1,"message":"202","line":14,"column":19,"nodeType":"171","messageId":"172","endLine":14,"endColumn":29},{"ruleId":"169","severity":1,"message":"203","line":16,"column":10,"nodeType":"171","messageId":"172","endLine":16,"endColumn":17},{"ruleId":"169","severity":1,"message":"204","line":30,"column":9,"nodeType":"171","messageId":"172","endLine":30,"endColumn":17},{"ruleId":"169","severity":1,"message":"205","line":75,"column":9,"nodeType":"171","messageId":"172","endLine":75,"endColumn":19},{"ruleId":"169","severity":1,"message":"197","line":3,"column":10,"nodeType":"171","messageId":"172","endLine":3,"endColumn":14},{"ruleId":"169","severity":1,"message":"206","line":4,"column":10,"nodeType":"171","messageId":"172","endLine":4,"endColumn":15},{"ruleId":"169","severity":1,"message":"207","line":7,"column":8,"nodeType":"171","messageId":"172","endLine":7,"endColumn":14},{"ruleId":"169","severity":1,"message":"208","line":9,"column":8,"nodeType":"171","messageId":"172","endLine":9,"endColumn":17},{"ruleId":"169","severity":1,"message":"170","line":13,"column":34,"nodeType":"171","messageId":"172","endLine":13,"endColumn":45},{"ruleId":"169","severity":1,"message":"209","line":17,"column":10,"nodeType":"171","messageId":"172","endLine":17,"endColumn":21},{"ruleId":"169","severity":1,"message":"210","line":17,"column":23,"nodeType":"171","messageId":"172","endLine":17,"endColumn":37},{"ruleId":"169","severity":1,"message":"211","line":42,"column":10,"nodeType":"171","messageId":"172","endLine":42,"endColumn":21},{"ruleId":"169","severity":1,"message":"212","line":43,"column":10,"nodeType":"171","messageId":"172","endLine":43,"endColumn":20},{"ruleId":"169","severity":1,"message":"213","line":43,"column":22,"nodeType":"171","messageId":"172","endLine":43,"endColumn":35},{"ruleId":"169","severity":1,"message":"214","line":49,"column":7,"nodeType":"171","messageId":"172","endLine":49,"endColumn":14},{"ruleId":"173","severity":1,"message":"215","line":102,"column":6,"nodeType":"175","endLine":102,"endColumn":8,"suggestions":"216"},{"ruleId":"169","severity":1,"message":"217","line":1,"column":40,"nodeType":"171","messageId":"172","endLine":1,"endColumn":46},{"ruleId":"169","severity":1,"message":"199","line":7,"column":8,"nodeType":"171","messageId":"172","endLine":7,"endColumn":15},{"ruleId":"169","severity":1,"message":"218","line":8,"column":8,"nodeType":"171","messageId":"172","endLine":8,"endColumn":19},{"ruleId":"169","severity":1,"message":"170","line":12,"column":34,"nodeType":"171","messageId":"172","endLine":12,"endColumn":45},{"ruleId":"169","severity":1,"message":"219","line":12,"column":47,"nodeType":"171","messageId":"172","endLine":12,"endColumn":58},{"ruleId":"169","severity":1,"message":"220","line":15,"column":9,"nodeType":"171","messageId":"172","endLine":15,"endColumn":20},{"ruleId":"173","severity":1,"message":"182","line":120,"column":6,"nodeType":"175","endLine":120,"endColumn":8,"suggestions":"221"},{"ruleId":"169","severity":1,"message":"222","line":142,"column":9,"nodeType":"171","messageId":"172","endLine":142,"endColumn":18},{"ruleId":"223","severity":1,"message":"224","line":402,"column":15,"nodeType":"190","endLine":402,"endColumn":38},{"ruleId":"169","severity":1,"message":"225","line":14,"column":29,"nodeType":"171","messageId":"172","endLine":14,"endColumn":38},{"ruleId":"169","severity":1,"message":"226","line":14,"column":40,"nodeType":"171","messageId":"172","endLine":14,"endColumn":45},{"ruleId":"169","severity":1,"message":"227","line":14,"column":54,"nodeType":"171","messageId":"172","endLine":14,"endColumn":59},{"ruleId":"173","severity":1,"message":"228","line":54,"column":6,"nodeType":"175","endLine":54,"endColumn":8,"suggestions":"229"},{"ruleId":"169","severity":1,"message":"204","line":56,"column":9,"nodeType":"171","messageId":"172","endLine":56,"endColumn":17},{"ruleId":"169","severity":1,"message":"230","line":82,"column":11,"nodeType":"171","messageId":"172","endLine":82,"endColumn":29},"no-native-reassign",["231"],"no-negated-in-lhs",["232"],"import/no-anonymous-default-export","Assign arrow function to a variable before exporting as module default","ExportDefaultDeclaration","Assign object to a variable before exporting as module default","no-unused-vars","'googleLogin' is assigned a value but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'user.username'. Either include it or remove the dependency array.","ArrayExpression",["233"],"'useContext' is defined but never used.","'AuthContext' is defined but never used.","'user' is assigned a value but never used.","'setGoogleLogin' is assigned a value but never used.","'style' is defined but never used.","React Hook useEffect has missing dependencies: 'profile' and 'user.username'. Either include them or remove the dependency array. You can also do a functional update 'setProfile(p => ...)' if you only need 'profile' in the 'setProfile' call.",["234"],"eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","jsx-a11y/iframe-has-title","<iframe> elements must have a unique title property.","JSXOpeningElement","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","no-cond-assign","Expected a conditional expression and instead saw an assignment.","AssignmentExpression","missing","'Link' is defined but never used.","'Message' is defined but never used.","'Profile' is defined but never used.","'firstName' is assigned a value but never used.","'loading' is assigned a value but never used.","'setLoading' is assigned a value but never used.","'profile' is assigned a value but never used.","'onChange' is assigned a value but never used.","'getProfile' is assigned a value but never used.","'store' is defined but never used.","'Search' is defined but never used.","'MyProfile' is defined but never used.","'haveProfile' is assigned a value but never used.","'setHaveProfile' is assigned a value but never used.","'requestSent' is assigned a value but never used.","'friendship' is assigned a value but never used.","'setFriendship' is assigned a value but never used.","'timerID' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'myProfileID', 'profile', and 'user.username'. Either include them or remove the dependency array. You can also do a functional update 'setProfile(p => ...)' if you only need 'profile' in the 'setProfile' call.",["235"],"'useRef' is defined but never used.","'AuthService' is defined but never used.","'myprofileId' is assigned a value but never used.","'authContext' is assigned a value but never used.",["236"],"'resetForm' is assigned a value but never used.","jsx-a11y/anchor-has-content","Anchors must have content and the content must be accessible by a screen reader.","'isRunning' is assigned a value but never used.","'start' is assigned a value but never used.","'reset' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'myProfile' and 'user.username'. Either include them or remove the dependency array. You can also do a functional update 'setMyProfile(m => ...)' if you only need 'myProfile' in the 'setMyProfile' call.",["237"],"'secondsCalculation' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"238","fix":"239"},{"desc":"240","fix":"241"},{"desc":"242","fix":"243"},{"desc":"240","fix":"244"},{"desc":"245","fix":"246"},"Update the dependencies array to be: [user.username]",{"range":"247","text":"248"},"Update the dependencies array to be: [profile, user.username]",{"range":"249","text":"250"},"Update the dependencies array to be: [myProfileID, profile, user.username]",{"range":"251","text":"252"},{"range":"253","text":"250"},"Update the dependencies array to be: [myProfile, user.username]",{"range":"254","text":"255"},[1064,1066],"[user.username]",[1610,1612],"[profile, user.username]",[3073,3075],"[myProfileID, profile, user.username]",[3479,3481],[1741,1743],"[myProfile, user.username]"]